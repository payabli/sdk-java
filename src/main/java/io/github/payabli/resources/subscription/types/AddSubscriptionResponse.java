/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.resources.subscription.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AddSubscriptionResponse.Builder.class)
public final class AddSubscriptionResponse {
    private final Optional<Long> customerId;

    private final Optional<String> responseText;

    private final Optional<Boolean> isSuccess;

    private final int responseData;

    private final Map<String, Object> additionalProperties;

    private AddSubscriptionResponse(
            Optional<Long> customerId,
            Optional<String> responseText,
            Optional<Boolean> isSuccess,
            int responseData,
            Map<String, Object> additionalProperties) {
        this.customerId = customerId;
        this.responseText = responseText;
        this.isSuccess = isSuccess;
        this.responseData = responseData;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("customerId")
    public Optional<Long> getCustomerId() {
        return customerId;
    }

    @JsonProperty("responseText")
    public Optional<String> getResponseText() {
        return responseText;
    }

    @JsonProperty("isSuccess")
    public Optional<Boolean> getIsSuccess() {
        return isSuccess;
    }

    /**
     * @return The identifier of the newly created subscription.
     */
    @JsonProperty("responseData")
    public int getResponseData() {
        return responseData;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AddSubscriptionResponse && equalTo((AddSubscriptionResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AddSubscriptionResponse other) {
        return customerId.equals(other.customerId)
                && responseText.equals(other.responseText)
                && isSuccess.equals(other.isSuccess)
                && responseData == other.responseData;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.customerId, this.responseText, this.isSuccess, this.responseData);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ResponseDataStage builder() {
        return new Builder();
    }

    public interface ResponseDataStage {
        /**
         * <p>The identifier of the newly created subscription.</p>
         */
        _FinalStage responseData(int responseData);

        Builder from(AddSubscriptionResponse other);
    }

    public interface _FinalStage {
        AddSubscriptionResponse build();

        _FinalStage customerId(Optional<Long> customerId);

        _FinalStage customerId(Long customerId);

        _FinalStage responseText(Optional<String> responseText);

        _FinalStage responseText(String responseText);

        _FinalStage isSuccess(Optional<Boolean> isSuccess);

        _FinalStage isSuccess(Boolean isSuccess);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ResponseDataStage, _FinalStage {
        private int responseData;

        private Optional<Boolean> isSuccess = Optional.empty();

        private Optional<String> responseText = Optional.empty();

        private Optional<Long> customerId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AddSubscriptionResponse other) {
            customerId(other.getCustomerId());
            responseText(other.getResponseText());
            isSuccess(other.getIsSuccess());
            responseData(other.getResponseData());
            return this;
        }

        /**
         * <p>The identifier of the newly created subscription.</p>
         * <p>The identifier of the newly created subscription.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("responseData")
        public _FinalStage responseData(int responseData) {
            this.responseData = responseData;
            return this;
        }

        @java.lang.Override
        public _FinalStage isSuccess(Boolean isSuccess) {
            this.isSuccess = Optional.ofNullable(isSuccess);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "isSuccess", nulls = Nulls.SKIP)
        public _FinalStage isSuccess(Optional<Boolean> isSuccess) {
            this.isSuccess = isSuccess;
            return this;
        }

        @java.lang.Override
        public _FinalStage responseText(String responseText) {
            this.responseText = Optional.ofNullable(responseText);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "responseText", nulls = Nulls.SKIP)
        public _FinalStage responseText(Optional<String> responseText) {
            this.responseText = responseText;
            return this;
        }

        @java.lang.Override
        public _FinalStage customerId(Long customerId) {
            this.customerId = Optional.ofNullable(customerId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "customerId", nulls = Nulls.SKIP)
        public _FinalStage customerId(Optional<Long> customerId) {
            this.customerId = customerId;
            return this;
        }

        @java.lang.Override
        public AddSubscriptionResponse build() {
            return new AddSubscriptionResponse(customerId, responseText, isSuccess, responseData, additionalProperties);
        }
    }
}
