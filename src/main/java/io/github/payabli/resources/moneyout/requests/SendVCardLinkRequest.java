/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.resources.moneyout.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SendVCardLinkRequest.Builder.class)
public final class SendVCardLinkRequest {
    private final String transId;

    private final Map<String, Object> additionalProperties;

    private SendVCardLinkRequest(String transId, Map<String, Object> additionalProperties) {
        this.transId = transId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The transaction ID of the virtual card payout. The ID is returned as <code>ReferenceId</code> in the response when you authorize a payout with POST /MoneyOut/authorize.
     */
    @JsonProperty("transId")
    public String getTransId() {
        return transId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SendVCardLinkRequest && equalTo((SendVCardLinkRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SendVCardLinkRequest other) {
        return transId.equals(other.transId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.transId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TransIdStage builder() {
        return new Builder();
    }

    public interface TransIdStage {
        /**
         * <p>The transaction ID of the virtual card payout. The ID is returned as <code>ReferenceId</code> in the response when you authorize a payout with POST /MoneyOut/authorize.</p>
         */
        _FinalStage transId(@NotNull String transId);

        Builder from(SendVCardLinkRequest other);
    }

    public interface _FinalStage {
        SendVCardLinkRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TransIdStage, _FinalStage {
        private String transId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(SendVCardLinkRequest other) {
            transId(other.getTransId());
            return this;
        }

        /**
         * <p>The transaction ID of the virtual card payout. The ID is returned as <code>ReferenceId</code> in the response when you authorize a payout with POST /MoneyOut/authorize.</p>
         * <p>The transaction ID of the virtual card payout. The ID is returned as <code>ReferenceId</code> in the response when you authorize a payout with POST /MoneyOut/authorize.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("transId")
        public _FinalStage transId(@NotNull String transId) {
            this.transId = Objects.requireNonNull(transId, "transId must not be null");
            return this;
        }

        @java.lang.Override
        public SendVCardLinkRequest build() {
            return new SendVCardLinkRequest(transId, additionalProperties);
        }
    }
}
