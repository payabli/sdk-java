/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.resources.paymentlink.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.core.ObjectMappers;
import io.github.payabli.resources.paymentlink.types.PaymentPageRequestBody;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = PayLinkDataInvoice.Builder.class)
public final class PayLinkDataInvoice {
    private final Optional<String> idempotencyKey;

    private final Optional<Boolean> amountFixed;

    private final Optional<String> mail2;

    private final PaymentPageRequestBody body;

    private final Map<String, Object> additionalProperties;

    private PayLinkDataInvoice(
            Optional<String> idempotencyKey,
            Optional<Boolean> amountFixed,
            Optional<String> mail2,
            PaymentPageRequestBody body,
            Map<String, Object> additionalProperties) {
        this.idempotencyKey = idempotencyKey;
        this.amountFixed = amountFixed;
        this.mail2 = mail2;
        this.body = body;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("idempotencyKey")
    public Optional<String> getIdempotencyKey() {
        return idempotencyKey;
    }

    /**
     * @return Indicates whether customer can modify the payment amount. A value of <code>true</code> means the amount isn't modifiable, a value <code>false</code> means the payor can modify the amount to pay.
     */
    @JsonProperty("amountFixed")
    public Optional<Boolean> getAmountFixed() {
        return amountFixed;
    }

    /**
     * @return List of recipient email addresses. When there is more than one, separate them by a semicolon (;).
     */
    @JsonProperty("mail2")
    public Optional<String> getMail2() {
        return mail2;
    }

    @JsonProperty("body")
    public PaymentPageRequestBody getBody() {
        return body;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PayLinkDataInvoice && equalTo((PayLinkDataInvoice) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PayLinkDataInvoice other) {
        return idempotencyKey.equals(other.idempotencyKey)
                && amountFixed.equals(other.amountFixed)
                && mail2.equals(other.mail2)
                && body.equals(other.body);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.idempotencyKey, this.amountFixed, this.mail2, this.body);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static BodyStage builder() {
        return new Builder();
    }

    public interface BodyStage {
        _FinalStage body(@NotNull PaymentPageRequestBody body);

        Builder from(PayLinkDataInvoice other);
    }

    public interface _FinalStage {
        PayLinkDataInvoice build();

        _FinalStage idempotencyKey(Optional<String> idempotencyKey);

        _FinalStage idempotencyKey(String idempotencyKey);

        /**
         * <p>Indicates whether customer can modify the payment amount. A value of <code>true</code> means the amount isn't modifiable, a value <code>false</code> means the payor can modify the amount to pay.</p>
         */
        _FinalStage amountFixed(Optional<Boolean> amountFixed);

        _FinalStage amountFixed(Boolean amountFixed);

        /**
         * <p>List of recipient email addresses. When there is more than one, separate them by a semicolon (;).</p>
         */
        _FinalStage mail2(Optional<String> mail2);

        _FinalStage mail2(String mail2);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements BodyStage, _FinalStage {
        private PaymentPageRequestBody body;

        private Optional<String> mail2 = Optional.empty();

        private Optional<Boolean> amountFixed = Optional.empty();

        private Optional<String> idempotencyKey = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(PayLinkDataInvoice other) {
            idempotencyKey(other.getIdempotencyKey());
            amountFixed(other.getAmountFixed());
            mail2(other.getMail2());
            body(other.getBody());
            return this;
        }

        @java.lang.Override
        @JsonSetter("body")
        public _FinalStage body(@NotNull PaymentPageRequestBody body) {
            this.body = Objects.requireNonNull(body, "body must not be null");
            return this;
        }

        /**
         * <p>List of recipient email addresses. When there is more than one, separate them by a semicolon (;).</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage mail2(String mail2) {
            this.mail2 = Optional.ofNullable(mail2);
            return this;
        }

        /**
         * <p>List of recipient email addresses. When there is more than one, separate them by a semicolon (;).</p>
         */
        @java.lang.Override
        @JsonSetter(value = "mail2", nulls = Nulls.SKIP)
        public _FinalStage mail2(Optional<String> mail2) {
            this.mail2 = mail2;
            return this;
        }

        /**
         * <p>Indicates whether customer can modify the payment amount. A value of <code>true</code> means the amount isn't modifiable, a value <code>false</code> means the payor can modify the amount to pay.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage amountFixed(Boolean amountFixed) {
            this.amountFixed = Optional.ofNullable(amountFixed);
            return this;
        }

        /**
         * <p>Indicates whether customer can modify the payment amount. A value of <code>true</code> means the amount isn't modifiable, a value <code>false</code> means the payor can modify the amount to pay.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "amountFixed", nulls = Nulls.SKIP)
        public _FinalStage amountFixed(Optional<Boolean> amountFixed) {
            this.amountFixed = amountFixed;
            return this;
        }

        @java.lang.Override
        public _FinalStage idempotencyKey(String idempotencyKey) {
            this.idempotencyKey = Optional.ofNullable(idempotencyKey);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "idempotencyKey", nulls = Nulls.SKIP)
        public _FinalStage idempotencyKey(Optional<String> idempotencyKey) {
            this.idempotencyKey = idempotencyKey;
            return this;
        }

        @java.lang.Override
        public PayLinkDataInvoice build() {
            return new PayLinkDataInvoice(idempotencyKey, amountFixed, mail2, body, additionalProperties);
        }
    }
}
