/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.resources.user.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = MfaValidationData.Builder.class)
public final class MfaValidationData {
    private final Optional<String> mfaCode;

    private final Optional<String> mfaValidationCode;

    private final Map<String, Object> additionalProperties;

    private MfaValidationData(
            Optional<String> mfaCode, Optional<String> mfaValidationCode, Map<String, Object> additionalProperties) {
        this.mfaCode = mfaCode;
        this.mfaValidationCode = mfaValidationCode;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("mfaCode")
    public Optional<String> getMfaCode() {
        return mfaCode;
    }

    @JsonProperty("mfaValidationCode")
    public Optional<String> getMfaValidationCode() {
        return mfaValidationCode;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof MfaValidationData && equalTo((MfaValidationData) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(MfaValidationData other) {
        return mfaCode.equals(other.mfaCode) && mfaValidationCode.equals(other.mfaValidationCode);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.mfaCode, this.mfaValidationCode);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> mfaCode = Optional.empty();

        private Optional<String> mfaValidationCode = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(MfaValidationData other) {
            mfaCode(other.getMfaCode());
            mfaValidationCode(other.getMfaValidationCode());
            return this;
        }

        @JsonSetter(value = "mfaCode", nulls = Nulls.SKIP)
        public Builder mfaCode(Optional<String> mfaCode) {
            this.mfaCode = mfaCode;
            return this;
        }

        public Builder mfaCode(String mfaCode) {
            this.mfaCode = Optional.ofNullable(mfaCode);
            return this;
        }

        @JsonSetter(value = "mfaValidationCode", nulls = Nulls.SKIP)
        public Builder mfaValidationCode(Optional<String> mfaValidationCode) {
            this.mfaValidationCode = mfaValidationCode;
            return this;
        }

        public Builder mfaValidationCode(String mfaValidationCode) {
            this.mfaValidationCode = Optional.ofNullable(mfaValidationCode);
            return this;
        }

        public MfaValidationData build() {
            return new MfaValidationData(mfaCode, mfaValidationCode, additionalProperties);
        }
    }
}
