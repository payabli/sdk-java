/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.resources.moneyin.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CaptureRequest.Builder.class)
public final class CaptureRequest {
    private final CapturePaymentDetails paymentDetails;

    private final Map<String, Object> additionalProperties;

    private CaptureRequest(CapturePaymentDetails paymentDetails, Map<String, Object> additionalProperties) {
        this.paymentDetails = paymentDetails;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("paymentDetails")
    public CapturePaymentDetails getPaymentDetails() {
        return paymentDetails;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CaptureRequest && equalTo((CaptureRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CaptureRequest other) {
        return paymentDetails.equals(other.paymentDetails);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.paymentDetails);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static PaymentDetailsStage builder() {
        return new Builder();
    }

    public interface PaymentDetailsStage {
        _FinalStage paymentDetails(@NotNull CapturePaymentDetails paymentDetails);

        Builder from(CaptureRequest other);
    }

    public interface _FinalStage {
        CaptureRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements PaymentDetailsStage, _FinalStage {
        private CapturePaymentDetails paymentDetails;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CaptureRequest other) {
            paymentDetails(other.getPaymentDetails());
            return this;
        }

        @java.lang.Override
        @JsonSetter("paymentDetails")
        public _FinalStage paymentDetails(@NotNull CapturePaymentDetails paymentDetails) {
            this.paymentDetails = Objects.requireNonNull(paymentDetails, "paymentDetails must not be null");
            return this;
        }

        @java.lang.Override
        public CaptureRequest build() {
            return new CaptureRequest(paymentDetails, additionalProperties);
        }
    }
}
