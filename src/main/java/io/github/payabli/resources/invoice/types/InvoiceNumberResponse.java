/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.resources.invoice.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = InvoiceNumberResponse.Builder.class)
public final class InvoiceNumberResponse {
    private final boolean isSuccess;

    private final String responseText;

    private final String responseData;

    private final Map<String, Object> additionalProperties;

    private InvoiceNumberResponse(
            boolean isSuccess, String responseText, String responseData, Map<String, Object> additionalProperties) {
        this.isSuccess = isSuccess;
        this.responseText = responseText;
        this.responseData = responseData;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("isSuccess")
    public boolean getIsSuccess() {
        return isSuccess;
    }

    @JsonProperty("responseText")
    public String getResponseText() {
        return responseText;
    }

    /**
     * @return If <code>isSuccess</code> = true, this contains the next available invoice number in the format defined by paypoint settings. If <code>isSuccess</code> = false, this contains the reason for the error.
     */
    @JsonProperty("responseData")
    public String getResponseData() {
        return responseData;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof InvoiceNumberResponse && equalTo((InvoiceNumberResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(InvoiceNumberResponse other) {
        return isSuccess == other.isSuccess
                && responseText.equals(other.responseText)
                && responseData.equals(other.responseData);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.isSuccess, this.responseText, this.responseData);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IsSuccessStage builder() {
        return new Builder();
    }

    public interface IsSuccessStage {
        ResponseTextStage isSuccess(boolean isSuccess);

        Builder from(InvoiceNumberResponse other);
    }

    public interface ResponseTextStage {
        ResponseDataStage responseText(@NotNull String responseText);
    }

    public interface ResponseDataStage {
        /**
         * <p>If <code>isSuccess</code> = true, this contains the next available invoice number in the format defined by paypoint settings. If <code>isSuccess</code> = false, this contains the reason for the error.</p>
         */
        _FinalStage responseData(@NotNull String responseData);
    }

    public interface _FinalStage {
        InvoiceNumberResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IsSuccessStage, ResponseTextStage, ResponseDataStage, _FinalStage {
        private boolean isSuccess;

        private String responseText;

        private String responseData;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(InvoiceNumberResponse other) {
            isSuccess(other.getIsSuccess());
            responseText(other.getResponseText());
            responseData(other.getResponseData());
            return this;
        }

        @java.lang.Override
        @JsonSetter("isSuccess")
        public ResponseTextStage isSuccess(boolean isSuccess) {
            this.isSuccess = isSuccess;
            return this;
        }

        @java.lang.Override
        @JsonSetter("responseText")
        public ResponseDataStage responseText(@NotNull String responseText) {
            this.responseText = Objects.requireNonNull(responseText, "responseText must not be null");
            return this;
        }

        /**
         * <p>If <code>isSuccess</code> = true, this contains the next available invoice number in the format defined by paypoint settings. If <code>isSuccess</code> = false, this contains the reason for the error.</p>
         * <p>If <code>isSuccess</code> = true, this contains the next available invoice number in the format defined by paypoint settings. If <code>isSuccess</code> = false, this contains the reason for the error.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("responseData")
        public _FinalStage responseData(@NotNull String responseData) {
            this.responseData = Objects.requireNonNull(responseData, "responseData must not be null");
            return this;
        }

        @java.lang.Override
        public InvoiceNumberResponse build() {
            return new InvoiceNumberResponse(isSuccess, responseText, responseData, additionalProperties);
        }
    }
}
