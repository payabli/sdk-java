/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.resources.tokenstorage.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AddMethodResponseResponseData.Builder.class)
public final class AddMethodResponseResponseData {
    private final Optional<Long> customerId;

    private final Optional<String> methodReferenceId;

    private final Optional<String> referenceId;

    private final Optional<Integer> resultCode;

    private final Optional<String> resultText;

    private final Map<String, Object> additionalProperties;

    private AddMethodResponseResponseData(
            Optional<Long> customerId,
            Optional<String> methodReferenceId,
            Optional<String> referenceId,
            Optional<Integer> resultCode,
            Optional<String> resultText,
            Map<String, Object> additionalProperties) {
        this.customerId = customerId;
        this.methodReferenceId = methodReferenceId;
        this.referenceId = referenceId;
        this.resultCode = resultCode;
        this.resultText = resultText;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Internal unique ID of customer owner of the stored method.
     * <p>Returns <code>0</code> if the method wasn't assigned to an existing customer or no customer was created.&quot;</p>
     */
    @JsonProperty("CustomerId")
    public Optional<Long> getCustomerId() {
        return customerId;
    }

    @JsonProperty("methodReferenceId")
    public Optional<String> getMethodReferenceId() {
        return methodReferenceId;
    }

    /**
     * @return Stored method identifier in Payabli platform. This ID is used to manage the stored method.
     */
    @JsonProperty("ReferenceId")
    public Optional<String> getReferenceId() {
        return referenceId;
    }

    @JsonProperty("ResultCode")
    public Optional<Integer> getResultCode() {
        return resultCode;
    }

    @JsonProperty("ResultText")
    public Optional<String> getResultText() {
        return resultText;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AddMethodResponseResponseData && equalTo((AddMethodResponseResponseData) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AddMethodResponseResponseData other) {
        return customerId.equals(other.customerId)
                && methodReferenceId.equals(other.methodReferenceId)
                && referenceId.equals(other.referenceId)
                && resultCode.equals(other.resultCode)
                && resultText.equals(other.resultText);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.customerId, this.methodReferenceId, this.referenceId, this.resultCode, this.resultText);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Long> customerId = Optional.empty();

        private Optional<String> methodReferenceId = Optional.empty();

        private Optional<String> referenceId = Optional.empty();

        private Optional<Integer> resultCode = Optional.empty();

        private Optional<String> resultText = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(AddMethodResponseResponseData other) {
            customerId(other.getCustomerId());
            methodReferenceId(other.getMethodReferenceId());
            referenceId(other.getReferenceId());
            resultCode(other.getResultCode());
            resultText(other.getResultText());
            return this;
        }

        /**
         * <p>Internal unique ID of customer owner of the stored method.</p>
         * <p>Returns <code>0</code> if the method wasn't assigned to an existing customer or no customer was created.&quot;</p>
         */
        @JsonSetter(value = "CustomerId", nulls = Nulls.SKIP)
        public Builder customerId(Optional<Long> customerId) {
            this.customerId = customerId;
            return this;
        }

        public Builder customerId(Long customerId) {
            this.customerId = Optional.ofNullable(customerId);
            return this;
        }

        @JsonSetter(value = "methodReferenceId", nulls = Nulls.SKIP)
        public Builder methodReferenceId(Optional<String> methodReferenceId) {
            this.methodReferenceId = methodReferenceId;
            return this;
        }

        public Builder methodReferenceId(String methodReferenceId) {
            this.methodReferenceId = Optional.ofNullable(methodReferenceId);
            return this;
        }

        /**
         * <p>Stored method identifier in Payabli platform. This ID is used to manage the stored method.</p>
         */
        @JsonSetter(value = "ReferenceId", nulls = Nulls.SKIP)
        public Builder referenceId(Optional<String> referenceId) {
            this.referenceId = referenceId;
            return this;
        }

        public Builder referenceId(String referenceId) {
            this.referenceId = Optional.ofNullable(referenceId);
            return this;
        }

        @JsonSetter(value = "ResultCode", nulls = Nulls.SKIP)
        public Builder resultCode(Optional<Integer> resultCode) {
            this.resultCode = resultCode;
            return this;
        }

        public Builder resultCode(Integer resultCode) {
            this.resultCode = Optional.ofNullable(resultCode);
            return this;
        }

        @JsonSetter(value = "ResultText", nulls = Nulls.SKIP)
        public Builder resultText(Optional<String> resultText) {
            this.resultText = resultText;
            return this;
        }

        public Builder resultText(String resultText) {
            this.resultText = Optional.ofNullable(resultText);
            return this;
        }

        public AddMethodResponseResponseData build() {
            return new AddMethodResponseResponseData(
                    customerId, methodReferenceId, referenceId, resultCode, resultText, additionalProperties);
        }
    }
}
