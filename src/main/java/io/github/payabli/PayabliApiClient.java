/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli;

import io.github.payabli.core.ClientOptions;
import io.github.payabli.core.Suppliers;
import io.github.payabli.resources.bill.BillClient;
import io.github.payabli.resources.boarding.BoardingClient;
import io.github.payabli.resources.chargebacks.ChargeBacksClient;
import io.github.payabli.resources.checkcapture.CheckCaptureClient;
import io.github.payabli.resources.cloud.CloudClient;
import io.github.payabli.resources.customer.CustomerClient;
import io.github.payabli.resources.export.ExportClient;
import io.github.payabli.resources.hostedpaymentpages.HostedPaymentPagesClient;
import io.github.payabli.resources.import_.ImportClient;
import io.github.payabli.resources.invoice.InvoiceClient;
import io.github.payabli.resources.lineitem.LineItemClient;
import io.github.payabli.resources.moneyin.MoneyInClient;
import io.github.payabli.resources.moneyout.MoneyOutClient;
import io.github.payabli.resources.notification.NotificationClient;
import io.github.payabli.resources.ocr.OcrClient;
import io.github.payabli.resources.organization.OrganizationClient;
import io.github.payabli.resources.paymentlink.PaymentLinkClient;
import io.github.payabli.resources.paymentmethoddomain.PaymentMethodDomainClient;
import io.github.payabli.resources.paypoint.PaypointClient;
import io.github.payabli.resources.query.QueryClient;
import io.github.payabli.resources.statistic.StatisticClient;
import io.github.payabli.resources.subscription.SubscriptionClient;
import io.github.payabli.resources.templates.TemplatesClient;
import io.github.payabli.resources.tokenstorage.TokenStorageClient;
import io.github.payabli.resources.user.UserClient;
import io.github.payabli.resources.vendor.VendorClient;
import io.github.payabli.resources.wallet.WalletClient;
import java.util.function.Supplier;

public class PayabliApiClient {
    protected final ClientOptions clientOptions;

    protected final Supplier<BillClient> billClient;

    protected final Supplier<BoardingClient> boardingClient;

    protected final Supplier<ChargeBacksClient> chargeBacksClient;

    protected final Supplier<CheckCaptureClient> checkCaptureClient;

    protected final Supplier<CloudClient> cloudClient;

    protected final Supplier<CustomerClient> customerClient;

    protected final Supplier<ExportClient> exportClient;

    protected final Supplier<HostedPaymentPagesClient> hostedPaymentPagesClient;

    protected final Supplier<ImportClient> importClient;

    protected final Supplier<InvoiceClient> invoiceClient;

    protected final Supplier<LineItemClient> lineItemClient;

    protected final Supplier<MoneyInClient> moneyInClient;

    protected final Supplier<MoneyOutClient> moneyOutClient;

    protected final Supplier<NotificationClient> notificationClient;

    protected final Supplier<OcrClient> ocrClient;

    protected final Supplier<OrganizationClient> organizationClient;

    protected final Supplier<PaymentLinkClient> paymentLinkClient;

    protected final Supplier<PaymentMethodDomainClient> paymentMethodDomainClient;

    protected final Supplier<PaypointClient> paypointClient;

    protected final Supplier<QueryClient> queryClient;

    protected final Supplier<StatisticClient> statisticClient;

    protected final Supplier<SubscriptionClient> subscriptionClient;

    protected final Supplier<TemplatesClient> templatesClient;

    protected final Supplier<TokenStorageClient> tokenStorageClient;

    protected final Supplier<UserClient> userClient;

    protected final Supplier<VendorClient> vendorClient;

    protected final Supplier<WalletClient> walletClient;

    public PayabliApiClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.billClient = Suppliers.memoize(() -> new BillClient(clientOptions));
        this.boardingClient = Suppliers.memoize(() -> new BoardingClient(clientOptions));
        this.chargeBacksClient = Suppliers.memoize(() -> new ChargeBacksClient(clientOptions));
        this.checkCaptureClient = Suppliers.memoize(() -> new CheckCaptureClient(clientOptions));
        this.cloudClient = Suppliers.memoize(() -> new CloudClient(clientOptions));
        this.customerClient = Suppliers.memoize(() -> new CustomerClient(clientOptions));
        this.exportClient = Suppliers.memoize(() -> new ExportClient(clientOptions));
        this.hostedPaymentPagesClient = Suppliers.memoize(() -> new HostedPaymentPagesClient(clientOptions));
        this.importClient = Suppliers.memoize(() -> new ImportClient(clientOptions));
        this.invoiceClient = Suppliers.memoize(() -> new InvoiceClient(clientOptions));
        this.lineItemClient = Suppliers.memoize(() -> new LineItemClient(clientOptions));
        this.moneyInClient = Suppliers.memoize(() -> new MoneyInClient(clientOptions));
        this.moneyOutClient = Suppliers.memoize(() -> new MoneyOutClient(clientOptions));
        this.notificationClient = Suppliers.memoize(() -> new NotificationClient(clientOptions));
        this.ocrClient = Suppliers.memoize(() -> new OcrClient(clientOptions));
        this.organizationClient = Suppliers.memoize(() -> new OrganizationClient(clientOptions));
        this.paymentLinkClient = Suppliers.memoize(() -> new PaymentLinkClient(clientOptions));
        this.paymentMethodDomainClient = Suppliers.memoize(() -> new PaymentMethodDomainClient(clientOptions));
        this.paypointClient = Suppliers.memoize(() -> new PaypointClient(clientOptions));
        this.queryClient = Suppliers.memoize(() -> new QueryClient(clientOptions));
        this.statisticClient = Suppliers.memoize(() -> new StatisticClient(clientOptions));
        this.subscriptionClient = Suppliers.memoize(() -> new SubscriptionClient(clientOptions));
        this.templatesClient = Suppliers.memoize(() -> new TemplatesClient(clientOptions));
        this.tokenStorageClient = Suppliers.memoize(() -> new TokenStorageClient(clientOptions));
        this.userClient = Suppliers.memoize(() -> new UserClient(clientOptions));
        this.vendorClient = Suppliers.memoize(() -> new VendorClient(clientOptions));
        this.walletClient = Suppliers.memoize(() -> new WalletClient(clientOptions));
    }

    public BillClient bill() {
        return this.billClient.get();
    }

    public BoardingClient boarding() {
        return this.boardingClient.get();
    }

    public ChargeBacksClient chargeBacks() {
        return this.chargeBacksClient.get();
    }

    public CheckCaptureClient checkCapture() {
        return this.checkCaptureClient.get();
    }

    public CloudClient cloud() {
        return this.cloudClient.get();
    }

    public CustomerClient customer() {
        return this.customerClient.get();
    }

    public ExportClient export() {
        return this.exportClient.get();
    }

    public HostedPaymentPagesClient hostedPaymentPages() {
        return this.hostedPaymentPagesClient.get();
    }

    public ImportClient import_() {
        return this.importClient.get();
    }

    public InvoiceClient invoice() {
        return this.invoiceClient.get();
    }

    public LineItemClient lineItem() {
        return this.lineItemClient.get();
    }

    public MoneyInClient moneyIn() {
        return this.moneyInClient.get();
    }

    public MoneyOutClient moneyOut() {
        return this.moneyOutClient.get();
    }

    public NotificationClient notification() {
        return this.notificationClient.get();
    }

    public OcrClient ocr() {
        return this.ocrClient.get();
    }

    public OrganizationClient organization() {
        return this.organizationClient.get();
    }

    public PaymentLinkClient paymentLink() {
        return this.paymentLinkClient.get();
    }

    public PaymentMethodDomainClient paymentMethodDomain() {
        return this.paymentMethodDomainClient.get();
    }

    public PaypointClient paypoint() {
        return this.paypointClient.get();
    }

    public QueryClient query() {
        return this.queryClient.get();
    }

    public StatisticClient statistic() {
        return this.statisticClient.get();
    }

    public SubscriptionClient subscription() {
        return this.subscriptionClient.get();
    }

    public TemplatesClient templates() {
        return this.templatesClient.get();
    }

    public TokenStorageClient tokenStorage() {
        return this.tokenStorageClient.get();
    }

    public UserClient user() {
        return this.userClient.get();
    }

    public VendorClient vendor() {
        return this.vendorClient.get();
    }

    public WalletClient wallet() {
        return this.walletClient.get();
    }

    public static PayabliApiClientBuilder builder() {
        return new PayabliApiClientBuilder();
    }
}
