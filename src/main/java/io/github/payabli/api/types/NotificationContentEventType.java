/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonValue;

public enum NotificationContentEventType {
    APPROVED_PAYMENT("ApprovedPayment"),

    AUTHORIZED_PAYMENT("AuthorizedPayment"),

    DECLINED_PAYMENT("DeclinedPayment"),

    ORIGINATED_PAYMENT("OriginatedPayment"),

    SETTLED_PAYMENT("SettledPayment"),

    SUBSCRIPTION_CREATED("SubscriptionCreated"),

    SUBSCRIPTION_UPDATED("SubscriptionUpdated"),

    SUBSCRIPTION_CANCELED("SubscriptionCanceled"),

    SUBSCRIPTION_COMPLETED("SubscriptionCompleted"),

    FUNDED_PAYMENT("FundedPayment"),

    VOIDED_PAYMENT("VoidedPayment"),

    REFUNDED_PAYMENT("RefundedPayment"),

    HOLD_TRANSACTION("HoldTransaction"),

    RELEASED_TRANSACTION("ReleasedTransaction"),

    HOLD_BATCH("HoldBatch"),

    RELEASED_BATCH("ReleasedBatch"),

    TRANSFER_DISABLED_CREDIT_FUND("TransferDisabledCreditFund"),

    TRANSFER_DISABLED_DEBIT_FUND("TransferDisabledDebitFund"),

    TRANSFER_NOT_AVAILABLE_BALANCE("TransferNotAvailableBalance"),

    TRANSFER_RETURN("TransferReturn"),

    TRANSFER_SUCCESS("TransferSuccess"),

    TRANSFER_SUSPENDED("TransferSuspended"),

    TRANSFER_ERROR("TransferError"),

    SEND_RECEIPT("SendReceipt"),

    RECOVERED_TRANSACTION("RecoveredTransaction"),

    CREATED_APPLICATION("CreatedApplication"),

    APPROVED_APPLICATION("ApprovedApplication"),

    FAILED_BOARDING_APPLICATION("FailedBoardingApplication"),

    SUBMITTED_APPLICATION("SubmittedApplication"),

    ACTIVATED_MERCHANT("ActivatedMerchant"),

    RECEIVED_CHARGE_BACK("ReceivedChargeBack"),

    CHARGEBACK_UPDATED("ChargebackUpdated"),

    RECEIVED_RETRIEVAL("ReceivedRetrieval"),

    RETRIEVAL_UPDATED("RetrievalUpdated"),

    RECEIVED_ACH_RETURN("ReceivedAchReturn"),

    HOLDING_APPLICATION("HoldingApplication"),

    DECLINED_APPLICATION("DeclinedApplication"),

    BOARDING_APPLICATION("BoardingApplication"),

    FRAUD_ALERT("FraudAlert"),

    INVOICE_SENT("InvoiceSent"),

    INVOICE_PAID("InvoicePaid"),

    INVOICE_CREATED("InvoiceCreated"),

    BILL_PAID("BillPaid"),

    BILL_APPROVED("BillApproved"),

    BILL_DIS_APPROVED("BillDisApproved"),

    BILL_CANCELED("BillCanceled"),

    BILL_PROCESSING("BillProcessing"),

    CARD_CREATED("CardCreated"),

    CARD_ACTIVATED("CardActivated"),

    CARD_DEACTIVATED("CardDeactivated"),

    CARD_EXPIRED("CardExpired"),

    CARD_EXPIRING("CardExpiring"),

    CARD_LIMIT_UPDATED("CardLimitUpdated"),

    BATCH_CLOSED("BatchClosed"),

    BATCH_NOT_CLOSED("BatchNotClosed"),

    PAY_OUT_FUNDED("PayOutFunded"),

    PAY_OUT_PROCESSED("PayOutProcessed"),

    PAY_OUT_CANCELED("PayOutCanceled"),

    PAY_OUT_PAID("PayOutPaid"),

    PAY_OUT_RETURNED("PayOutReturned"),

    PAYOUT_SUBSCRIPTION_CREATED("PayoutSubscriptionCreated"),

    PAYOUT_SUBSCRIPTION_UPDATED("PayoutSubscriptionUpdated"),

    PAYOUT_SUBSCRIPTION_CANCELED("PayoutSubscriptionCanceled"),

    PAYOUT_SUBSCRIPTION_COMPLETED("PayoutSubscriptionCompleted"),

    PAYOUT_SUBSCRIPTION_REMINDER("PayoutSubscriptionReminder"),

    IMPORT_FILE_RECEIVED("importFileReceived"),

    IMPORT_FILE_PROCESSED("importFileProcessed"),

    IMPORT_FILE_ERROR("importFileError"),

    EXPORT_FILE_SENT("exportFileSent"),

    EXPORT_FILE_ERROR("exportFileError"),

    FAILED_EMAIL_NOTIFICATION("FailedEmailNotification"),

    FAILED_WEB_NOTIFICATION("FailedWebNotification"),

    FAILED_SMS_NOTIFICATION("FailedSMSNotification"),

    USER_PASSWORD_EXPIRING("UserPasswordExpiring"),

    USER_PASSWORD_EXPIRED("UserPasswordExpired"),

    TRANSACTION_NOT_FOUND("TransactionNotFound"),

    SYSTEM_ALERT("SystemAlert"),

    REPORT("Report");

    private final String value;

    NotificationContentEventType(String value) {
        this.value = value;
    }

    @JsonValue
    @java.lang.Override
    public String toString() {
        return this.value;
    }
}
