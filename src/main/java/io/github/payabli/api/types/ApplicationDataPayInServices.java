/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ApplicationDataPayInServices.Builder.class)
public final class ApplicationDataPayInServices {
    private final ApplicationDataPayInServicesAch ach;

    private final ApplicationDataPayInServicesCard card;

    private final Optional<OdpSetup> odp;

    private final Map<String, Object> additionalProperties;

    private ApplicationDataPayInServices(
            ApplicationDataPayInServicesAch ach,
            ApplicationDataPayInServicesCard card,
            Optional<OdpSetup> odp,
            Map<String, Object> additionalProperties) {
        this.ach = ach;
        this.card = card;
        this.odp = odp;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("ach")
    public ApplicationDataPayInServicesAch getAch() {
        return ach;
    }

    @JsonProperty("card")
    public ApplicationDataPayInServicesCard getCard() {
        return card;
    }

    @JsonProperty("odp")
    public Optional<OdpSetup> getOdp() {
        return odp;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ApplicationDataPayInServices && equalTo((ApplicationDataPayInServices) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ApplicationDataPayInServices other) {
        return ach.equals(other.ach) && card.equals(other.card) && odp.equals(other.odp);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.ach, this.card, this.odp);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AchStage builder() {
        return new Builder();
    }

    public interface AchStage {
        CardStage ach(@NotNull ApplicationDataPayInServicesAch ach);

        Builder from(ApplicationDataPayInServices other);
    }

    public interface CardStage {
        _FinalStage card(@NotNull ApplicationDataPayInServicesCard card);
    }

    public interface _FinalStage {
        ApplicationDataPayInServices build();

        _FinalStage odp(Optional<OdpSetup> odp);

        _FinalStage odp(OdpSetup odp);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AchStage, CardStage, _FinalStage {
        private ApplicationDataPayInServicesAch ach;

        private ApplicationDataPayInServicesCard card;

        private Optional<OdpSetup> odp = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ApplicationDataPayInServices other) {
            ach(other.getAch());
            card(other.getCard());
            odp(other.getOdp());
            return this;
        }

        @java.lang.Override
        @JsonSetter("ach")
        public CardStage ach(@NotNull ApplicationDataPayInServicesAch ach) {
            this.ach = Objects.requireNonNull(ach, "ach must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("card")
        public _FinalStage card(@NotNull ApplicationDataPayInServicesCard card) {
            this.card = Objects.requireNonNull(card, "card must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage odp(OdpSetup odp) {
            this.odp = Optional.ofNullable(odp);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "odp", nulls = Nulls.SKIP)
        public _FinalStage odp(Optional<OdpSetup> odp) {
            this.odp = odp;
            return this;
        }

        @java.lang.Override
        public ApplicationDataPayInServices build() {
            return new ApplicationDataPayInServices(ach, card, odp, additionalProperties);
        }
    }
}
