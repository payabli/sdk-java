/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = VCardSummary.Builder.class)
public final class VCardSummary {
    private final int totalPages;

    private final int totalRecords;

    private final double totalAmount;

    private final int totalactive;

    private final double totalamounteactive;

    private final double totalbalanceactive;

    private final Optional<String> pageIdentifier;

    private final Optional<Integer> pageSize;

    private final Map<String, Object> additionalProperties;

    private VCardSummary(
            int totalPages,
            int totalRecords,
            double totalAmount,
            int totalactive,
            double totalamounteactive,
            double totalbalanceactive,
            Optional<String> pageIdentifier,
            Optional<Integer> pageSize,
            Map<String, Object> additionalProperties) {
        this.totalPages = totalPages;
        this.totalRecords = totalRecords;
        this.totalAmount = totalAmount;
        this.totalactive = totalactive;
        this.totalamounteactive = totalamounteactive;
        this.totalbalanceactive = totalbalanceactive;
        this.pageIdentifier = pageIdentifier;
        this.pageSize = pageSize;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("totalPages")
    public int getTotalPages() {
        return totalPages;
    }

    @JsonProperty("totalRecords")
    public int getTotalRecords() {
        return totalRecords;
    }

    /**
     * @return Total amount for the records.
     */
    @JsonProperty("totalAmount")
    public double getTotalAmount() {
        return totalAmount;
    }

    /**
     * @return Total number of active vCards.
     */
    @JsonProperty("totalactive")
    public int getTotalactive() {
        return totalactive;
    }

    /**
     * @return Total amount of active vCards.
     */
    @JsonProperty("totalamounteactive")
    public double getTotalamounteactive() {
        return totalamounteactive;
    }

    /**
     * @return Total balance of active vCards.
     */
    @JsonProperty("totalbalanceactive")
    public double getTotalbalanceactive() {
        return totalbalanceactive;
    }

    @JsonProperty("pageIdentifier")
    public Optional<String> getPageIdentifier() {
        return pageIdentifier;
    }

    @JsonProperty("pageSize")
    public Optional<Integer> getPageSize() {
        return pageSize;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof VCardSummary && equalTo((VCardSummary) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(VCardSummary other) {
        return totalPages == other.totalPages
                && totalRecords == other.totalRecords
                && totalAmount == other.totalAmount
                && totalactive == other.totalactive
                && totalamounteactive == other.totalamounteactive
                && totalbalanceactive == other.totalbalanceactive
                && pageIdentifier.equals(other.pageIdentifier)
                && pageSize.equals(other.pageSize);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.totalPages,
                this.totalRecords,
                this.totalAmount,
                this.totalactive,
                this.totalamounteactive,
                this.totalbalanceactive,
                this.pageIdentifier,
                this.pageSize);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TotalPagesStage builder() {
        return new Builder();
    }

    public interface TotalPagesStage {
        TotalRecordsStage totalPages(int totalPages);

        Builder from(VCardSummary other);
    }

    public interface TotalRecordsStage {
        TotalAmountStage totalRecords(int totalRecords);
    }

    public interface TotalAmountStage {
        /**
         * <p>Total amount for the records.</p>
         */
        TotalactiveStage totalAmount(double totalAmount);
    }

    public interface TotalactiveStage {
        /**
         * <p>Total number of active vCards.</p>
         */
        TotalamounteactiveStage totalactive(int totalactive);
    }

    public interface TotalamounteactiveStage {
        /**
         * <p>Total amount of active vCards.</p>
         */
        TotalbalanceactiveStage totalamounteactive(double totalamounteactive);
    }

    public interface TotalbalanceactiveStage {
        /**
         * <p>Total balance of active vCards.</p>
         */
        _FinalStage totalbalanceactive(double totalbalanceactive);
    }

    public interface _FinalStage {
        VCardSummary build();

        _FinalStage pageIdentifier(Optional<String> pageIdentifier);

        _FinalStage pageIdentifier(String pageIdentifier);

        _FinalStage pageSize(Optional<Integer> pageSize);

        _FinalStage pageSize(Integer pageSize);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements TotalPagesStage,
                    TotalRecordsStage,
                    TotalAmountStage,
                    TotalactiveStage,
                    TotalamounteactiveStage,
                    TotalbalanceactiveStage,
                    _FinalStage {
        private int totalPages;

        private int totalRecords;

        private double totalAmount;

        private int totalactive;

        private double totalamounteactive;

        private double totalbalanceactive;

        private Optional<Integer> pageSize = Optional.empty();

        private Optional<String> pageIdentifier = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(VCardSummary other) {
            totalPages(other.getTotalPages());
            totalRecords(other.getTotalRecords());
            totalAmount(other.getTotalAmount());
            totalactive(other.getTotalactive());
            totalamounteactive(other.getTotalamounteactive());
            totalbalanceactive(other.getTotalbalanceactive());
            pageIdentifier(other.getPageIdentifier());
            pageSize(other.getPageSize());
            return this;
        }

        @java.lang.Override
        @JsonSetter("totalPages")
        public TotalRecordsStage totalPages(int totalPages) {
            this.totalPages = totalPages;
            return this;
        }

        @java.lang.Override
        @JsonSetter("totalRecords")
        public TotalAmountStage totalRecords(int totalRecords) {
            this.totalRecords = totalRecords;
            return this;
        }

        /**
         * <p>Total amount for the records.</p>
         * <p>Total amount for the records.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("totalAmount")
        public TotalactiveStage totalAmount(double totalAmount) {
            this.totalAmount = totalAmount;
            return this;
        }

        /**
         * <p>Total number of active vCards.</p>
         * <p>Total number of active vCards.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("totalactive")
        public TotalamounteactiveStage totalactive(int totalactive) {
            this.totalactive = totalactive;
            return this;
        }

        /**
         * <p>Total amount of active vCards.</p>
         * <p>Total amount of active vCards.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("totalamounteactive")
        public TotalbalanceactiveStage totalamounteactive(double totalamounteactive) {
            this.totalamounteactive = totalamounteactive;
            return this;
        }

        /**
         * <p>Total balance of active vCards.</p>
         * <p>Total balance of active vCards.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("totalbalanceactive")
        public _FinalStage totalbalanceactive(double totalbalanceactive) {
            this.totalbalanceactive = totalbalanceactive;
            return this;
        }

        @java.lang.Override
        public _FinalStage pageSize(Integer pageSize) {
            this.pageSize = Optional.ofNullable(pageSize);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "pageSize", nulls = Nulls.SKIP)
        public _FinalStage pageSize(Optional<Integer> pageSize) {
            this.pageSize = pageSize;
            return this;
        }

        @java.lang.Override
        public _FinalStage pageIdentifier(String pageIdentifier) {
            this.pageIdentifier = Optional.ofNullable(pageIdentifier);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "pageIdentifier", nulls = Nulls.SKIP)
        public _FinalStage pageIdentifier(Optional<String> pageIdentifier) {
            this.pageIdentifier = pageIdentifier;
            return this;
        }

        @java.lang.Override
        public VCardSummary build() {
            return new VCardSummary(
                    totalPages,
                    totalRecords,
                    totalAmount,
                    totalactive,
                    totalamounteactive,
                    totalbalanceactive,
                    pageIdentifier,
                    pageSize,
                    additionalProperties);
        }
    }
}
