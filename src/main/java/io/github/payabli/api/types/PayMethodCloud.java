/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = PayMethodCloud.Builder.class)
public final class PayMethodCloud {
    private final Optional<String> device;

    private final Optional<Boolean> saveIfSuccess;

    private final Map<String, Object> additionalProperties;

    private PayMethodCloud(
            Optional<String> device, Optional<Boolean> saveIfSuccess, Map<String, Object> additionalProperties) {
        this.device = device;
        this.saveIfSuccess = saveIfSuccess;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("device")
    public Optional<String> getDevice() {
        return device;
    }

    /**
     * @return Method to use for the transaction. For cloud device transactions, the method is <code>cloud</code>.
     */
    @JsonProperty("method")
    public String getMethod() {
        return "cloud";
    }

    @JsonProperty("saveIfSuccess")
    public Optional<Boolean> getSaveIfSuccess() {
        return saveIfSuccess;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PayMethodCloud && equalTo((PayMethodCloud) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PayMethodCloud other) {
        return device.equals(other.device) && saveIfSuccess.equals(other.saveIfSuccess);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.device, this.saveIfSuccess);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> device = Optional.empty();

        private Optional<Boolean> saveIfSuccess = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(PayMethodCloud other) {
            device(other.getDevice());
            saveIfSuccess(other.getSaveIfSuccess());
            return this;
        }

        @JsonSetter(value = "device", nulls = Nulls.SKIP)
        public Builder device(Optional<String> device) {
            this.device = device;
            return this;
        }

        public Builder device(String device) {
            this.device = Optional.ofNullable(device);
            return this;
        }

        @JsonSetter(value = "saveIfSuccess", nulls = Nulls.SKIP)
        public Builder saveIfSuccess(Optional<Boolean> saveIfSuccess) {
            this.saveIfSuccess = saveIfSuccess;
            return this;
        }

        public Builder saveIfSuccess(Boolean saveIfSuccess) {
            this.saveIfSuccess = Optional.ofNullable(saveIfSuccess);
            return this;
        }

        public PayMethodCloud build() {
            return new PayMethodCloud(device, saveIfSuccess, additionalProperties);
        }
    }
}
