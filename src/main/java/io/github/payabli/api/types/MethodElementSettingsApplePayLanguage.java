/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

public final class MethodElementSettingsApplePayLanguage {
    public static final MethodElementSettingsApplePayLanguage VI_VN =
            new MethodElementSettingsApplePayLanguage(Value.VI_VN, "vi-VN");

    public static final MethodElementSettingsApplePayLanguage CA_ES =
            new MethodElementSettingsApplePayLanguage(Value.CA_ES, "ca-ES");

    public static final MethodElementSettingsApplePayLanguage RU_RU =
            new MethodElementSettingsApplePayLanguage(Value.RU_RU, "ru-RU");

    public static final MethodElementSettingsApplePayLanguage ES_MX =
            new MethodElementSettingsApplePayLanguage(Value.ES_MX, "es-MX");

    public static final MethodElementSettingsApplePayLanguage MS_MY =
            new MethodElementSettingsApplePayLanguage(Value.MS_MY, "ms-MY");

    public static final MethodElementSettingsApplePayLanguage EN_AU =
            new MethodElementSettingsApplePayLanguage(Value.EN_AU, "en-AU");

    public static final MethodElementSettingsApplePayLanguage ID_ID =
            new MethodElementSettingsApplePayLanguage(Value.ID_ID, "id-ID");

    public static final MethodElementSettingsApplePayLanguage HI_IN =
            new MethodElementSettingsApplePayLanguage(Value.HI_IN, "hi-IN");

    public static final MethodElementSettingsApplePayLanguage TH_TH =
            new MethodElementSettingsApplePayLanguage(Value.TH_TH, "th-TH");

    public static final MethodElementSettingsApplePayLanguage SK_SK =
            new MethodElementSettingsApplePayLanguage(Value.SK_SK, "sk-SK");

    public static final MethodElementSettingsApplePayLanguage ES_ES =
            new MethodElementSettingsApplePayLanguage(Value.ES_ES, "es-ES");

    public static final MethodElementSettingsApplePayLanguage UK_UA =
            new MethodElementSettingsApplePayLanguage(Value.UK_UA, "uk-UA");

    public static final MethodElementSettingsApplePayLanguage HU_HU =
            new MethodElementSettingsApplePayLanguage(Value.HU_HU, "hu-HU");

    public static final MethodElementSettingsApplePayLanguage PT_PT =
            new MethodElementSettingsApplePayLanguage(Value.PT_PT, "pt-PT");

    public static final MethodElementSettingsApplePayLanguage RO_RO =
            new MethodElementSettingsApplePayLanguage(Value.RO_RO, "ro-RO");

    public static final MethodElementSettingsApplePayLanguage EN_US =
            new MethodElementSettingsApplePayLanguage(Value.EN_US, "en-US");

    public static final MethodElementSettingsApplePayLanguage CS_CZ =
            new MethodElementSettingsApplePayLanguage(Value.CS_CZ, "cs-CZ");

    public static final MethodElementSettingsApplePayLanguage DA_DK =
            new MethodElementSettingsApplePayLanguage(Value.DA_DK, "da-DK");

    public static final MethodElementSettingsApplePayLanguage AR_AB =
            new MethodElementSettingsApplePayLanguage(Value.AR_AB, "ar-AB");

    public static final MethodElementSettingsApplePayLanguage ZH_CN =
            new MethodElementSettingsApplePayLanguage(Value.ZH_CN, "zh-CN");

    public static final MethodElementSettingsApplePayLanguage DE_DE =
            new MethodElementSettingsApplePayLanguage(Value.DE_DE, "de-DE");

    public static final MethodElementSettingsApplePayLanguage ZH_TW =
            new MethodElementSettingsApplePayLanguage(Value.ZH_TW, "zh-TW");

    public static final MethodElementSettingsApplePayLanguage FI_FI =
            new MethodElementSettingsApplePayLanguage(Value.FI_FI, "fi-FI");

    public static final MethodElementSettingsApplePayLanguage NB_NO =
            new MethodElementSettingsApplePayLanguage(Value.NB_NO, "nb-NO");

    public static final MethodElementSettingsApplePayLanguage EN_GB =
            new MethodElementSettingsApplePayLanguage(Value.EN_GB, "en-GB");

    public static final MethodElementSettingsApplePayLanguage FR_FR =
            new MethodElementSettingsApplePayLanguage(Value.FR_FR, "fr-FR");

    public static final MethodElementSettingsApplePayLanguage PL_PL =
            new MethodElementSettingsApplePayLanguage(Value.PL_PL, "pl-PL");

    public static final MethodElementSettingsApplePayLanguage NL_NL =
            new MethodElementSettingsApplePayLanguage(Value.NL_NL, "nl-NL");

    public static final MethodElementSettingsApplePayLanguage HR_HR =
            new MethodElementSettingsApplePayLanguage(Value.HR_HR, "hr-HR");

    public static final MethodElementSettingsApplePayLanguage EL_GR =
            new MethodElementSettingsApplePayLanguage(Value.EL_GR, "el-GR");

    public static final MethodElementSettingsApplePayLanguage JA_JP =
            new MethodElementSettingsApplePayLanguage(Value.JA_JP, "ja-JP");

    public static final MethodElementSettingsApplePayLanguage SV_SE =
            new MethodElementSettingsApplePayLanguage(Value.SV_SE, "sv-SE");

    public static final MethodElementSettingsApplePayLanguage ZH_HK =
            new MethodElementSettingsApplePayLanguage(Value.ZH_HK, "zh-HK");

    public static final MethodElementSettingsApplePayLanguage HE_IL =
            new MethodElementSettingsApplePayLanguage(Value.HE_IL, "he-IL");

    public static final MethodElementSettingsApplePayLanguage KO_KR =
            new MethodElementSettingsApplePayLanguage(Value.KO_KR, "ko-KR");

    public static final MethodElementSettingsApplePayLanguage TR_TR =
            new MethodElementSettingsApplePayLanguage(Value.TR_TR, "tr-TR");

    public static final MethodElementSettingsApplePayLanguage FR_CA =
            new MethodElementSettingsApplePayLanguage(Value.FR_CA, "fr-CA");

    public static final MethodElementSettingsApplePayLanguage IT_IT =
            new MethodElementSettingsApplePayLanguage(Value.IT_IT, "it-IT");

    public static final MethodElementSettingsApplePayLanguage PT_BR =
            new MethodElementSettingsApplePayLanguage(Value.PT_BR, "pt-BR");

    private final Value value;

    private final String string;

    MethodElementSettingsApplePayLanguage(Value value, String string) {
        this.value = value;
        this.string = string;
    }

    public Value getEnumValue() {
        return value;
    }

    @java.lang.Override
    @JsonValue
    public String toString() {
        return this.string;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        return (this == other)
                || (other instanceof MethodElementSettingsApplePayLanguage
                        && this.string.equals(((MethodElementSettingsApplePayLanguage) other).string));
    }

    @java.lang.Override
    public int hashCode() {
        return this.string.hashCode();
    }

    public <T> T visit(Visitor<T> visitor) {
        switch (value) {
            case VI_VN:
                return visitor.visitViVn();
            case CA_ES:
                return visitor.visitCaEs();
            case RU_RU:
                return visitor.visitRuRu();
            case ES_MX:
                return visitor.visitEsMx();
            case MS_MY:
                return visitor.visitMsMy();
            case EN_AU:
                return visitor.visitEnAu();
            case ID_ID:
                return visitor.visitIdId();
            case HI_IN:
                return visitor.visitHiIn();
            case TH_TH:
                return visitor.visitThTh();
            case SK_SK:
                return visitor.visitSkSk();
            case ES_ES:
                return visitor.visitEsEs();
            case UK_UA:
                return visitor.visitUkUa();
            case HU_HU:
                return visitor.visitHuHu();
            case PT_PT:
                return visitor.visitPtPt();
            case RO_RO:
                return visitor.visitRoRo();
            case EN_US:
                return visitor.visitEnUs();
            case CS_CZ:
                return visitor.visitCsCz();
            case DA_DK:
                return visitor.visitDaDk();
            case AR_AB:
                return visitor.visitArAb();
            case ZH_CN:
                return visitor.visitZhCn();
            case DE_DE:
                return visitor.visitDeDe();
            case ZH_TW:
                return visitor.visitZhTw();
            case FI_FI:
                return visitor.visitFiFi();
            case NB_NO:
                return visitor.visitNbNo();
            case EN_GB:
                return visitor.visitEnGb();
            case FR_FR:
                return visitor.visitFrFr();
            case PL_PL:
                return visitor.visitPlPl();
            case NL_NL:
                return visitor.visitNlNl();
            case HR_HR:
                return visitor.visitHrHr();
            case EL_GR:
                return visitor.visitElGr();
            case JA_JP:
                return visitor.visitJaJp();
            case SV_SE:
                return visitor.visitSvSe();
            case ZH_HK:
                return visitor.visitZhHk();
            case HE_IL:
                return visitor.visitHeIl();
            case KO_KR:
                return visitor.visitKoKr();
            case TR_TR:
                return visitor.visitTrTr();
            case FR_CA:
                return visitor.visitFrCa();
            case IT_IT:
                return visitor.visitItIt();
            case PT_BR:
                return visitor.visitPtBr();
            case UNKNOWN:
            default:
                return visitor.visitUnknown(string);
        }
    }

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    public static MethodElementSettingsApplePayLanguage valueOf(String value) {
        switch (value) {
            case "vi-VN":
                return VI_VN;
            case "ca-ES":
                return CA_ES;
            case "ru-RU":
                return RU_RU;
            case "es-MX":
                return ES_MX;
            case "ms-MY":
                return MS_MY;
            case "en-AU":
                return EN_AU;
            case "id-ID":
                return ID_ID;
            case "hi-IN":
                return HI_IN;
            case "th-TH":
                return TH_TH;
            case "sk-SK":
                return SK_SK;
            case "es-ES":
                return ES_ES;
            case "uk-UA":
                return UK_UA;
            case "hu-HU":
                return HU_HU;
            case "pt-PT":
                return PT_PT;
            case "ro-RO":
                return RO_RO;
            case "en-US":
                return EN_US;
            case "cs-CZ":
                return CS_CZ;
            case "da-DK":
                return DA_DK;
            case "ar-AB":
                return AR_AB;
            case "zh-CN":
                return ZH_CN;
            case "de-DE":
                return DE_DE;
            case "zh-TW":
                return ZH_TW;
            case "fi-FI":
                return FI_FI;
            case "nb-NO":
                return NB_NO;
            case "en-GB":
                return EN_GB;
            case "fr-FR":
                return FR_FR;
            case "pl-PL":
                return PL_PL;
            case "nl-NL":
                return NL_NL;
            case "hr-HR":
                return HR_HR;
            case "el-GR":
                return EL_GR;
            case "ja-JP":
                return JA_JP;
            case "sv-SE":
                return SV_SE;
            case "zh-HK":
                return ZH_HK;
            case "he-IL":
                return HE_IL;
            case "ko-KR":
                return KO_KR;
            case "tr-TR":
                return TR_TR;
            case "fr-CA":
                return FR_CA;
            case "it-IT":
                return IT_IT;
            case "pt-BR":
                return PT_BR;
            default:
                return new MethodElementSettingsApplePayLanguage(Value.UNKNOWN, value);
        }
    }

    public enum Value {
        EN_US,

        AR_AB,

        CA_ES,

        ZH_CN,

        ZH_HK,

        ZH_TW,

        HR_HR,

        CS_CZ,

        DA_DK,

        DE_DE,

        NL_NL,

        EN_AU,

        EN_GB,

        FI_FI,

        FR_CA,

        FR_FR,

        EL_GR,

        HE_IL,

        HI_IN,

        HU_HU,

        ID_ID,

        IT_IT,

        JA_JP,

        KO_KR,

        MS_MY,

        NB_NO,

        PL_PL,

        PT_BR,

        PT_PT,

        RO_RO,

        RU_RU,

        SK_SK,

        ES_MX,

        ES_ES,

        SV_SE,

        TH_TH,

        TR_TR,

        UK_UA,

        VI_VN,

        UNKNOWN
    }

    public interface Visitor<T> {
        T visitEnUs();

        T visitArAb();

        T visitCaEs();

        T visitZhCn();

        T visitZhHk();

        T visitZhTw();

        T visitHrHr();

        T visitCsCz();

        T visitDaDk();

        T visitDeDe();

        T visitNlNl();

        T visitEnAu();

        T visitEnGb();

        T visitFiFi();

        T visitFrCa();

        T visitFrFr();

        T visitElGr();

        T visitHeIl();

        T visitHiIn();

        T visitHuHu();

        T visitIdId();

        T visitItIt();

        T visitJaJp();

        T visitKoKr();

        T visitMsMy();

        T visitNbNo();

        T visitPlPl();

        T visitPtBr();

        T visitPtPt();

        T visitRoRo();

        T visitRuRu();

        T visitSkSk();

        T visitEsMx();

        T visitEsEs();

        T visitSvSe();

        T visitThTh();

        T visitTrTr();

        T visitUkUa();

        T visitViVn();

        T visitUnknown(String unknownType);
    }
}
