/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SettingElement.Builder.class)
public final class SettingElement {
    private final Optional<Boolean> enabled;

    private final Optional<List<DisplayProperty>> fields;

    private final Optional<Integer> order;

    private final Optional<Boolean> sendAuto;

    private final Optional<Boolean> sendManual;

    private final Map<String, Object> additionalProperties;

    private SettingElement(
            Optional<Boolean> enabled,
            Optional<List<DisplayProperty>> fields,
            Optional<Integer> order,
            Optional<Boolean> sendAuto,
            Optional<Boolean> sendManual,
            Map<String, Object> additionalProperties) {
        this.enabled = enabled;
        this.fields = fields;
        this.order = order;
        this.sendAuto = sendAuto;
        this.sendManual = sendManual;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("enabled")
    public Optional<Boolean> getEnabled() {
        return enabled;
    }

    /**
     * @return Fields to display on the reciept.
     */
    @JsonProperty("fields")
    public Optional<List<DisplayProperty>> getFields() {
        return fields;
    }

    @JsonProperty("order")
    public Optional<Integer> getOrder() {
        return order;
    }

    /**
     * @return When <code>true</code>, Payabli automatically sends the receipt to the payor email address.
     */
    @JsonProperty("sendAuto")
    public Optional<Boolean> getSendAuto() {
        return sendAuto;
    }

    /**
     * @return When <code>true</code>, you must send the reciept to the payor manually using the <a href="/api-reference/moneyin/send-receipt-for-transaction">/MoneyIn/sendreceipt/{transId}</a> endpoint.
     */
    @JsonProperty("sendManual")
    public Optional<Boolean> getSendManual() {
        return sendManual;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SettingElement && equalTo((SettingElement) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SettingElement other) {
        return enabled.equals(other.enabled)
                && fields.equals(other.fields)
                && order.equals(other.order)
                && sendAuto.equals(other.sendAuto)
                && sendManual.equals(other.sendManual);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.enabled, this.fields, this.order, this.sendAuto, this.sendManual);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Boolean> enabled = Optional.empty();

        private Optional<List<DisplayProperty>> fields = Optional.empty();

        private Optional<Integer> order = Optional.empty();

        private Optional<Boolean> sendAuto = Optional.empty();

        private Optional<Boolean> sendManual = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(SettingElement other) {
            enabled(other.getEnabled());
            fields(other.getFields());
            order(other.getOrder());
            sendAuto(other.getSendAuto());
            sendManual(other.getSendManual());
            return this;
        }

        @JsonSetter(value = "enabled", nulls = Nulls.SKIP)
        public Builder enabled(Optional<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            this.enabled = Optional.ofNullable(enabled);
            return this;
        }

        /**
         * <p>Fields to display on the reciept.</p>
         */
        @JsonSetter(value = "fields", nulls = Nulls.SKIP)
        public Builder fields(Optional<List<DisplayProperty>> fields) {
            this.fields = fields;
            return this;
        }

        public Builder fields(List<DisplayProperty> fields) {
            this.fields = Optional.ofNullable(fields);
            return this;
        }

        @JsonSetter(value = "order", nulls = Nulls.SKIP)
        public Builder order(Optional<Integer> order) {
            this.order = order;
            return this;
        }

        public Builder order(Integer order) {
            this.order = Optional.ofNullable(order);
            return this;
        }

        /**
         * <p>When <code>true</code>, Payabli automatically sends the receipt to the payor email address.</p>
         */
        @JsonSetter(value = "sendAuto", nulls = Nulls.SKIP)
        public Builder sendAuto(Optional<Boolean> sendAuto) {
            this.sendAuto = sendAuto;
            return this;
        }

        public Builder sendAuto(Boolean sendAuto) {
            this.sendAuto = Optional.ofNullable(sendAuto);
            return this;
        }

        /**
         * <p>When <code>true</code>, you must send the reciept to the payor manually using the <a href="/api-reference/moneyin/send-receipt-for-transaction">/MoneyIn/sendreceipt/{transId}</a> endpoint.</p>
         */
        @JsonSetter(value = "sendManual", nulls = Nulls.SKIP)
        public Builder sendManual(Optional<Boolean> sendManual) {
            this.sendManual = sendManual;
            return this;
        }

        public Builder sendManual(Boolean sendManual) {
            this.sendManual = Optional.ofNullable(sendManual);
            return this;
        }

        public SettingElement build() {
            return new SettingElement(enabled, fields, order, sendAuto, sendManual, additionalProperties);
        }
    }
}
