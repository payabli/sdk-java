/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.api.resources.paypoint.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = PaypointMoveRequest.Builder.class)
public final class PaypointMoveRequest {
    private final String entryPoint;

    private final int newParentOrganizationId;

    private final Optional<NotificationRequest> notificationRequest;

    private final Map<String, Object> additionalProperties;

    private PaypointMoveRequest(
            String entryPoint,
            int newParentOrganizationId,
            Optional<NotificationRequest> notificationRequest,
            Map<String, Object> additionalProperties) {
        this.entryPoint = entryPoint;
        this.newParentOrganizationId = newParentOrganizationId;
        this.notificationRequest = notificationRequest;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("entryPoint")
    public String getEntryPoint() {
        return entryPoint;
    }

    /**
     * @return The ID for the paypoint's new parent organization.
     */
    @JsonProperty("newParentOrganizationId")
    public int getNewParentOrganizationId() {
        return newParentOrganizationId;
    }

    /**
     * @return Optional notification request object for a webhook
     */
    @JsonProperty("notificationRequest")
    public Optional<NotificationRequest> getNotificationRequest() {
        return notificationRequest;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PaypointMoveRequest && equalTo((PaypointMoveRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PaypointMoveRequest other) {
        return entryPoint.equals(other.entryPoint)
                && newParentOrganizationId == other.newParentOrganizationId
                && notificationRequest.equals(other.notificationRequest);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.entryPoint, this.newParentOrganizationId, this.notificationRequest);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static EntryPointStage builder() {
        return new Builder();
    }

    public interface EntryPointStage {
        NewParentOrganizationIdStage entryPoint(@NotNull String entryPoint);

        Builder from(PaypointMoveRequest other);
    }

    public interface NewParentOrganizationIdStage {
        /**
         * <p>The ID for the paypoint's new parent organization.</p>
         */
        _FinalStage newParentOrganizationId(int newParentOrganizationId);
    }

    public interface _FinalStage {
        PaypointMoveRequest build();

        /**
         * <p>Optional notification request object for a webhook</p>
         */
        _FinalStage notificationRequest(Optional<NotificationRequest> notificationRequest);

        _FinalStage notificationRequest(NotificationRequest notificationRequest);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements EntryPointStage, NewParentOrganizationIdStage, _FinalStage {
        private String entryPoint;

        private int newParentOrganizationId;

        private Optional<NotificationRequest> notificationRequest = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(PaypointMoveRequest other) {
            entryPoint(other.getEntryPoint());
            newParentOrganizationId(other.getNewParentOrganizationId());
            notificationRequest(other.getNotificationRequest());
            return this;
        }

        @java.lang.Override
        @JsonSetter("entryPoint")
        public NewParentOrganizationIdStage entryPoint(@NotNull String entryPoint) {
            this.entryPoint = Objects.requireNonNull(entryPoint, "entryPoint must not be null");
            return this;
        }

        /**
         * <p>The ID for the paypoint's new parent organization.</p>
         * <p>The ID for the paypoint's new parent organization.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("newParentOrganizationId")
        public _FinalStage newParentOrganizationId(int newParentOrganizationId) {
            this.newParentOrganizationId = newParentOrganizationId;
            return this;
        }

        /**
         * <p>Optional notification request object for a webhook</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage notificationRequest(NotificationRequest notificationRequest) {
            this.notificationRequest = Optional.ofNullable(notificationRequest);
            return this;
        }

        /**
         * <p>Optional notification request object for a webhook</p>
         */
        @java.lang.Override
        @JsonSetter(value = "notificationRequest", nulls = Nulls.SKIP)
        public _FinalStage notificationRequest(Optional<NotificationRequest> notificationRequest) {
            this.notificationRequest = notificationRequest;
            return this;
        }

        @java.lang.Override
        public PaypointMoveRequest build() {
            return new PaypointMoveRequest(
                    entryPoint, newParentOrganizationId, notificationRequest, additionalProperties);
        }
    }
}
