/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.api.resources.invoice;

import io.github.payabli.api.core.ClientOptions;
import io.github.payabli.api.core.RequestOptions;
import io.github.payabli.api.resources.invoice.requests.AddInvoiceRequest;
import io.github.payabli.api.resources.invoice.requests.EditInvoiceRequest;
import io.github.payabli.api.resources.invoice.requests.GetAttachedFileFromInvoiceRequest;
import io.github.payabli.api.resources.invoice.requests.ListInvoicesOrgRequest;
import io.github.payabli.api.resources.invoice.requests.ListInvoicesRequest;
import io.github.payabli.api.resources.invoice.requests.SendInvoiceRequest;
import io.github.payabli.api.resources.invoice.types.GetInvoiceRecord;
import io.github.payabli.api.resources.invoice.types.InvoiceNumberResponse;
import io.github.payabli.api.resources.invoice.types.InvoiceResponseWithoutData;
import io.github.payabli.api.resources.invoice.types.QueryInvoiceResponse;
import io.github.payabli.api.resources.invoice.types.SendInvoiceResponse;
import io.github.payabli.api.types.FileContent;
import java.util.Map;
import java.util.concurrent.CompletableFuture;

public class AsyncInvoiceClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawInvoiceClient rawClient;

    public AsyncInvoiceClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawInvoiceClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawInvoiceClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Creates an invoice in an entrypoint.
     */
    public CompletableFuture<InvoiceResponseWithoutData> addInvoice(String entry, AddInvoiceRequest request) {
        return this.rawClient.addInvoice(entry, request).thenApply(response -> response.body());
    }

    /**
     * Creates an invoice in an entrypoint.
     */
    public CompletableFuture<InvoiceResponseWithoutData> addInvoice(
            String entry, AddInvoiceRequest request, RequestOptions requestOptions) {
        return this.rawClient.addInvoice(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Deletes an invoice that's attached to a file.
     */
    public CompletableFuture<InvoiceResponseWithoutData> deleteAttachedFromInvoice(String filename, int idInvoice) {
        return this.rawClient.deleteAttachedFromInvoice(filename, idInvoice).thenApply(response -> response.body());
    }

    /**
     * Deletes an invoice that's attached to a file.
     */
    public CompletableFuture<InvoiceResponseWithoutData> deleteAttachedFromInvoice(
            String filename, int idInvoice, RequestOptions requestOptions) {
        return this.rawClient
                .deleteAttachedFromInvoice(filename, idInvoice, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Deletes a single invoice from an entrypoint.
     */
    public CompletableFuture<InvoiceResponseWithoutData> deleteInvoice(int idInvoice) {
        return this.rawClient.deleteInvoice(idInvoice).thenApply(response -> response.body());
    }

    /**
     * Deletes a single invoice from an entrypoint.
     */
    public CompletableFuture<InvoiceResponseWithoutData> deleteInvoice(int idInvoice, RequestOptions requestOptions) {
        return this.rawClient.deleteInvoice(idInvoice, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Updates details for a single invoice in an entrypoint.
     */
    public CompletableFuture<InvoiceResponseWithoutData> editInvoice(int idInvoice, EditInvoiceRequest request) {
        return this.rawClient.editInvoice(idInvoice, request).thenApply(response -> response.body());
    }

    /**
     * Updates details for a single invoice in an entrypoint.
     */
    public CompletableFuture<InvoiceResponseWithoutData> editInvoice(
            int idInvoice, EditInvoiceRequest request, RequestOptions requestOptions) {
        return this.rawClient.editInvoice(idInvoice, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves a file attached to an invoice.
     */
    public CompletableFuture<FileContent> getAttachedFileFromInvoice(String filename, int idInvoice) {
        return this.rawClient.getAttachedFileFromInvoice(filename, idInvoice).thenApply(response -> response.body());
    }

    /**
     * Retrieves a file attached to an invoice.
     */
    public CompletableFuture<FileContent> getAttachedFileFromInvoice(
            String filename, int idInvoice, GetAttachedFileFromInvoiceRequest request) {
        return this.rawClient
                .getAttachedFileFromInvoice(filename, idInvoice, request)
                .thenApply(response -> response.body());
    }

    /**
     * Retrieves a file attached to an invoice.
     */
    public CompletableFuture<FileContent> getAttachedFileFromInvoice(
            String filename, int idInvoice, GetAttachedFileFromInvoiceRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .getAttachedFileFromInvoice(filename, idInvoice, request, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Retrieves a single invoice by ID.
     */
    public CompletableFuture<GetInvoiceRecord> getInvoice(int idInvoice) {
        return this.rawClient.getInvoice(idInvoice).thenApply(response -> response.body());
    }

    /**
     * Retrieves a single invoice by ID.
     */
    public CompletableFuture<GetInvoiceRecord> getInvoice(int idInvoice, RequestOptions requestOptions) {
        return this.rawClient.getInvoice(idInvoice, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves the next available invoice number for a paypoint.
     */
    public CompletableFuture<InvoiceNumberResponse> getInvoiceNumber(String entry) {
        return this.rawClient.getInvoiceNumber(entry).thenApply(response -> response.body());
    }

    /**
     * Retrieves the next available invoice number for a paypoint.
     */
    public CompletableFuture<InvoiceNumberResponse> getInvoiceNumber(String entry, RequestOptions requestOptions) {
        return this.rawClient.getInvoiceNumber(entry, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a list of invoices for an entrypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryInvoiceResponse> listInvoices(String entry) {
        return this.rawClient.listInvoices(entry).thenApply(response -> response.body());
    }

    /**
     * Returns a list of invoices for an entrypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryInvoiceResponse> listInvoices(String entry, ListInvoicesRequest request) {
        return this.rawClient.listInvoices(entry, request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of invoices for an entrypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryInvoiceResponse> listInvoices(
            String entry, ListInvoicesRequest request, RequestOptions requestOptions) {
        return this.rawClient.listInvoices(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a list of invoices for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryInvoiceResponse> listInvoicesOrg(int orgId) {
        return this.rawClient.listInvoicesOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Returns a list of invoices for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryInvoiceResponse> listInvoicesOrg(int orgId, ListInvoicesOrgRequest request) {
        return this.rawClient.listInvoicesOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of invoices for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryInvoiceResponse> listInvoicesOrg(
            int orgId, ListInvoicesOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient.listInvoicesOrg(orgId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Sends an invoice from an entrypoint via email.
     */
    public CompletableFuture<SendInvoiceResponse> sendInvoice(int idInvoice) {
        return this.rawClient.sendInvoice(idInvoice).thenApply(response -> response.body());
    }

    /**
     * Sends an invoice from an entrypoint via email.
     */
    public CompletableFuture<SendInvoiceResponse> sendInvoice(int idInvoice, SendInvoiceRequest request) {
        return this.rawClient.sendInvoice(idInvoice, request).thenApply(response -> response.body());
    }

    /**
     * Sends an invoice from an entrypoint via email.
     */
    public CompletableFuture<SendInvoiceResponse> sendInvoice(
            int idInvoice, SendInvoiceRequest request, RequestOptions requestOptions) {
        return this.rawClient.sendInvoice(idInvoice, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Export a single invoice in PDF format.
     */
    public CompletableFuture<Map<String, Object>> getInvoicePdf(int idInvoice) {
        return this.rawClient.getInvoicePdf(idInvoice).thenApply(response -> response.body());
    }

    /**
     * Export a single invoice in PDF format.
     */
    public CompletableFuture<Map<String, Object>> getInvoicePdf(int idInvoice, RequestOptions requestOptions) {
        return this.rawClient.getInvoicePdf(idInvoice, requestOptions).thenApply(response -> response.body());
    }
}
