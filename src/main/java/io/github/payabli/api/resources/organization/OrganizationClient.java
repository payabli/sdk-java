/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.api.resources.organization;

import io.github.payabli.api.core.ClientOptions;
import io.github.payabli.api.core.RequestOptions;
import io.github.payabli.api.resources.organization.requests.AddOrganizationRequest;
import io.github.payabli.api.resources.organization.requests.OrganizationData;
import io.github.payabli.api.resources.organization.types.AddOrganizationResponse;
import io.github.payabli.api.resources.organization.types.DeleteOrganizationResponse;
import io.github.payabli.api.resources.organization.types.EditOrganizationResponse;
import io.github.payabli.api.types.OrganizationQueryRecord;
import io.github.payabli.api.types.SettingsQueryRecord;

public class OrganizationClient {
    protected final ClientOptions clientOptions;

    private final RawOrganizationClient rawClient;

    public OrganizationClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new RawOrganizationClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public RawOrganizationClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Creates an organization under a parent organization. This is also referred to as a suborganization.
     */
    public AddOrganizationResponse addOrganization(AddOrganizationRequest request) {
        return this.rawClient.addOrganization(request).body();
    }

    /**
     * Creates an organization under a parent organization. This is also referred to as a suborganization.
     */
    public AddOrganizationResponse addOrganization(AddOrganizationRequest request, RequestOptions requestOptions) {
        return this.rawClient.addOrganization(request, requestOptions).body();
    }

    /**
     * Delete an organization by ID.
     */
    public DeleteOrganizationResponse deleteOrganization(int orgId) {
        return this.rawClient.deleteOrganization(orgId).body();
    }

    /**
     * Delete an organization by ID.
     */
    public DeleteOrganizationResponse deleteOrganization(int orgId, RequestOptions requestOptions) {
        return this.rawClient.deleteOrganization(orgId, requestOptions).body();
    }

    /**
     * Updates an organization's details by ID.
     */
    public EditOrganizationResponse editOrganization(int orgId) {
        return this.rawClient.editOrganization(orgId).body();
    }

    /**
     * Updates an organization's details by ID.
     */
    public EditOrganizationResponse editOrganization(int orgId, OrganizationData request) {
        return this.rawClient.editOrganization(orgId, request).body();
    }

    /**
     * Updates an organization's details by ID.
     */
    public EditOrganizationResponse editOrganization(
            int orgId, OrganizationData request, RequestOptions requestOptions) {
        return this.rawClient.editOrganization(orgId, request, requestOptions).body();
    }

    /**
     * Gets an organization's basic information by entry name (entrypoint identifier).
     */
    public OrganizationQueryRecord getBasicOrganization(String entry) {
        return this.rawClient.getBasicOrganization(entry).body();
    }

    /**
     * Gets an organization's basic information by entry name (entrypoint identifier).
     */
    public OrganizationQueryRecord getBasicOrganization(String entry, RequestOptions requestOptions) {
        return this.rawClient.getBasicOrganization(entry, requestOptions).body();
    }

    /**
     * Gets an organizations basic details by org ID.
     */
    public OrganizationQueryRecord getBasicOrganizationById(int orgId) {
        return this.rawClient.getBasicOrganizationById(orgId).body();
    }

    /**
     * Gets an organizations basic details by org ID.
     */
    public OrganizationQueryRecord getBasicOrganizationById(int orgId, RequestOptions requestOptions) {
        return this.rawClient.getBasicOrganizationById(orgId, requestOptions).body();
    }

    /**
     * Retrieves details for an organization by ID.
     */
    public OrganizationQueryRecord getOrganization(int orgId) {
        return this.rawClient.getOrganization(orgId).body();
    }

    /**
     * Retrieves details for an organization by ID.
     */
    public OrganizationQueryRecord getOrganization(int orgId, RequestOptions requestOptions) {
        return this.rawClient.getOrganization(orgId, requestOptions).body();
    }

    /**
     * Retrieves an organization's settings.
     */
    public SettingsQueryRecord getSettingsOrganization(int orgId) {
        return this.rawClient.getSettingsOrganization(orgId).body();
    }

    /**
     * Retrieves an organization's settings.
     */
    public SettingsQueryRecord getSettingsOrganization(int orgId, RequestOptions requestOptions) {
        return this.rawClient.getSettingsOrganization(orgId, requestOptions).body();
    }
}
