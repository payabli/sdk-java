/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BillOptions.Builder.class)
public final class BillOptions {
    private final Optional<Boolean> includePaylink;

    private final Optional<Boolean> includePdf;

    private final Map<String, Object> additionalProperties;

    private BillOptions(
            Optional<Boolean> includePaylink, Optional<Boolean> includePdf, Map<String, Object> additionalProperties) {
        this.includePaylink = includePaylink;
        this.includePdf = includePdf;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Flag to indicate if the scheduled invoice includes a payment link.
     */
    @JsonProperty("includePaylink")
    public Optional<Boolean> getIncludePaylink() {
        return includePaylink;
    }

    /**
     * @return Flag to indicate if the scheduled invoice includes a PDF version of invoice
     */
    @JsonProperty("includePdf")
    public Optional<Boolean> getIncludePdf() {
        return includePdf;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BillOptions && equalTo((BillOptions) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BillOptions other) {
        return includePaylink.equals(other.includePaylink) && includePdf.equals(other.includePdf);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.includePaylink, this.includePdf);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Boolean> includePaylink = Optional.empty();

        private Optional<Boolean> includePdf = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(BillOptions other) {
            includePaylink(other.getIncludePaylink());
            includePdf(other.getIncludePdf());
            return this;
        }

        /**
         * <p>Flag to indicate if the scheduled invoice includes a payment link.</p>
         */
        @JsonSetter(value = "includePaylink", nulls = Nulls.SKIP)
        public Builder includePaylink(Optional<Boolean> includePaylink) {
            this.includePaylink = includePaylink;
            return this;
        }

        public Builder includePaylink(Boolean includePaylink) {
            this.includePaylink = Optional.ofNullable(includePaylink);
            return this;
        }

        /**
         * <p>Flag to indicate if the scheduled invoice includes a PDF version of invoice</p>
         */
        @JsonSetter(value = "includePdf", nulls = Nulls.SKIP)
        public Builder includePdf(Optional<Boolean> includePdf) {
            this.includePdf = includePdf;
            return this;
        }

        public Builder includePdf(Boolean includePdf) {
            this.includePdf = Optional.ofNullable(includePdf);
            return this;
        }

        public BillOptions build() {
            return new BillOptions(includePaylink, includePdf, additionalProperties);
        }
    }
}
