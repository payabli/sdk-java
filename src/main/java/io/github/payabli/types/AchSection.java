/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AchSection.Builder.class)
public final class AchSection {
    private final Optional<AchLinkTypes> acceptance;

    private final Optional<BasicTable> fees;

    private final Optional<BasicTable> price;

    private final Map<String, Object> additionalProperties;

    private AchSection(
            Optional<AchLinkTypes> acceptance,
            Optional<BasicTable> fees,
            Optional<BasicTable> price,
            Map<String, Object> additionalProperties) {
        this.acceptance = acceptance;
        this.fees = fees;
        this.price = price;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("acceptance")
    public Optional<AchLinkTypes> getAcceptance() {
        return acceptance;
    }

    @JsonProperty("fees")
    public Optional<BasicTable> getFees() {
        return fees;
    }

    @JsonProperty("price")
    public Optional<BasicTable> getPrice() {
        return price;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AchSection && equalTo((AchSection) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AchSection other) {
        return acceptance.equals(other.acceptance) && fees.equals(other.fees) && price.equals(other.price);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.acceptance, this.fees, this.price);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<AchLinkTypes> acceptance = Optional.empty();

        private Optional<BasicTable> fees = Optional.empty();

        private Optional<BasicTable> price = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(AchSection other) {
            acceptance(other.getAcceptance());
            fees(other.getFees());
            price(other.getPrice());
            return this;
        }

        @JsonSetter(value = "acceptance", nulls = Nulls.SKIP)
        public Builder acceptance(Optional<AchLinkTypes> acceptance) {
            this.acceptance = acceptance;
            return this;
        }

        public Builder acceptance(AchLinkTypes acceptance) {
            this.acceptance = Optional.ofNullable(acceptance);
            return this;
        }

        @JsonSetter(value = "fees", nulls = Nulls.SKIP)
        public Builder fees(Optional<BasicTable> fees) {
            this.fees = fees;
            return this;
        }

        public Builder fees(BasicTable fees) {
            this.fees = Optional.ofNullable(fees);
            return this;
        }

        @JsonSetter(value = "price", nulls = Nulls.SKIP)
        public Builder price(Optional<BasicTable> price) {
            this.price = price;
            return this;
        }

        public Builder price(BasicTable price) {
            this.price = Optional.ofNullable(price);
            return this;
        }

        public AchSection build() {
            return new AchSection(acceptance, fees, price, additionalProperties);
        }
    }
}
