/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = PayMethodCredit.Builder.class)
public final class PayMethodCredit {
    private final Optional<String> cardcvv;

    private final String cardexp;

    private final Optional<String> cardHolder;

    private final String cardnumber;

    private final Optional<String> cardzip;

    private final Optional<String> initiator;

    private final Optional<Boolean> saveIfSuccess;

    private final Map<String, Object> additionalProperties;

    private PayMethodCredit(
            Optional<String> cardcvv,
            String cardexp,
            Optional<String> cardHolder,
            String cardnumber,
            Optional<String> cardzip,
            Optional<String> initiator,
            Optional<Boolean> saveIfSuccess,
            Map<String, Object> additionalProperties) {
        this.cardcvv = cardcvv;
        this.cardexp = cardexp;
        this.cardHolder = cardHolder;
        this.cardnumber = cardnumber;
        this.cardzip = cardzip;
        this.initiator = initiator;
        this.saveIfSuccess = saveIfSuccess;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("cardcvv")
    public Optional<String> getCardcvv() {
        return cardcvv;
    }

    @JsonProperty("cardexp")
    public String getCardexp() {
        return cardexp;
    }

    @JsonProperty("cardHolder")
    public Optional<String> getCardHolder() {
        return cardHolder;
    }

    @JsonProperty("cardnumber")
    public String getCardnumber() {
        return cardnumber;
    }

    @JsonProperty("cardzip")
    public Optional<String> getCardzip() {
        return cardzip;
    }

    @JsonProperty("initiator")
    public Optional<String> getInitiator() {
        return initiator;
    }

    /**
     * @return Method to use for the transaction. For transactions with a credit or debit card, or a tokenized card, use <code>card</code>.
     */
    @JsonProperty("method")
    public String getMethod() {
        return "card";
    }

    @JsonProperty("saveIfSuccess")
    public Optional<Boolean> getSaveIfSuccess() {
        return saveIfSuccess;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PayMethodCredit && equalTo((PayMethodCredit) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PayMethodCredit other) {
        return cardcvv.equals(other.cardcvv)
                && cardexp.equals(other.cardexp)
                && cardHolder.equals(other.cardHolder)
                && cardnumber.equals(other.cardnumber)
                && cardzip.equals(other.cardzip)
                && initiator.equals(other.initiator)
                && saveIfSuccess.equals(other.saveIfSuccess);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.cardcvv,
                this.cardexp,
                this.cardHolder,
                this.cardnumber,
                this.cardzip,
                this.initiator,
                this.saveIfSuccess);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CardexpStage builder() {
        return new Builder();
    }

    public interface CardexpStage {
        CardnumberStage cardexp(@NotNull String cardexp);

        Builder from(PayMethodCredit other);
    }

    public interface CardnumberStage {
        _FinalStage cardnumber(@NotNull String cardnumber);
    }

    public interface _FinalStage {
        PayMethodCredit build();

        _FinalStage cardcvv(Optional<String> cardcvv);

        _FinalStage cardcvv(String cardcvv);

        _FinalStage cardHolder(Optional<String> cardHolder);

        _FinalStage cardHolder(String cardHolder);

        _FinalStage cardzip(Optional<String> cardzip);

        _FinalStage cardzip(String cardzip);

        _FinalStage initiator(Optional<String> initiator);

        _FinalStage initiator(String initiator);

        _FinalStage saveIfSuccess(Optional<Boolean> saveIfSuccess);

        _FinalStage saveIfSuccess(Boolean saveIfSuccess);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements CardexpStage, CardnumberStage, _FinalStage {
        private String cardexp;

        private String cardnumber;

        private Optional<Boolean> saveIfSuccess = Optional.empty();

        private Optional<String> initiator = Optional.empty();

        private Optional<String> cardzip = Optional.empty();

        private Optional<String> cardHolder = Optional.empty();

        private Optional<String> cardcvv = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(PayMethodCredit other) {
            cardcvv(other.getCardcvv());
            cardexp(other.getCardexp());
            cardHolder(other.getCardHolder());
            cardnumber(other.getCardnumber());
            cardzip(other.getCardzip());
            initiator(other.getInitiator());
            saveIfSuccess(other.getSaveIfSuccess());
            return this;
        }

        @java.lang.Override
        @JsonSetter("cardexp")
        public CardnumberStage cardexp(@NotNull String cardexp) {
            this.cardexp = Objects.requireNonNull(cardexp, "cardexp must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("cardnumber")
        public _FinalStage cardnumber(@NotNull String cardnumber) {
            this.cardnumber = Objects.requireNonNull(cardnumber, "cardnumber must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage saveIfSuccess(Boolean saveIfSuccess) {
            this.saveIfSuccess = Optional.ofNullable(saveIfSuccess);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "saveIfSuccess", nulls = Nulls.SKIP)
        public _FinalStage saveIfSuccess(Optional<Boolean> saveIfSuccess) {
            this.saveIfSuccess = saveIfSuccess;
            return this;
        }

        @java.lang.Override
        public _FinalStage initiator(String initiator) {
            this.initiator = Optional.ofNullable(initiator);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "initiator", nulls = Nulls.SKIP)
        public _FinalStage initiator(Optional<String> initiator) {
            this.initiator = initiator;
            return this;
        }

        @java.lang.Override
        public _FinalStage cardzip(String cardzip) {
            this.cardzip = Optional.ofNullable(cardzip);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "cardzip", nulls = Nulls.SKIP)
        public _FinalStage cardzip(Optional<String> cardzip) {
            this.cardzip = cardzip;
            return this;
        }

        @java.lang.Override
        public _FinalStage cardHolder(String cardHolder) {
            this.cardHolder = Optional.ofNullable(cardHolder);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "cardHolder", nulls = Nulls.SKIP)
        public _FinalStage cardHolder(Optional<String> cardHolder) {
            this.cardHolder = cardHolder;
            return this;
        }

        @java.lang.Override
        public _FinalStage cardcvv(String cardcvv) {
            this.cardcvv = Optional.ofNullable(cardcvv);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "cardcvv", nulls = Nulls.SKIP)
        public _FinalStage cardcvv(Optional<String> cardcvv) {
            this.cardcvv = cardcvv;
            return this;
        }

        @java.lang.Override
        public PayMethodCredit build() {
            return new PayMethodCredit(
                    cardcvv, cardexp, cardHolder, cardnumber, cardzip, initiator, saveIfSuccess, additionalProperties);
        }
    }
}
