/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = PayabliApiResponseError400ResponseData.Builder.class)
public final class PayabliApiResponseError400ResponseData {
    private final Optional<String> explanation;

    private final Optional<String> todoAction;

    private final Map<String, Object> additionalProperties;

    private PayabliApiResponseError400ResponseData(
            Optional<String> explanation, Optional<String> todoAction, Map<String, Object> additionalProperties) {
        this.explanation = explanation;
        this.todoAction = todoAction;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Describes the reason the operation failed.
     */
    @JsonProperty("explanation")
    public Optional<String> getExplanation() {
        return explanation;
    }

    /**
     * @return Describes how to resolve the error.
     */
    @JsonProperty("todoAction")
    public Optional<String> getTodoAction() {
        return todoAction;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PayabliApiResponseError400ResponseData
                && equalTo((PayabliApiResponseError400ResponseData) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PayabliApiResponseError400ResponseData other) {
        return explanation.equals(other.explanation) && todoAction.equals(other.todoAction);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.explanation, this.todoAction);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> explanation = Optional.empty();

        private Optional<String> todoAction = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(PayabliApiResponseError400ResponseData other) {
            explanation(other.getExplanation());
            todoAction(other.getTodoAction());
            return this;
        }

        /**
         * <p>Describes the reason the operation failed.</p>
         */
        @JsonSetter(value = "explanation", nulls = Nulls.SKIP)
        public Builder explanation(Optional<String> explanation) {
            this.explanation = explanation;
            return this;
        }

        public Builder explanation(String explanation) {
            this.explanation = Optional.ofNullable(explanation);
            return this;
        }

        /**
         * <p>Describes how to resolve the error.</p>
         */
        @JsonSetter(value = "todoAction", nulls = Nulls.SKIP)
        public Builder todoAction(Optional<String> todoAction) {
            this.todoAction = todoAction;
            return this;
        }

        public Builder todoAction(String todoAction) {
            this.todoAction = Optional.ofNullable(todoAction);
            return this;
        }

        public PayabliApiResponseError400ResponseData build() {
            return new PayabliApiResponseError400ResponseData(explanation, todoAction, additionalProperties);
        }
    }
}
