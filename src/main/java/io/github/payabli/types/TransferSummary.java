/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TransferSummary.Builder.class)
public final class TransferSummary {
    private final int totalPages;

    private final int totalRecords;

    private final int pageSize;

    private final Map<String, Object> additionalProperties;

    private TransferSummary(int totalPages, int totalRecords, int pageSize, Map<String, Object> additionalProperties) {
        this.totalPages = totalPages;
        this.totalRecords = totalRecords;
        this.pageSize = pageSize;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("totalPages")
    public int getTotalPages() {
        return totalPages;
    }

    @JsonProperty("totalRecords")
    public int getTotalRecords() {
        return totalRecords;
    }

    @JsonProperty("pageSize")
    public int getPageSize() {
        return pageSize;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TransferSummary && equalTo((TransferSummary) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TransferSummary other) {
        return totalPages == other.totalPages && totalRecords == other.totalRecords && pageSize == other.pageSize;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.totalPages, this.totalRecords, this.pageSize);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TotalPagesStage builder() {
        return new Builder();
    }

    public interface TotalPagesStage {
        TotalRecordsStage totalPages(int totalPages);

        Builder from(TransferSummary other);
    }

    public interface TotalRecordsStage {
        PageSizeStage totalRecords(int totalRecords);
    }

    public interface PageSizeStage {
        _FinalStage pageSize(int pageSize);
    }

    public interface _FinalStage {
        TransferSummary build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TotalPagesStage, TotalRecordsStage, PageSizeStage, _FinalStage {
        private int totalPages;

        private int totalRecords;

        private int pageSize;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(TransferSummary other) {
            totalPages(other.getTotalPages());
            totalRecords(other.getTotalRecords());
            pageSize(other.getPageSize());
            return this;
        }

        @java.lang.Override
        @JsonSetter("totalPages")
        public TotalRecordsStage totalPages(int totalPages) {
            this.totalPages = totalPages;
            return this;
        }

        @java.lang.Override
        @JsonSetter("totalRecords")
        public PageSizeStage totalRecords(int totalRecords) {
            this.totalRecords = totalRecords;
            return this;
        }

        @java.lang.Override
        @JsonSetter("pageSize")
        public _FinalStage pageSize(int pageSize) {
            this.pageSize = pageSize;
            return this;
        }

        @java.lang.Override
        public TransferSummary build() {
            return new TransferSummary(totalPages, totalRecords, pageSize, additionalProperties);
        }
    }
}
