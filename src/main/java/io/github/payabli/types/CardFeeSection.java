/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CardFeeSection.Builder.class)
public final class CardFeeSection {
    private final Optional<TemplateElement> achBatchCardFee;

    private final Optional<TemplateElement> annualCardFee;

    private final Optional<TemplateElement> avsCardFee;

    private final Optional<TemplateElement> chargebackCardFee;

    private final Optional<TemplateElement> ddaRejectsCardFee;

    private final Optional<TemplateElement> earlyTerminationCardFee;

    private final Optional<TemplateElement> minimumProcessingCardFee;

    private final Optional<TemplateElement> monthlyPciCardFee;

    private final Optional<TemplateElement> montlyPlatformCardFee;

    private final Optional<TemplateElement> retrievalCardFee;

    private final Optional<TemplateElement> transactionCardFee;

    private final Optional<Boolean> visible;

    private final Map<String, Object> additionalProperties;

    private CardFeeSection(
            Optional<TemplateElement> achBatchCardFee,
            Optional<TemplateElement> annualCardFee,
            Optional<TemplateElement> avsCardFee,
            Optional<TemplateElement> chargebackCardFee,
            Optional<TemplateElement> ddaRejectsCardFee,
            Optional<TemplateElement> earlyTerminationCardFee,
            Optional<TemplateElement> minimumProcessingCardFee,
            Optional<TemplateElement> monthlyPciCardFee,
            Optional<TemplateElement> montlyPlatformCardFee,
            Optional<TemplateElement> retrievalCardFee,
            Optional<TemplateElement> transactionCardFee,
            Optional<Boolean> visible,
            Map<String, Object> additionalProperties) {
        this.achBatchCardFee = achBatchCardFee;
        this.annualCardFee = annualCardFee;
        this.avsCardFee = avsCardFee;
        this.chargebackCardFee = chargebackCardFee;
        this.ddaRejectsCardFee = ddaRejectsCardFee;
        this.earlyTerminationCardFee = earlyTerminationCardFee;
        this.minimumProcessingCardFee = minimumProcessingCardFee;
        this.monthlyPciCardFee = monthlyPciCardFee;
        this.montlyPlatformCardFee = montlyPlatformCardFee;
        this.retrievalCardFee = retrievalCardFee;
        this.transactionCardFee = transactionCardFee;
        this.visible = visible;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("achBatchCardFee")
    public Optional<TemplateElement> getAchBatchCardFee() {
        return achBatchCardFee;
    }

    @JsonProperty("annualCardFee")
    public Optional<TemplateElement> getAnnualCardFee() {
        return annualCardFee;
    }

    @JsonProperty("avsCardFee")
    public Optional<TemplateElement> getAvsCardFee() {
        return avsCardFee;
    }

    @JsonProperty("chargebackCardFee")
    public Optional<TemplateElement> getChargebackCardFee() {
        return chargebackCardFee;
    }

    @JsonProperty("ddaRejectsCardFee")
    public Optional<TemplateElement> getDdaRejectsCardFee() {
        return ddaRejectsCardFee;
    }

    @JsonProperty("earlyTerminationCardFee")
    public Optional<TemplateElement> getEarlyTerminationCardFee() {
        return earlyTerminationCardFee;
    }

    @JsonProperty("minimumProcessingCardFee")
    public Optional<TemplateElement> getMinimumProcessingCardFee() {
        return minimumProcessingCardFee;
    }

    @JsonProperty("monthlyPCICardFee")
    public Optional<TemplateElement> getMonthlyPciCardFee() {
        return monthlyPciCardFee;
    }

    @JsonProperty("montlyPlatformCardFee")
    public Optional<TemplateElement> getMontlyPlatformCardFee() {
        return montlyPlatformCardFee;
    }

    @JsonProperty("retrievalCardFee")
    public Optional<TemplateElement> getRetrievalCardFee() {
        return retrievalCardFee;
    }

    @JsonProperty("transactionCardFee")
    public Optional<TemplateElement> getTransactionCardFee() {
        return transactionCardFee;
    }

    @JsonProperty("visible")
    public Optional<Boolean> getVisible() {
        return visible;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CardFeeSection && equalTo((CardFeeSection) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CardFeeSection other) {
        return achBatchCardFee.equals(other.achBatchCardFee)
                && annualCardFee.equals(other.annualCardFee)
                && avsCardFee.equals(other.avsCardFee)
                && chargebackCardFee.equals(other.chargebackCardFee)
                && ddaRejectsCardFee.equals(other.ddaRejectsCardFee)
                && earlyTerminationCardFee.equals(other.earlyTerminationCardFee)
                && minimumProcessingCardFee.equals(other.minimumProcessingCardFee)
                && monthlyPciCardFee.equals(other.monthlyPciCardFee)
                && montlyPlatformCardFee.equals(other.montlyPlatformCardFee)
                && retrievalCardFee.equals(other.retrievalCardFee)
                && transactionCardFee.equals(other.transactionCardFee)
                && visible.equals(other.visible);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.achBatchCardFee,
                this.annualCardFee,
                this.avsCardFee,
                this.chargebackCardFee,
                this.ddaRejectsCardFee,
                this.earlyTerminationCardFee,
                this.minimumProcessingCardFee,
                this.monthlyPciCardFee,
                this.montlyPlatformCardFee,
                this.retrievalCardFee,
                this.transactionCardFee,
                this.visible);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<TemplateElement> achBatchCardFee = Optional.empty();

        private Optional<TemplateElement> annualCardFee = Optional.empty();

        private Optional<TemplateElement> avsCardFee = Optional.empty();

        private Optional<TemplateElement> chargebackCardFee = Optional.empty();

        private Optional<TemplateElement> ddaRejectsCardFee = Optional.empty();

        private Optional<TemplateElement> earlyTerminationCardFee = Optional.empty();

        private Optional<TemplateElement> minimumProcessingCardFee = Optional.empty();

        private Optional<TemplateElement> monthlyPciCardFee = Optional.empty();

        private Optional<TemplateElement> montlyPlatformCardFee = Optional.empty();

        private Optional<TemplateElement> retrievalCardFee = Optional.empty();

        private Optional<TemplateElement> transactionCardFee = Optional.empty();

        private Optional<Boolean> visible = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(CardFeeSection other) {
            achBatchCardFee(other.getAchBatchCardFee());
            annualCardFee(other.getAnnualCardFee());
            avsCardFee(other.getAvsCardFee());
            chargebackCardFee(other.getChargebackCardFee());
            ddaRejectsCardFee(other.getDdaRejectsCardFee());
            earlyTerminationCardFee(other.getEarlyTerminationCardFee());
            minimumProcessingCardFee(other.getMinimumProcessingCardFee());
            monthlyPciCardFee(other.getMonthlyPciCardFee());
            montlyPlatformCardFee(other.getMontlyPlatformCardFee());
            retrievalCardFee(other.getRetrievalCardFee());
            transactionCardFee(other.getTransactionCardFee());
            visible(other.getVisible());
            return this;
        }

        @JsonSetter(value = "achBatchCardFee", nulls = Nulls.SKIP)
        public Builder achBatchCardFee(Optional<TemplateElement> achBatchCardFee) {
            this.achBatchCardFee = achBatchCardFee;
            return this;
        }

        public Builder achBatchCardFee(TemplateElement achBatchCardFee) {
            this.achBatchCardFee = Optional.ofNullable(achBatchCardFee);
            return this;
        }

        @JsonSetter(value = "annualCardFee", nulls = Nulls.SKIP)
        public Builder annualCardFee(Optional<TemplateElement> annualCardFee) {
            this.annualCardFee = annualCardFee;
            return this;
        }

        public Builder annualCardFee(TemplateElement annualCardFee) {
            this.annualCardFee = Optional.ofNullable(annualCardFee);
            return this;
        }

        @JsonSetter(value = "avsCardFee", nulls = Nulls.SKIP)
        public Builder avsCardFee(Optional<TemplateElement> avsCardFee) {
            this.avsCardFee = avsCardFee;
            return this;
        }

        public Builder avsCardFee(TemplateElement avsCardFee) {
            this.avsCardFee = Optional.ofNullable(avsCardFee);
            return this;
        }

        @JsonSetter(value = "chargebackCardFee", nulls = Nulls.SKIP)
        public Builder chargebackCardFee(Optional<TemplateElement> chargebackCardFee) {
            this.chargebackCardFee = chargebackCardFee;
            return this;
        }

        public Builder chargebackCardFee(TemplateElement chargebackCardFee) {
            this.chargebackCardFee = Optional.ofNullable(chargebackCardFee);
            return this;
        }

        @JsonSetter(value = "ddaRejectsCardFee", nulls = Nulls.SKIP)
        public Builder ddaRejectsCardFee(Optional<TemplateElement> ddaRejectsCardFee) {
            this.ddaRejectsCardFee = ddaRejectsCardFee;
            return this;
        }

        public Builder ddaRejectsCardFee(TemplateElement ddaRejectsCardFee) {
            this.ddaRejectsCardFee = Optional.ofNullable(ddaRejectsCardFee);
            return this;
        }

        @JsonSetter(value = "earlyTerminationCardFee", nulls = Nulls.SKIP)
        public Builder earlyTerminationCardFee(Optional<TemplateElement> earlyTerminationCardFee) {
            this.earlyTerminationCardFee = earlyTerminationCardFee;
            return this;
        }

        public Builder earlyTerminationCardFee(TemplateElement earlyTerminationCardFee) {
            this.earlyTerminationCardFee = Optional.ofNullable(earlyTerminationCardFee);
            return this;
        }

        @JsonSetter(value = "minimumProcessingCardFee", nulls = Nulls.SKIP)
        public Builder minimumProcessingCardFee(Optional<TemplateElement> minimumProcessingCardFee) {
            this.minimumProcessingCardFee = minimumProcessingCardFee;
            return this;
        }

        public Builder minimumProcessingCardFee(TemplateElement minimumProcessingCardFee) {
            this.minimumProcessingCardFee = Optional.ofNullable(minimumProcessingCardFee);
            return this;
        }

        @JsonSetter(value = "monthlyPCICardFee", nulls = Nulls.SKIP)
        public Builder monthlyPciCardFee(Optional<TemplateElement> monthlyPciCardFee) {
            this.monthlyPciCardFee = monthlyPciCardFee;
            return this;
        }

        public Builder monthlyPciCardFee(TemplateElement monthlyPciCardFee) {
            this.monthlyPciCardFee = Optional.ofNullable(monthlyPciCardFee);
            return this;
        }

        @JsonSetter(value = "montlyPlatformCardFee", nulls = Nulls.SKIP)
        public Builder montlyPlatformCardFee(Optional<TemplateElement> montlyPlatformCardFee) {
            this.montlyPlatformCardFee = montlyPlatformCardFee;
            return this;
        }

        public Builder montlyPlatformCardFee(TemplateElement montlyPlatformCardFee) {
            this.montlyPlatformCardFee = Optional.ofNullable(montlyPlatformCardFee);
            return this;
        }

        @JsonSetter(value = "retrievalCardFee", nulls = Nulls.SKIP)
        public Builder retrievalCardFee(Optional<TemplateElement> retrievalCardFee) {
            this.retrievalCardFee = retrievalCardFee;
            return this;
        }

        public Builder retrievalCardFee(TemplateElement retrievalCardFee) {
            this.retrievalCardFee = Optional.ofNullable(retrievalCardFee);
            return this;
        }

        @JsonSetter(value = "transactionCardFee", nulls = Nulls.SKIP)
        public Builder transactionCardFee(Optional<TemplateElement> transactionCardFee) {
            this.transactionCardFee = transactionCardFee;
            return this;
        }

        public Builder transactionCardFee(TemplateElement transactionCardFee) {
            this.transactionCardFee = Optional.ofNullable(transactionCardFee);
            return this;
        }

        @JsonSetter(value = "visible", nulls = Nulls.SKIP)
        public Builder visible(Optional<Boolean> visible) {
            this.visible = visible;
            return this;
        }

        public Builder visible(Boolean visible) {
            this.visible = Optional.ofNullable(visible);
            return this;
        }

        public CardFeeSection build() {
            return new CardFeeSection(
                    achBatchCardFee,
                    annualCardFee,
                    avsCardFee,
                    chargebackCardFee,
                    ddaRejectsCardFee,
                    earlyTerminationCardFee,
                    minimumProcessingCardFee,
                    monthlyPciCardFee,
                    montlyPlatformCardFee,
                    retrievalCardFee,
                    transactionCardFee,
                    visible,
                    additionalProperties);
        }
    }
}
