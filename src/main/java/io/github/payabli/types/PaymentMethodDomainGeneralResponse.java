/**
 * This file was auto-generated by Fern from our API Definition.
 */
package io.github.payabli.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.github.payabli.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = PaymentMethodDomainGeneralResponse.Builder.class)
public final class PaymentMethodDomainGeneralResponse {
    private final Optional<Boolean> isSuccess;

    private final Optional<String> pageidentifier;

    private final Optional<PaymentMethodDomainApiResponse> responseData;

    private final Optional<String> responseText;

    private final Map<String, Object> additionalProperties;

    private PaymentMethodDomainGeneralResponse(
            Optional<Boolean> isSuccess,
            Optional<String> pageidentifier,
            Optional<PaymentMethodDomainApiResponse> responseData,
            Optional<String> responseText,
            Map<String, Object> additionalProperties) {
        this.isSuccess = isSuccess;
        this.pageidentifier = pageidentifier;
        this.responseData = responseData;
        this.responseText = responseText;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("isSuccess")
    public Optional<Boolean> getIsSuccess() {
        return isSuccess;
    }

    @JsonProperty("pageidentifier")
    public Optional<String> getPageidentifier() {
        return pageidentifier;
    }

    @JsonProperty("responseData")
    public Optional<PaymentMethodDomainApiResponse> getResponseData() {
        return responseData;
    }

    @JsonProperty("responseText")
    public Optional<String> getResponseText() {
        return responseText;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PaymentMethodDomainGeneralResponse
                && equalTo((PaymentMethodDomainGeneralResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PaymentMethodDomainGeneralResponse other) {
        return isSuccess.equals(other.isSuccess)
                && pageidentifier.equals(other.pageidentifier)
                && responseData.equals(other.responseData)
                && responseText.equals(other.responseText);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.isSuccess, this.pageidentifier, this.responseData, this.responseText);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Boolean> isSuccess = Optional.empty();

        private Optional<String> pageidentifier = Optional.empty();

        private Optional<PaymentMethodDomainApiResponse> responseData = Optional.empty();

        private Optional<String> responseText = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(PaymentMethodDomainGeneralResponse other) {
            isSuccess(other.getIsSuccess());
            pageidentifier(other.getPageidentifier());
            responseData(other.getResponseData());
            responseText(other.getResponseText());
            return this;
        }

        @JsonSetter(value = "isSuccess", nulls = Nulls.SKIP)
        public Builder isSuccess(Optional<Boolean> isSuccess) {
            this.isSuccess = isSuccess;
            return this;
        }

        public Builder isSuccess(Boolean isSuccess) {
            this.isSuccess = Optional.ofNullable(isSuccess);
            return this;
        }

        @JsonSetter(value = "pageidentifier", nulls = Nulls.SKIP)
        public Builder pageidentifier(Optional<String> pageidentifier) {
            this.pageidentifier = pageidentifier;
            return this;
        }

        public Builder pageidentifier(String pageidentifier) {
            this.pageidentifier = Optional.ofNullable(pageidentifier);
            return this;
        }

        @JsonSetter(value = "responseData", nulls = Nulls.SKIP)
        public Builder responseData(Optional<PaymentMethodDomainApiResponse> responseData) {
            this.responseData = responseData;
            return this;
        }

        public Builder responseData(PaymentMethodDomainApiResponse responseData) {
            this.responseData = Optional.ofNullable(responseData);
            return this;
        }

        @JsonSetter(value = "responseText", nulls = Nulls.SKIP)
        public Builder responseText(Optional<String> responseText) {
            this.responseText = responseText;
            return this;
        }

        public Builder responseText(String responseText) {
            this.responseText = Optional.ofNullable(responseText);
            return this;
        }

        public PaymentMethodDomainGeneralResponse build() {
            return new PaymentMethodDomainGeneralResponse(
                    isSuccess, pageidentifier, responseData, responseText, additionalProperties);
        }
    }
}
