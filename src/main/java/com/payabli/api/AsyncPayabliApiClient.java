/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api;

import com.payabli.api.core.ClientOptions;
import com.payabli.api.core.Suppliers;
import com.payabli.api.resources.bill.AsyncBillClient;
import com.payabli.api.resources.boarding.AsyncBoardingClient;
import com.payabli.api.resources.chargebacks.AsyncChargeBacksClient;
import com.payabli.api.resources.checkcapture.AsyncCheckCaptureClient;
import com.payabli.api.resources.cloud.AsyncCloudClient;
import com.payabli.api.resources.customer.AsyncCustomerClient;
import com.payabli.api.resources.export.AsyncExportClient;
import com.payabli.api.resources.hostedpaymentpages.AsyncHostedPaymentPagesClient;
import com.payabli.api.resources.import_.AsyncImportClient;
import com.payabli.api.resources.invoice.AsyncInvoiceClient;
import com.payabli.api.resources.lineitem.AsyncLineItemClient;
import com.payabli.api.resources.moneyin.AsyncMoneyInClient;
import com.payabli.api.resources.moneyout.AsyncMoneyOutClient;
import com.payabli.api.resources.notification.AsyncNotificationClient;
import com.payabli.api.resources.ocr.AsyncOcrClient;
import com.payabli.api.resources.organization.AsyncOrganizationClient;
import com.payabli.api.resources.paymentlink.AsyncPaymentLinkClient;
import com.payabli.api.resources.paymentmethoddomain.AsyncPaymentMethodDomainClient;
import com.payabli.api.resources.paypoint.AsyncPaypointClient;
import com.payabli.api.resources.query.AsyncQueryClient;
import com.payabli.api.resources.statistic.AsyncStatisticClient;
import com.payabli.api.resources.subscription.AsyncSubscriptionClient;
import com.payabli.api.resources.templates.AsyncTemplatesClient;
import com.payabli.api.resources.tokenstorage.AsyncTokenStorageClient;
import com.payabli.api.resources.user.AsyncUserClient;
import com.payabli.api.resources.vendorv.AsyncVendorvClient;
import com.payabli.api.resources.wallet.AsyncWalletClient;
import java.util.function.Supplier;

public class AsyncPayabliApiClient {
    protected final ClientOptions clientOptions;

    protected final Supplier<AsyncBillClient> billClient;

    protected final Supplier<AsyncBoardingClient> boardingClient;

    protected final Supplier<AsyncChargeBacksClient> chargeBacksClient;

    protected final Supplier<AsyncCheckCaptureClient> checkCaptureClient;

    protected final Supplier<AsyncCloudClient> cloudClient;

    protected final Supplier<AsyncCustomerClient> customerClient;

    protected final Supplier<AsyncExportClient> exportClient;

    protected final Supplier<AsyncHostedPaymentPagesClient> hostedPaymentPagesClient;

    protected final Supplier<AsyncImportClient> importClient;

    protected final Supplier<AsyncInvoiceClient> invoiceClient;

    protected final Supplier<AsyncLineItemClient> lineItemClient;

    protected final Supplier<AsyncMoneyInClient> moneyInClient;

    protected final Supplier<AsyncMoneyOutClient> moneyOutClient;

    protected final Supplier<AsyncNotificationClient> notificationClient;

    protected final Supplier<AsyncOcrClient> ocrClient;

    protected final Supplier<AsyncOrganizationClient> organizationClient;

    protected final Supplier<AsyncPaymentLinkClient> paymentLinkClient;

    protected final Supplier<AsyncPaymentMethodDomainClient> paymentMethodDomainClient;

    protected final Supplier<AsyncPaypointClient> paypointClient;

    protected final Supplier<AsyncQueryClient> queryClient;

    protected final Supplier<AsyncStatisticClient> statisticClient;

    protected final Supplier<AsyncSubscriptionClient> subscriptionClient;

    protected final Supplier<AsyncTemplatesClient> templatesClient;

    protected final Supplier<AsyncTokenStorageClient> tokenStorageClient;

    protected final Supplier<AsyncUserClient> userClient;

    protected final Supplier<AsyncVendorvClient> vendorvClient;

    protected final Supplier<AsyncWalletClient> walletClient;

    public AsyncPayabliApiClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.billClient = Suppliers.memoize(() -> new AsyncBillClient(clientOptions));
        this.boardingClient = Suppliers.memoize(() -> new AsyncBoardingClient(clientOptions));
        this.chargeBacksClient = Suppliers.memoize(() -> new AsyncChargeBacksClient(clientOptions));
        this.checkCaptureClient = Suppliers.memoize(() -> new AsyncCheckCaptureClient(clientOptions));
        this.cloudClient = Suppliers.memoize(() -> new AsyncCloudClient(clientOptions));
        this.customerClient = Suppliers.memoize(() -> new AsyncCustomerClient(clientOptions));
        this.exportClient = Suppliers.memoize(() -> new AsyncExportClient(clientOptions));
        this.hostedPaymentPagesClient = Suppliers.memoize(() -> new AsyncHostedPaymentPagesClient(clientOptions));
        this.importClient = Suppliers.memoize(() -> new AsyncImportClient(clientOptions));
        this.invoiceClient = Suppliers.memoize(() -> new AsyncInvoiceClient(clientOptions));
        this.lineItemClient = Suppliers.memoize(() -> new AsyncLineItemClient(clientOptions));
        this.moneyInClient = Suppliers.memoize(() -> new AsyncMoneyInClient(clientOptions));
        this.moneyOutClient = Suppliers.memoize(() -> new AsyncMoneyOutClient(clientOptions));
        this.notificationClient = Suppliers.memoize(() -> new AsyncNotificationClient(clientOptions));
        this.ocrClient = Suppliers.memoize(() -> new AsyncOcrClient(clientOptions));
        this.organizationClient = Suppliers.memoize(() -> new AsyncOrganizationClient(clientOptions));
        this.paymentLinkClient = Suppliers.memoize(() -> new AsyncPaymentLinkClient(clientOptions));
        this.paymentMethodDomainClient = Suppliers.memoize(() -> new AsyncPaymentMethodDomainClient(clientOptions));
        this.paypointClient = Suppliers.memoize(() -> new AsyncPaypointClient(clientOptions));
        this.queryClient = Suppliers.memoize(() -> new AsyncQueryClient(clientOptions));
        this.statisticClient = Suppliers.memoize(() -> new AsyncStatisticClient(clientOptions));
        this.subscriptionClient = Suppliers.memoize(() -> new AsyncSubscriptionClient(clientOptions));
        this.templatesClient = Suppliers.memoize(() -> new AsyncTemplatesClient(clientOptions));
        this.tokenStorageClient = Suppliers.memoize(() -> new AsyncTokenStorageClient(clientOptions));
        this.userClient = Suppliers.memoize(() -> new AsyncUserClient(clientOptions));
        this.vendorvClient = Suppliers.memoize(() -> new AsyncVendorvClient(clientOptions));
        this.walletClient = Suppliers.memoize(() -> new AsyncWalletClient(clientOptions));
    }

    public AsyncBillClient bill() {
        return this.billClient.get();
    }

    public AsyncBoardingClient boarding() {
        return this.boardingClient.get();
    }

    public AsyncChargeBacksClient chargeBacks() {
        return this.chargeBacksClient.get();
    }

    public AsyncCheckCaptureClient checkCapture() {
        return this.checkCaptureClient.get();
    }

    public AsyncCloudClient cloud() {
        return this.cloudClient.get();
    }

    public AsyncCustomerClient customer() {
        return this.customerClient.get();
    }

    public AsyncExportClient export() {
        return this.exportClient.get();
    }

    public AsyncHostedPaymentPagesClient hostedPaymentPages() {
        return this.hostedPaymentPagesClient.get();
    }

    public AsyncImportClient import_() {
        return this.importClient.get();
    }

    public AsyncInvoiceClient invoice() {
        return this.invoiceClient.get();
    }

    public AsyncLineItemClient lineItem() {
        return this.lineItemClient.get();
    }

    public AsyncMoneyInClient moneyIn() {
        return this.moneyInClient.get();
    }

    public AsyncMoneyOutClient moneyOut() {
        return this.moneyOutClient.get();
    }

    public AsyncNotificationClient notification() {
        return this.notificationClient.get();
    }

    public AsyncOcrClient ocr() {
        return this.ocrClient.get();
    }

    public AsyncOrganizationClient organization() {
        return this.organizationClient.get();
    }

    public AsyncPaymentLinkClient paymentLink() {
        return this.paymentLinkClient.get();
    }

    public AsyncPaymentMethodDomainClient paymentMethodDomain() {
        return this.paymentMethodDomainClient.get();
    }

    public AsyncPaypointClient paypoint() {
        return this.paypointClient.get();
    }

    public AsyncQueryClient query() {
        return this.queryClient.get();
    }

    public AsyncStatisticClient statistic() {
        return this.statisticClient.get();
    }

    public AsyncSubscriptionClient subscription() {
        return this.subscriptionClient.get();
    }

    public AsyncTemplatesClient templates() {
        return this.templatesClient.get();
    }

    public AsyncTokenStorageClient tokenStorage() {
        return this.tokenStorageClient.get();
    }

    public AsyncUserClient user() {
        return this.userClient.get();
    }

    public AsyncVendorvClient vendorv() {
        return this.vendorvClient.get();
    }

    public AsyncWalletClient wallet() {
        return this.walletClient.get();
    }

    public static AsyncPayabliApiClientBuilder builder() {
        return new AsyncPayabliApiClientBuilder();
    }
}
