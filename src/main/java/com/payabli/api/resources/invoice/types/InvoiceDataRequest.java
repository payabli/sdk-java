/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.resources.invoice.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import com.payabli.api.types.BillData;
import com.payabli.api.types.BillOptions;
import com.payabli.api.types.PayorDataRequest;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = InvoiceDataRequest.Builder.class)
public final class InvoiceDataRequest {
    private final Optional<PayorDataRequest> customerData;

    private final Optional<BillData> invoiceData;

    private final Optional<BillOptions> scheduledOptions;

    private final Map<String, Object> additionalProperties;

    private InvoiceDataRequest(
            Optional<PayorDataRequest> customerData,
            Optional<BillData> invoiceData,
            Optional<BillOptions> scheduledOptions,
            Map<String, Object> additionalProperties) {
        this.customerData = customerData;
        this.invoiceData = invoiceData;
        this.scheduledOptions = scheduledOptions;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Object describing the customer/payor. Required for POST requests. Which fields are required depends on the paypoint's custom identifier settings.
     */
    @JsonProperty("customerData")
    public Optional<PayorDataRequest> getCustomerData() {
        return customerData;
    }

    /**
     * @return Object describing the invoice. Required for POST requests.
     */
    @JsonProperty("invoiceData")
    public Optional<BillData> getInvoiceData() {
        return invoiceData;
    }

    /**
     * @return Object with options for scheduled invoices.
     */
    @JsonProperty("scheduledOptions")
    public Optional<BillOptions> getScheduledOptions() {
        return scheduledOptions;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof InvoiceDataRequest && equalTo((InvoiceDataRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(InvoiceDataRequest other) {
        return customerData.equals(other.customerData)
                && invoiceData.equals(other.invoiceData)
                && scheduledOptions.equals(other.scheduledOptions);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.customerData, this.invoiceData, this.scheduledOptions);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<PayorDataRequest> customerData = Optional.empty();

        private Optional<BillData> invoiceData = Optional.empty();

        private Optional<BillOptions> scheduledOptions = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(InvoiceDataRequest other) {
            customerData(other.getCustomerData());
            invoiceData(other.getInvoiceData());
            scheduledOptions(other.getScheduledOptions());
            return this;
        }

        /**
         * <p>Object describing the customer/payor. Required for POST requests. Which fields are required depends on the paypoint's custom identifier settings.</p>
         */
        @JsonSetter(value = "customerData", nulls = Nulls.SKIP)
        public Builder customerData(Optional<PayorDataRequest> customerData) {
            this.customerData = customerData;
            return this;
        }

        public Builder customerData(PayorDataRequest customerData) {
            this.customerData = Optional.ofNullable(customerData);
            return this;
        }

        /**
         * <p>Object describing the invoice. Required for POST requests.</p>
         */
        @JsonSetter(value = "invoiceData", nulls = Nulls.SKIP)
        public Builder invoiceData(Optional<BillData> invoiceData) {
            this.invoiceData = invoiceData;
            return this;
        }

        public Builder invoiceData(BillData invoiceData) {
            this.invoiceData = Optional.ofNullable(invoiceData);
            return this;
        }

        /**
         * <p>Object with options for scheduled invoices.</p>
         */
        @JsonSetter(value = "scheduledOptions", nulls = Nulls.SKIP)
        public Builder scheduledOptions(Optional<BillOptions> scheduledOptions) {
            this.scheduledOptions = scheduledOptions;
            return this;
        }

        public Builder scheduledOptions(BillOptions scheduledOptions) {
            this.scheduledOptions = Optional.ofNullable(scheduledOptions);
            return this;
        }

        public InvoiceDataRequest build() {
            return new InvoiceDataRequest(customerData, invoiceData, scheduledOptions, additionalProperties);
        }
    }
}
