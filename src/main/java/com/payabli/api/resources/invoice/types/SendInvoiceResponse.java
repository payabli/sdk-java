/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.resources.invoice.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SendInvoiceResponse.Builder.class)
public final class SendInvoiceResponse {
    private final boolean isSuccess;

    private final String responseText;

    private final Map<String, Object> additionalProperties;

    private SendInvoiceResponse(boolean isSuccess, String responseText, Map<String, Object> additionalProperties) {
        this.isSuccess = isSuccess;
        this.responseText = responseText;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("isSuccess")
    public boolean getIsSuccess() {
        return isSuccess;
    }

    @JsonProperty("responseText")
    public String getResponseText() {
        return responseText;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SendInvoiceResponse && equalTo((SendInvoiceResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SendInvoiceResponse other) {
        return isSuccess == other.isSuccess && responseText.equals(other.responseText);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.isSuccess, this.responseText);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IsSuccessStage builder() {
        return new Builder();
    }

    public interface IsSuccessStage {
        ResponseTextStage isSuccess(boolean isSuccess);

        Builder from(SendInvoiceResponse other);
    }

    public interface ResponseTextStage {
        _FinalStage responseText(@NotNull String responseText);
    }

    public interface _FinalStage {
        SendInvoiceResponse build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IsSuccessStage, ResponseTextStage, _FinalStage {
        private boolean isSuccess;

        private String responseText;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(SendInvoiceResponse other) {
            isSuccess(other.getIsSuccess());
            responseText(other.getResponseText());
            return this;
        }

        @java.lang.Override
        @JsonSetter("isSuccess")
        public ResponseTextStage isSuccess(boolean isSuccess) {
            this.isSuccess = isSuccess;
            return this;
        }

        @java.lang.Override
        @JsonSetter("responseText")
        public _FinalStage responseText(@NotNull String responseText) {
            this.responseText = Objects.requireNonNull(responseText, "responseText must not be null");
            return this;
        }

        @java.lang.Override
        public SendInvoiceResponse build() {
            return new SendInvoiceResponse(isSuccess, responseText, additionalProperties);
        }
    }
}
