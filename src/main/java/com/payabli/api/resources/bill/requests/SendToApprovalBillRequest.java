/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.resources.bill.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = SendToApprovalBillRequest.Builder.class)
public final class SendToApprovalBillRequest {
    private final Optional<String> idempotencyKey;

    private final Optional<Boolean> autocreateUser;

    private final List<String> body;

    private final Map<String, Object> additionalProperties;

    private SendToApprovalBillRequest(
            Optional<String> idempotencyKey,
            Optional<Boolean> autocreateUser,
            List<String> body,
            Map<String, Object> additionalProperties) {
        this.idempotencyKey = idempotencyKey;
        this.autocreateUser = autocreateUser;
        this.body = body;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("idempotencyKey")
    public Optional<String> getIdempotencyKey() {
        return idempotencyKey;
    }

    /**
     * @return Automatically create the target user for approval if they don't exist.
     */
    @JsonProperty("autocreateUser")
    public Optional<Boolean> getAutocreateUser() {
        return autocreateUser;
    }

    @JsonProperty("body")
    public List<String> getBody() {
        return body;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SendToApprovalBillRequest && equalTo((SendToApprovalBillRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SendToApprovalBillRequest other) {
        return idempotencyKey.equals(other.idempotencyKey)
                && autocreateUser.equals(other.autocreateUser)
                && body.equals(other.body);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.idempotencyKey, this.autocreateUser, this.body);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> idempotencyKey = Optional.empty();

        private Optional<Boolean> autocreateUser = Optional.empty();

        private List<String> body = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(SendToApprovalBillRequest other) {
            idempotencyKey(other.getIdempotencyKey());
            autocreateUser(other.getAutocreateUser());
            body(other.getBody());
            return this;
        }

        @JsonSetter(value = "idempotencyKey", nulls = Nulls.SKIP)
        public Builder idempotencyKey(Optional<String> idempotencyKey) {
            this.idempotencyKey = idempotencyKey;
            return this;
        }

        public Builder idempotencyKey(String idempotencyKey) {
            this.idempotencyKey = Optional.ofNullable(idempotencyKey);
            return this;
        }

        /**
         * <p>Automatically create the target user for approval if they don't exist.</p>
         */
        @JsonSetter(value = "autocreateUser", nulls = Nulls.SKIP)
        public Builder autocreateUser(Optional<Boolean> autocreateUser) {
            this.autocreateUser = autocreateUser;
            return this;
        }

        public Builder autocreateUser(Boolean autocreateUser) {
            this.autocreateUser = Optional.ofNullable(autocreateUser);
            return this;
        }

        @JsonSetter(value = "body", nulls = Nulls.SKIP)
        public Builder body(List<String> body) {
            this.body.clear();
            this.body.addAll(body);
            return this;
        }

        public Builder addBody(String body) {
            this.body.add(body);
            return this;
        }

        public Builder addAllBody(List<String> body) {
            this.body.addAll(body);
            return this;
        }

        public SendToApprovalBillRequest build() {
            return new SendToApprovalBillRequest(idempotencyKey, autocreateUser, body, additionalProperties);
        }
    }
}
