/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.resources.query;

import com.payabli.api.core.ClientOptions;
import com.payabli.api.core.RequestOptions;
import com.payabli.api.resources.query.requests.ListBatchDetailsOrgRequest;
import com.payabli.api.resources.query.requests.ListBatchDetailsRequest;
import com.payabli.api.resources.query.requests.ListBatchesOrgRequest;
import com.payabli.api.resources.query.requests.ListBatchesOutOrgRequest;
import com.payabli.api.resources.query.requests.ListBatchesOutRequest;
import com.payabli.api.resources.query.requests.ListBatchesRequest;
import com.payabli.api.resources.query.requests.ListChargebacksOrgRequest;
import com.payabli.api.resources.query.requests.ListChargebacksRequest;
import com.payabli.api.resources.query.requests.ListCustomersOrgRequest;
import com.payabli.api.resources.query.requests.ListCustomersRequest;
import com.payabli.api.resources.query.requests.ListNotificationReportsOrgRequest;
import com.payabli.api.resources.query.requests.ListNotificationReportsRequest;
import com.payabli.api.resources.query.requests.ListNotificationsOrgRequest;
import com.payabli.api.resources.query.requests.ListNotificationsRequest;
import com.payabli.api.resources.query.requests.ListOrganizationsRequest;
import com.payabli.api.resources.query.requests.ListPayoutOrgRequest;
import com.payabli.api.resources.query.requests.ListPayoutRequest;
import com.payabli.api.resources.query.requests.ListPaypointsRequest;
import com.payabli.api.resources.query.requests.ListSettlementsOrgRequest;
import com.payabli.api.resources.query.requests.ListSettlementsRequest;
import com.payabli.api.resources.query.requests.ListSubscriptionsOrgRequest;
import com.payabli.api.resources.query.requests.ListSubscriptionsRequest;
import com.payabli.api.resources.query.requests.ListTransactionsOrgRequest;
import com.payabli.api.resources.query.requests.ListTransactionsRequest;
import com.payabli.api.resources.query.requests.ListTransfersPaypointRequest;
import com.payabli.api.resources.query.requests.ListTransfersRequest;
import com.payabli.api.resources.query.requests.ListTransfersRequestOrg;
import com.payabli.api.resources.query.requests.ListUsersOrgRequest;
import com.payabli.api.resources.query.requests.ListUsersPaypointRequest;
import com.payabli.api.resources.query.requests.ListVcardsOrgRequest;
import com.payabli.api.resources.query.requests.ListVcardsRequest;
import com.payabli.api.resources.query.requests.ListVendorsOrgRequest;
import com.payabli.api.resources.query.requests.ListVendorsRequest;
import com.payabli.api.resources.query.types.ListOrganizationsResponse;
import com.payabli.api.resources.query.types.QueryTransferDetailResponse;
import com.payabli.api.types.QueryBatchesDetailResponse;
import com.payabli.api.types.QueryBatchesOutResponse;
import com.payabli.api.types.QueryBatchesResponse;
import com.payabli.api.types.QueryChargebacksResponse;
import com.payabli.api.types.QueryCustomerResponse;
import com.payabli.api.types.QueryEntrypointResponse;
import com.payabli.api.types.QueryPayoutTransaction;
import com.payabli.api.types.QueryResponseNotificationReports;
import com.payabli.api.types.QueryResponseNotifications;
import com.payabli.api.types.QueryResponseSettlements;
import com.payabli.api.types.QueryResponseTransactions;
import com.payabli.api.types.QueryResponseVendors;
import com.payabli.api.types.QuerySubscriptionResponse;
import com.payabli.api.types.QueryUserResponse;
import com.payabli.api.types.TransferQueryResponse;
import com.payabli.api.types.VCardQueryResponse;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;

public class AsyncQueryClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawQueryClient rawClient;

    public AsyncQueryClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawQueryClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawQueryClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Retrieve a list of batches and their details, including settled and
     * unsettled transactions for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesDetailResponse> listBatchDetails(String entry) {
        return this.rawClient.listBatchDetails(entry).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of batches and their details, including settled and
     * unsettled transactions for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesDetailResponse> listBatchDetails(
            String entry, ListBatchDetailsRequest request) {
        return this.rawClient.listBatchDetails(entry, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of batches and their details, including settled and
     * unsettled transactions for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesDetailResponse> listBatchDetails(
            String entry, ListBatchDetailsRequest request, RequestOptions requestOptions) {
        return this.rawClient.listBatchDetails(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of batches and their details, including settled and unsettled transactions for an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseSettlements> listBatchDetailsOrg(int orgId) {
        return this.rawClient.listBatchDetailsOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of batches and their details, including settled and unsettled transactions for an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseSettlements> listBatchDetailsOrg(
            int orgId, ListBatchDetailsOrgRequest request) {
        return this.rawClient.listBatchDetailsOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of batches and their details, including settled and unsettled transactions for an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseSettlements> listBatchDetailsOrg(
            int orgId, ListBatchDetailsOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .listBatchDetailsOrg(orgId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of batches for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesResponse> listBatches(String entry) {
        return this.rawClient.listBatches(entry).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of batches for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesResponse> listBatches(String entry, ListBatchesRequest request) {
        return this.rawClient.listBatches(entry, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of batches for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesResponse> listBatches(
            String entry, ListBatchesRequest request, RequestOptions requestOptions) {
        return this.rawClient.listBatches(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of batches for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesResponse> listBatchesOrg(int orgId) {
        return this.rawClient.listBatchesOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of batches for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesResponse> listBatchesOrg(int orgId, ListBatchesOrgRequest request) {
        return this.rawClient.listBatchesOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of batches for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesResponse> listBatchesOrg(
            int orgId, ListBatchesOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient.listBatchesOrg(orgId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of MoneyOut batches for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesOutResponse> listBatchesOut(String entry) {
        return this.rawClient.listBatchesOut(entry).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of MoneyOut batches for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesOutResponse> listBatchesOut(String entry, ListBatchesOutRequest request) {
        return this.rawClient.listBatchesOut(entry, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of MoneyOut batches for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesOutResponse> listBatchesOut(
            String entry, ListBatchesOutRequest request, RequestOptions requestOptions) {
        return this.rawClient.listBatchesOut(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of MoneyOut batches for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesOutResponse> listBatchesOutOrg(int orgId) {
        return this.rawClient.listBatchesOutOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of MoneyOut batches for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesOutResponse> listBatchesOutOrg(int orgId, ListBatchesOutOrgRequest request) {
        return this.rawClient.listBatchesOutOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of MoneyOut batches for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryBatchesOutResponse> listBatchesOutOrg(
            int orgId, ListBatchesOutOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient.listBatchesOutOrg(orgId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of chargebacks and returned transactions for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryChargebacksResponse> listChargebacks(String entry) {
        return this.rawClient.listChargebacks(entry).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of chargebacks and returned transactions for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryChargebacksResponse> listChargebacks(String entry, ListChargebacksRequest request) {
        return this.rawClient.listChargebacks(entry, request).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of chargebacks and returned transactions for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryChargebacksResponse> listChargebacks(
            String entry, ListChargebacksRequest request, RequestOptions requestOptions) {
        return this.rawClient.listChargebacks(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of chargebacks and returned transactions for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryChargebacksResponse> listChargebacksOrg(int orgId) {
        return this.rawClient.listChargebacksOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of chargebacks and returned transactions for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryChargebacksResponse> listChargebacksOrg(
            int orgId, ListChargebacksOrgRequest request) {
        return this.rawClient.listChargebacksOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of chargebacks and returned transactions for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryChargebacksResponse> listChargebacksOrg(
            int orgId, ListChargebacksOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient.listChargebacksOrg(orgId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of customers for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryCustomerResponse> listCustomers(String entry) {
        return this.rawClient.listCustomers(entry).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of customers for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryCustomerResponse> listCustomers(String entry, ListCustomersRequest request) {
        return this.rawClient.listCustomers(entry, request).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of customers for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryCustomerResponse> listCustomers(
            String entry, ListCustomersRequest request, RequestOptions requestOptions) {
        return this.rawClient.listCustomers(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of customers for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryCustomerResponse> listCustomersOrg(int orgId) {
        return this.rawClient.listCustomersOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of customers for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryCustomerResponse> listCustomersOrg(int orgId, ListCustomersOrgRequest request) {
        return this.rawClient.listCustomersOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of customers for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryCustomerResponse> listCustomersOrg(
            int orgId, ListCustomersOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient.listCustomersOrg(orgId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a list of all reports generated in the last 60 days for a single entrypoint. Use filters to limit results.
     */
    public CompletableFuture<QueryResponseNotificationReports> listNotificationReports(String entry) {
        return this.rawClient.listNotificationReports(entry).thenApply(response -> response.body());
    }

    /**
     * Returns a list of all reports generated in the last 60 days for a single entrypoint. Use filters to limit results.
     */
    public CompletableFuture<QueryResponseNotificationReports> listNotificationReports(
            String entry, ListNotificationReportsRequest request) {
        return this.rawClient.listNotificationReports(entry, request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of all reports generated in the last 60 days for a single entrypoint. Use filters to limit results.
     */
    public CompletableFuture<QueryResponseNotificationReports> listNotificationReports(
            String entry, ListNotificationReportsRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .listNotificationReports(entry, request, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Returns a list of all reports generated in the last 60 days for an organization. Use filters to limit results.
     */
    public CompletableFuture<QueryResponseNotificationReports> listNotificationReportsOrg(int orgId) {
        return this.rawClient.listNotificationReportsOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Returns a list of all reports generated in the last 60 days for an organization. Use filters to limit results.
     */
    public CompletableFuture<QueryResponseNotificationReports> listNotificationReportsOrg(
            int orgId, ListNotificationReportsOrgRequest request) {
        return this.rawClient.listNotificationReportsOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of all reports generated in the last 60 days for an organization. Use filters to limit results.
     */
    public CompletableFuture<QueryResponseNotificationReports> listNotificationReportsOrg(
            int orgId, ListNotificationReportsOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .listNotificationReportsOrg(orgId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Returns a list of notifications for an entrypoint. Use filters to limit results.
     */
    public CompletableFuture<QueryResponseNotifications> listNotifications(String entry) {
        return this.rawClient.listNotifications(entry).thenApply(response -> response.body());
    }

    /**
     * Returns a list of notifications for an entrypoint. Use filters to limit results.
     */
    public CompletableFuture<QueryResponseNotifications> listNotifications(
            String entry, ListNotificationsRequest request) {
        return this.rawClient.listNotifications(entry, request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of notifications for an entrypoint. Use filters to limit results.
     */
    public CompletableFuture<QueryResponseNotifications> listNotifications(
            String entry, ListNotificationsRequest request, RequestOptions requestOptions) {
        return this.rawClient.listNotifications(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Return a list of notifications for an organization. Use filters to limit results.
     */
    public CompletableFuture<QueryResponseNotifications> listNotificationsOrg(int orgId) {
        return this.rawClient.listNotificationsOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Return a list of notifications for an organization. Use filters to limit results.
     */
    public CompletableFuture<QueryResponseNotifications> listNotificationsOrg(
            int orgId, ListNotificationsOrgRequest request) {
        return this.rawClient.listNotificationsOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Return a list of notifications for an organization. Use filters to limit results.
     */
    public CompletableFuture<QueryResponseNotifications> listNotificationsOrg(
            int orgId, ListNotificationsOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .listNotificationsOrg(orgId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of an organization's suborganizations and their full details such as orgId, users, and settings. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<ListOrganizationsResponse> listOrganizations(int orgId) {
        return this.rawClient.listOrganizations(orgId).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of an organization's suborganizations and their full details such as orgId, users, and settings. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<ListOrganizationsResponse> listOrganizations(int orgId, ListOrganizationsRequest request) {
        return this.rawClient.listOrganizations(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of an organization's suborganizations and their full details such as orgId, users, and settings. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<ListOrganizationsResponse> listOrganizations(
            int orgId, ListOrganizationsRequest request, RequestOptions requestOptions) {
        return this.rawClient.listOrganizations(orgId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of money out transactions (payouts) for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryPayoutTransaction> listPayout(String entry) {
        return this.rawClient.listPayout(entry).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of money out transactions (payouts) for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryPayoutTransaction> listPayout(String entry, ListPayoutRequest request) {
        return this.rawClient.listPayout(entry, request).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of money out transactions (payouts) for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryPayoutTransaction> listPayout(
            String entry, ListPayoutRequest request, RequestOptions requestOptions) {
        return this.rawClient.listPayout(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of money out transactions (payouts) for an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryPayoutTransaction> listPayoutOrg(int orgId) {
        return this.rawClient.listPayoutOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of money out transactions (payouts) for an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryPayoutTransaction> listPayoutOrg(int orgId, ListPayoutOrgRequest request) {
        return this.rawClient.listPayoutOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Retrieves a list of money out transactions (payouts) for an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryPayoutTransaction> listPayoutOrg(
            int orgId, ListPayoutOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient.listPayoutOrg(orgId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a list of paypoints in an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryEntrypointResponse> listPaypoints(int orgId) {
        return this.rawClient.listPaypoints(orgId).thenApply(response -> response.body());
    }

    /**
     * Returns a list of paypoints in an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryEntrypointResponse> listPaypoints(int orgId, ListPaypointsRequest request) {
        return this.rawClient.listPaypoints(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of paypoints in an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryEntrypointResponse> listPaypoints(
            int orgId, ListPaypointsRequest request, RequestOptions requestOptions) {
        return this.rawClient.listPaypoints(orgId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of settled transactions for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseSettlements> listSettlements(String entry) {
        return this.rawClient.listSettlements(entry).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of settled transactions for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseSettlements> listSettlements(String entry, ListSettlementsRequest request) {
        return this.rawClient.listSettlements(entry, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of settled transactions for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseSettlements> listSettlements(
            String entry, ListSettlementsRequest request, RequestOptions requestOptions) {
        return this.rawClient.listSettlements(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of settled transactions for an organization. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseSettlements> listSettlementsOrg(int orgId) {
        return this.rawClient.listSettlementsOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of settled transactions for an organization. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseSettlements> listSettlementsOrg(
            int orgId, ListSettlementsOrgRequest request) {
        return this.rawClient.listSettlementsOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of settled transactions for an organization. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseSettlements> listSettlementsOrg(
            int orgId, ListSettlementsOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient.listSettlementsOrg(orgId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a list of subscriptions for a single paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QuerySubscriptionResponse> listSubscriptions(String entry) {
        return this.rawClient.listSubscriptions(entry).thenApply(response -> response.body());
    }

    /**
     * Returns a list of subscriptions for a single paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QuerySubscriptionResponse> listSubscriptions(
            String entry, ListSubscriptionsRequest request) {
        return this.rawClient.listSubscriptions(entry, request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of subscriptions for a single paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QuerySubscriptionResponse> listSubscriptions(
            String entry, ListSubscriptionsRequest request, RequestOptions requestOptions) {
        return this.rawClient.listSubscriptions(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Returns a list of subscriptions for a single org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QuerySubscriptionResponse> listSubscriptionsOrg(int orgId) {
        return this.rawClient.listSubscriptionsOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Returns a list of subscriptions for a single org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QuerySubscriptionResponse> listSubscriptionsOrg(
            int orgId, ListSubscriptionsOrgRequest request) {
        return this.rawClient.listSubscriptionsOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Returns a list of subscriptions for a single org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QuerySubscriptionResponse> listSubscriptionsOrg(
            int orgId, ListSubscriptionsOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .listSubscriptionsOrg(orgId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of transactions for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     * By default, this endpoint returns only transactions from the last 60 days. To query transactions outside of this period, include <code>transactionDate</code> filters.
     * For example, this request parameters filter for transactions between April 01, 2024 and April 09, 2024.
     * <pre><code class="language-curl">  --url https://sandbox.payabli.com/api/Query/transactions/org/1?limitRecord=20&amp;fromRecord=0&amp;transactionDate(ge)=2024-04-01T00:00:00&amp;transactionDate(le)=2024-04-09T23:59:59\
     *   --header 'requestToken: &lt;api-key&gt;'
     *
     * </code></pre>
     */
    public CompletableFuture<QueryResponseTransactions> listTransactions(String entry) {
        return this.rawClient.listTransactions(entry).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of transactions for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     * By default, this endpoint returns only transactions from the last 60 days. To query transactions outside of this period, include <code>transactionDate</code> filters.
     * For example, this request parameters filter for transactions between April 01, 2024 and April 09, 2024.
     * <pre><code class="language-curl">  --url https://sandbox.payabli.com/api/Query/transactions/org/1?limitRecord=20&amp;fromRecord=0&amp;transactionDate(ge)=2024-04-01T00:00:00&amp;transactionDate(le)=2024-04-09T23:59:59\
     *   --header 'requestToken: &lt;api-key&gt;'
     *
     * </code></pre>
     */
    public CompletableFuture<QueryResponseTransactions> listTransactions(
            String entry, ListTransactionsRequest request) {
        return this.rawClient.listTransactions(entry, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of transactions for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     * By default, this endpoint returns only transactions from the last 60 days. To query transactions outside of this period, include <code>transactionDate</code> filters.
     * For example, this request parameters filter for transactions between April 01, 2024 and April 09, 2024.
     * <pre><code class="language-curl">  --url https://sandbox.payabli.com/api/Query/transactions/org/1?limitRecord=20&amp;fromRecord=0&amp;transactionDate(ge)=2024-04-01T00:00:00&amp;transactionDate(le)=2024-04-09T23:59:59\
     *   --header 'requestToken: &lt;api-key&gt;'
     *
     * </code></pre>
     */
    public CompletableFuture<QueryResponseTransactions> listTransactions(
            String entry, ListTransactionsRequest request, RequestOptions requestOptions) {
        return this.rawClient.listTransactions(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of transactions for an organization. Use filters to
     * limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     * <p>By default, this endpoint returns only transactions from the last 60 days. To query transactions outside of this period, include <code>transactionDate</code> filters.</p>
     * <p>For example, this request parameters filter for transactions between April 01, 2024 and April 09, 2024.</p>
     * <pre><code>curl --request GET \
     *   --url https://sandbox.payabli.com/api/Query/transactions/org/1?limitRecord=20&amp;fromRecord=0&amp;transactionDate(ge)=2024-04-01T00:00:00&amp;transactionDate(le)=2024-04-09T23:59:59\
     *   --header 'requestToken: &lt;api-key&gt;'
     *
     * </code></pre>
     */
    public CompletableFuture<QueryResponseTransactions> listTransactionsOrg(int orgId) {
        return this.rawClient.listTransactionsOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of transactions for an organization. Use filters to
     * limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     * <p>By default, this endpoint returns only transactions from the last 60 days. To query transactions outside of this period, include <code>transactionDate</code> filters.</p>
     * <p>For example, this request parameters filter for transactions between April 01, 2024 and April 09, 2024.</p>
     * <pre><code>curl --request GET \
     *   --url https://sandbox.payabli.com/api/Query/transactions/org/1?limitRecord=20&amp;fromRecord=0&amp;transactionDate(ge)=2024-04-01T00:00:00&amp;transactionDate(le)=2024-04-09T23:59:59\
     *   --header 'requestToken: &lt;api-key&gt;'
     *
     * </code></pre>
     */
    public CompletableFuture<QueryResponseTransactions> listTransactionsOrg(
            int orgId, ListTransactionsOrgRequest request) {
        return this.rawClient.listTransactionsOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of transactions for an organization. Use filters to
     * limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     * <p>By default, this endpoint returns only transactions from the last 60 days. To query transactions outside of this period, include <code>transactionDate</code> filters.</p>
     * <p>For example, this request parameters filter for transactions between April 01, 2024 and April 09, 2024.</p>
     * <pre><code>curl --request GET \
     *   --url https://sandbox.payabli.com/api/Query/transactions/org/1?limitRecord=20&amp;fromRecord=0&amp;transactionDate(ge)=2024-04-01T00:00:00&amp;transactionDate(le)=2024-04-09T23:59:59\
     *   --header 'requestToken: &lt;api-key&gt;'
     *
     * </code></pre>
     */
    public CompletableFuture<QueryResponseTransactions> listTransactionsOrg(
            int orgId, ListTransactionsOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .listTransactionsOrg(orgId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of transfer details records for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryTransferDetailResponse> listTransferDetails(
            String entry, int transferId, ListTransfersPaypointRequest request) {
        return this.rawClient.listTransferDetails(entry, transferId, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of transfer details records for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryTransferDetailResponse> listTransferDetails(
            String entry, int transferId, ListTransfersPaypointRequest request, RequestOptions requestOptions) {
        return this.rawClient
                .listTransferDetails(entry, transferId, request, requestOptions)
                .thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of transfers for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<TransferQueryResponse> listTransfers(String entry) {
        return this.rawClient.listTransfers(entry).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of transfers for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<TransferQueryResponse> listTransfers(String entry, ListTransfersRequest request) {
        return this.rawClient.listTransfers(entry, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of transfers for a paypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<TransferQueryResponse> listTransfers(
            String entry, ListTransfersRequest request, RequestOptions requestOptions) {
        return this.rawClient.listTransfers(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of transfers for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<TransferQueryResponse> listTransfersOrg(Optional<Long> orgId) {
        return this.rawClient.listTransfersOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of transfers for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<TransferQueryResponse> listTransfersOrg(
            Optional<Long> orgId, ListTransfersRequestOrg request) {
        return this.rawClient.listTransfersOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of transfers for an org. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<TransferQueryResponse> listTransfersOrg(
            Optional<Long> orgId, ListTransfersRequestOrg request, RequestOptions requestOptions) {
        return this.rawClient.listTransfersOrg(orgId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get list of users for an org. Use filters to limit results.
     */
    public CompletableFuture<QueryUserResponse> listUsersOrg(int orgId) {
        return this.rawClient.listUsersOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Get list of users for an org. Use filters to limit results.
     */
    public CompletableFuture<QueryUserResponse> listUsersOrg(int orgId, ListUsersOrgRequest request) {
        return this.rawClient.listUsersOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Get list of users for an org. Use filters to limit results.
     */
    public CompletableFuture<QueryUserResponse> listUsersOrg(
            int orgId, ListUsersOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient.listUsersOrg(orgId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Get list of users for a paypoint. Use filters to limit results.
     */
    public CompletableFuture<QueryUserResponse> listUsersPaypoint(String entry) {
        return this.rawClient.listUsersPaypoint(entry).thenApply(response -> response.body());
    }

    /**
     * Get list of users for a paypoint. Use filters to limit results.
     */
    public CompletableFuture<QueryUserResponse> listUsersPaypoint(String entry, ListUsersPaypointRequest request) {
        return this.rawClient.listUsersPaypoint(entry, request).thenApply(response -> response.body());
    }

    /**
     * Get list of users for a paypoint. Use filters to limit results.
     */
    public CompletableFuture<QueryUserResponse> listUsersPaypoint(
            String entry, ListUsersPaypointRequest request, RequestOptions requestOptions) {
        return this.rawClient.listUsersPaypoint(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of vendors for an entrypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseVendors> listVendors(String entry) {
        return this.rawClient.listVendors(entry).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of vendors for an entrypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseVendors> listVendors(String entry, ListVendorsRequest request) {
        return this.rawClient.listVendors(entry, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of vendors for an entrypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseVendors> listVendors(
            String entry, ListVendorsRequest request, RequestOptions requestOptions) {
        return this.rawClient.listVendors(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of vendors for an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseVendors> listVendorsOrg(int orgId) {
        return this.rawClient.listVendorsOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of vendors for an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseVendors> listVendorsOrg(int orgId, ListVendorsOrgRequest request) {
        return this.rawClient.listVendorsOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of vendors for an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<QueryResponseVendors> listVendorsOrg(
            int orgId, ListVendorsOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient.listVendorsOrg(orgId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of vcards (virtual credit cards) issued for an entrypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<VCardQueryResponse> listVcards(String entry) {
        return this.rawClient.listVcards(entry).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of vcards (virtual credit cards) issued for an entrypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<VCardQueryResponse> listVcards(String entry, ListVcardsRequest request) {
        return this.rawClient.listVcards(entry, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of vcards (virtual credit cards) issued for an entrypoint. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<VCardQueryResponse> listVcards(
            String entry, ListVcardsRequest request, RequestOptions requestOptions) {
        return this.rawClient.listVcards(entry, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of vcards (virtual credit cards) issued for an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<VCardQueryResponse> listVcardsOrg(int orgId) {
        return this.rawClient.listVcardsOrg(orgId).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of vcards (virtual credit cards) issued for an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<VCardQueryResponse> listVcardsOrg(int orgId, ListVcardsOrgRequest request) {
        return this.rawClient.listVcardsOrg(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Retrieve a list of vcards (virtual credit cards) issued for an organization. Use filters to limit results. Include the <code>exportFormat</code> query parameter to return the results as a file instead of a JSON response.
     */
    public CompletableFuture<VCardQueryResponse> listVcardsOrg(
            int orgId, ListVcardsOrgRequest request, RequestOptions requestOptions) {
        return this.rawClient.listVcardsOrg(orgId, request, requestOptions).thenApply(response -> response.body());
    }
}
