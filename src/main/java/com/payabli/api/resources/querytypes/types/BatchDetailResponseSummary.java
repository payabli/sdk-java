/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.resources.querytypes.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BatchDetailResponseSummary.Builder.class)
public final class BatchDetailResponseSummary {
    private final double serviceFees;

    private final double transferAmount;

    private final double refunds;

    private final double heldAmount;

    private final int totalRecords;

    private final double totalAmount;

    private final double totalNetAmount;

    private final int totalPages;

    private final int pageSize;

    private final Optional<String> pageidentifier;

    private final Map<String, Object> additionalProperties;

    private BatchDetailResponseSummary(
            double serviceFees,
            double transferAmount,
            double refunds,
            double heldAmount,
            int totalRecords,
            double totalAmount,
            double totalNetAmount,
            int totalPages,
            int pageSize,
            Optional<String> pageidentifier,
            Map<String, Object> additionalProperties) {
        this.serviceFees = serviceFees;
        this.transferAmount = transferAmount;
        this.refunds = refunds;
        this.heldAmount = heldAmount;
        this.totalRecords = totalRecords;
        this.totalAmount = totalAmount;
        this.totalNetAmount = totalNetAmount;
        this.totalPages = totalPages;
        this.pageSize = pageSize;
        this.pageidentifier = pageidentifier;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("serviceFees")
    public double getServiceFees() {
        return serviceFees;
    }

    @JsonProperty("transferAmount")
    public double getTransferAmount() {
        return transferAmount;
    }

    @JsonProperty("refunds")
    public double getRefunds() {
        return refunds;
    }

    @JsonProperty("heldAmount")
    public double getHeldAmount() {
        return heldAmount;
    }

    @JsonProperty("totalRecords")
    public int getTotalRecords() {
        return totalRecords;
    }

    @JsonProperty("totalAmount")
    public double getTotalAmount() {
        return totalAmount;
    }

    @JsonProperty("totalNetAmount")
    public double getTotalNetAmount() {
        return totalNetAmount;
    }

    @JsonProperty("totalPages")
    public int getTotalPages() {
        return totalPages;
    }

    @JsonProperty("pageSize")
    public int getPageSize() {
        return pageSize;
    }

    @JsonProperty("pageidentifier")
    public Optional<String> getPageidentifier() {
        return pageidentifier;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BatchDetailResponseSummary && equalTo((BatchDetailResponseSummary) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BatchDetailResponseSummary other) {
        return serviceFees == other.serviceFees
                && transferAmount == other.transferAmount
                && refunds == other.refunds
                && heldAmount == other.heldAmount
                && totalRecords == other.totalRecords
                && totalAmount == other.totalAmount
                && totalNetAmount == other.totalNetAmount
                && totalPages == other.totalPages
                && pageSize == other.pageSize
                && pageidentifier.equals(other.pageidentifier);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.serviceFees,
                this.transferAmount,
                this.refunds,
                this.heldAmount,
                this.totalRecords,
                this.totalAmount,
                this.totalNetAmount,
                this.totalPages,
                this.pageSize,
                this.pageidentifier);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ServiceFeesStage builder() {
        return new Builder();
    }

    public interface ServiceFeesStage {
        TransferAmountStage serviceFees(double serviceFees);

        Builder from(BatchDetailResponseSummary other);
    }

    public interface TransferAmountStage {
        RefundsStage transferAmount(double transferAmount);
    }

    public interface RefundsStage {
        HeldAmountStage refunds(double refunds);
    }

    public interface HeldAmountStage {
        TotalRecordsStage heldAmount(double heldAmount);
    }

    public interface TotalRecordsStage {
        TotalAmountStage totalRecords(int totalRecords);
    }

    public interface TotalAmountStage {
        TotalNetAmountStage totalAmount(double totalAmount);
    }

    public interface TotalNetAmountStage {
        TotalPagesStage totalNetAmount(double totalNetAmount);
    }

    public interface TotalPagesStage {
        PageSizeStage totalPages(int totalPages);
    }

    public interface PageSizeStage {
        _FinalStage pageSize(int pageSize);
    }

    public interface _FinalStage {
        BatchDetailResponseSummary build();

        _FinalStage pageidentifier(Optional<String> pageidentifier);

        _FinalStage pageidentifier(String pageidentifier);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements ServiceFeesStage,
                    TransferAmountStage,
                    RefundsStage,
                    HeldAmountStage,
                    TotalRecordsStage,
                    TotalAmountStage,
                    TotalNetAmountStage,
                    TotalPagesStage,
                    PageSizeStage,
                    _FinalStage {
        private double serviceFees;

        private double transferAmount;

        private double refunds;

        private double heldAmount;

        private int totalRecords;

        private double totalAmount;

        private double totalNetAmount;

        private int totalPages;

        private int pageSize;

        private Optional<String> pageidentifier = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(BatchDetailResponseSummary other) {
            serviceFees(other.getServiceFees());
            transferAmount(other.getTransferAmount());
            refunds(other.getRefunds());
            heldAmount(other.getHeldAmount());
            totalRecords(other.getTotalRecords());
            totalAmount(other.getTotalAmount());
            totalNetAmount(other.getTotalNetAmount());
            totalPages(other.getTotalPages());
            pageSize(other.getPageSize());
            pageidentifier(other.getPageidentifier());
            return this;
        }

        @java.lang.Override
        @JsonSetter("serviceFees")
        public TransferAmountStage serviceFees(double serviceFees) {
            this.serviceFees = serviceFees;
            return this;
        }

        @java.lang.Override
        @JsonSetter("transferAmount")
        public RefundsStage transferAmount(double transferAmount) {
            this.transferAmount = transferAmount;
            return this;
        }

        @java.lang.Override
        @JsonSetter("refunds")
        public HeldAmountStage refunds(double refunds) {
            this.refunds = refunds;
            return this;
        }

        @java.lang.Override
        @JsonSetter("heldAmount")
        public TotalRecordsStage heldAmount(double heldAmount) {
            this.heldAmount = heldAmount;
            return this;
        }

        @java.lang.Override
        @JsonSetter("totalRecords")
        public TotalAmountStage totalRecords(int totalRecords) {
            this.totalRecords = totalRecords;
            return this;
        }

        @java.lang.Override
        @JsonSetter("totalAmount")
        public TotalNetAmountStage totalAmount(double totalAmount) {
            this.totalAmount = totalAmount;
            return this;
        }

        @java.lang.Override
        @JsonSetter("totalNetAmount")
        public TotalPagesStage totalNetAmount(double totalNetAmount) {
            this.totalNetAmount = totalNetAmount;
            return this;
        }

        @java.lang.Override
        @JsonSetter("totalPages")
        public PageSizeStage totalPages(int totalPages) {
            this.totalPages = totalPages;
            return this;
        }

        @java.lang.Override
        @JsonSetter("pageSize")
        public _FinalStage pageSize(int pageSize) {
            this.pageSize = pageSize;
            return this;
        }

        @java.lang.Override
        public _FinalStage pageidentifier(String pageidentifier) {
            this.pageidentifier = Optional.ofNullable(pageidentifier);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "pageidentifier", nulls = Nulls.SKIP)
        public _FinalStage pageidentifier(Optional<String> pageidentifier) {
            this.pageidentifier = pageidentifier;
            return this;
        }

        @java.lang.Override
        public BatchDetailResponseSummary build() {
            return new BatchDetailResponseSummary(
                    serviceFees,
                    transferAmount,
                    refunds,
                    heldAmount,
                    totalRecords,
                    totalAmount,
                    totalNetAmount,
                    totalPages,
                    pageSize,
                    pageidentifier,
                    additionalProperties);
        }
    }
}
