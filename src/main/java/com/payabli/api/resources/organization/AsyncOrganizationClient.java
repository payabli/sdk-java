/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.resources.organization;

import com.payabli.api.core.ClientOptions;
import com.payabli.api.core.RequestOptions;
import com.payabli.api.resources.organization.requests.AddOrganizationRequest;
import com.payabli.api.resources.organization.requests.OrganizationData;
import com.payabli.api.resources.organization.types.AddOrganizationResponse;
import com.payabli.api.resources.organization.types.DeleteOrganizationResponse;
import com.payabli.api.resources.organization.types.EditOrganizationResponse;
import com.payabli.api.types.OrganizationQueryRecord;
import com.payabli.api.types.SettingsQueryRecord;
import java.util.concurrent.CompletableFuture;

public class AsyncOrganizationClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawOrganizationClient rawClient;

    public AsyncOrganizationClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawOrganizationClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawOrganizationClient withRawResponse() {
        return this.rawClient;
    }

    /**
     * Creates an organization under a parent organization. This is also referred to as a suborganization.
     */
    public CompletableFuture<AddOrganizationResponse> addOrganization(AddOrganizationRequest request) {
        return this.rawClient.addOrganization(request).thenApply(response -> response.body());
    }

    /**
     * Creates an organization under a parent organization. This is also referred to as a suborganization.
     */
    public CompletableFuture<AddOrganizationResponse> addOrganization(
            AddOrganizationRequest request, RequestOptions requestOptions) {
        return this.rawClient.addOrganization(request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Delete an organization by ID.
     */
    public CompletableFuture<DeleteOrganizationResponse> deleteOrganization(int orgId) {
        return this.rawClient.deleteOrganization(orgId).thenApply(response -> response.body());
    }

    /**
     * Delete an organization by ID.
     */
    public CompletableFuture<DeleteOrganizationResponse> deleteOrganization(int orgId, RequestOptions requestOptions) {
        return this.rawClient.deleteOrganization(orgId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Updates an organization's details by ID.
     */
    public CompletableFuture<EditOrganizationResponse> editOrganization(int orgId) {
        return this.rawClient.editOrganization(orgId).thenApply(response -> response.body());
    }

    /**
     * Updates an organization's details by ID.
     */
    public CompletableFuture<EditOrganizationResponse> editOrganization(int orgId, OrganizationData request) {
        return this.rawClient.editOrganization(orgId, request).thenApply(response -> response.body());
    }

    /**
     * Updates an organization's details by ID.
     */
    public CompletableFuture<EditOrganizationResponse> editOrganization(
            int orgId, OrganizationData request, RequestOptions requestOptions) {
        return this.rawClient.editOrganization(orgId, request, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Gets an organization's basic information by entry name (entrypoint identifier).
     */
    public CompletableFuture<OrganizationQueryRecord> getBasicOrganization(String entry) {
        return this.rawClient.getBasicOrganization(entry).thenApply(response -> response.body());
    }

    /**
     * Gets an organization's basic information by entry name (entrypoint identifier).
     */
    public CompletableFuture<OrganizationQueryRecord> getBasicOrganization(
            String entry, RequestOptions requestOptions) {
        return this.rawClient.getBasicOrganization(entry, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Gets an organizations basic details by org ID.
     */
    public CompletableFuture<OrganizationQueryRecord> getBasicOrganizationById(int orgId) {
        return this.rawClient.getBasicOrganizationById(orgId).thenApply(response -> response.body());
    }

    /**
     * Gets an organizations basic details by org ID.
     */
    public CompletableFuture<OrganizationQueryRecord> getBasicOrganizationById(
            int orgId, RequestOptions requestOptions) {
        return this.rawClient.getBasicOrganizationById(orgId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves details for an organization by ID.
     */
    public CompletableFuture<OrganizationQueryRecord> getOrganization(int orgId) {
        return this.rawClient.getOrganization(orgId).thenApply(response -> response.body());
    }

    /**
     * Retrieves details for an organization by ID.
     */
    public CompletableFuture<OrganizationQueryRecord> getOrganization(int orgId, RequestOptions requestOptions) {
        return this.rawClient.getOrganization(orgId, requestOptions).thenApply(response -> response.body());
    }

    /**
     * Retrieves an organization's settings.
     */
    public CompletableFuture<SettingsQueryRecord> getSettingsOrganization(int orgId) {
        return this.rawClient.getSettingsOrganization(orgId).thenApply(response -> response.body());
    }

    /**
     * Retrieves an organization's settings.
     */
    public CompletableFuture<SettingsQueryRecord> getSettingsOrganization(int orgId, RequestOptions requestOptions) {
        return this.rawClient.getSettingsOrganization(orgId, requestOptions).thenApply(response -> response.body());
    }
}
