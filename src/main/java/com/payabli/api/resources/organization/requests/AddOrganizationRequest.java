/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.resources.organization.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import com.payabli.api.types.Contacts;
import com.payabli.api.types.FileContent;
import com.payabli.api.types.Instrument;
import com.payabli.api.types.ServiceCost;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AddOrganizationRequest.Builder.class)
public final class AddOrganizationRequest {
    private final Optional<String> idempotencyKey;

    private final Optional<List<ServiceCost>> services;

    private final Optional<Instrument> billingInfo;

    private final Optional<List<Contacts>> contacts;

    private final Optional<Boolean> hasBilling;

    private final Optional<Boolean> hasResidual;

    private final Optional<String> orgAddress;

    private final Optional<String> orgCity;

    private final Optional<String> orgCountry;

    private final Optional<String> orgEntryName;

    private final Optional<String> orgId;

    private final Optional<FileContent> orgLogo;

    private final String orgName;

    private final Optional<Long> orgParentId;

    private final Optional<String> orgState;

    private final Optional<Integer> orgTimezone;

    private final int orgType;

    private final Optional<String> orgWebsite;

    private final Optional<String> orgZip;

    private final String replyToEmail;

    private final Map<String, Object> additionalProperties;

    private AddOrganizationRequest(
            Optional<String> idempotencyKey,
            Optional<List<ServiceCost>> services,
            Optional<Instrument> billingInfo,
            Optional<List<Contacts>> contacts,
            Optional<Boolean> hasBilling,
            Optional<Boolean> hasResidual,
            Optional<String> orgAddress,
            Optional<String> orgCity,
            Optional<String> orgCountry,
            Optional<String> orgEntryName,
            Optional<String> orgId,
            Optional<FileContent> orgLogo,
            String orgName,
            Optional<Long> orgParentId,
            Optional<String> orgState,
            Optional<Integer> orgTimezone,
            int orgType,
            Optional<String> orgWebsite,
            Optional<String> orgZip,
            String replyToEmail,
            Map<String, Object> additionalProperties) {
        this.idempotencyKey = idempotencyKey;
        this.services = services;
        this.billingInfo = billingInfo;
        this.contacts = contacts;
        this.hasBilling = hasBilling;
        this.hasResidual = hasResidual;
        this.orgAddress = orgAddress;
        this.orgCity = orgCity;
        this.orgCountry = orgCountry;
        this.orgEntryName = orgEntryName;
        this.orgId = orgId;
        this.orgLogo = orgLogo;
        this.orgName = orgName;
        this.orgParentId = orgParentId;
        this.orgState = orgState;
        this.orgTimezone = orgTimezone;
        this.orgType = orgType;
        this.orgWebsite = orgWebsite;
        this.orgZip = orgZip;
        this.replyToEmail = replyToEmail;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A unique ID you can include to prevent duplicating objects or transactions if a request is sent more than once. This key isn't generated in Payabli, you must generate it yourself.
     */
    @JsonProperty("idempotencyKey")
    public Optional<String> getIdempotencyKey() {
        return idempotencyKey;
    }

    @JsonProperty("services")
    public Optional<List<ServiceCost>> getServices() {
        return services;
    }

    @JsonProperty("billingInfo")
    public Optional<Instrument> getBillingInfo() {
        return billingInfo;
    }

    @JsonProperty("contacts")
    public Optional<List<Contacts>> getContacts() {
        return contacts;
    }

    @JsonProperty("hasBilling")
    public Optional<Boolean> getHasBilling() {
        return hasBilling;
    }

    @JsonProperty("hasResidual")
    public Optional<Boolean> getHasResidual() {
        return hasResidual;
    }

    @JsonProperty("orgAddress")
    public Optional<String> getOrgAddress() {
        return orgAddress;
    }

    @JsonProperty("orgCity")
    public Optional<String> getOrgCity() {
        return orgCity;
    }

    @JsonProperty("orgCountry")
    public Optional<String> getOrgCountry() {
        return orgCountry;
    }

    @JsonProperty("orgEntryName")
    public Optional<String> getOrgEntryName() {
        return orgEntryName;
    }

    @JsonProperty("orgId")
    public Optional<String> getOrgId() {
        return orgId;
    }

    @JsonProperty("orgLogo")
    public Optional<FileContent> getOrgLogo() {
        return orgLogo;
    }

    @JsonProperty("orgName")
    public String getOrgName() {
        return orgName;
    }

    @JsonProperty("orgParentId")
    public Optional<Long> getOrgParentId() {
        return orgParentId;
    }

    @JsonProperty("orgState")
    public Optional<String> getOrgState() {
        return orgState;
    }

    @JsonProperty("orgTimezone")
    public Optional<Integer> getOrgTimezone() {
        return orgTimezone;
    }

    @JsonProperty("orgType")
    public int getOrgType() {
        return orgType;
    }

    @JsonProperty("orgWebsite")
    public Optional<String> getOrgWebsite() {
        return orgWebsite;
    }

    @JsonProperty("orgZip")
    public Optional<String> getOrgZip() {
        return orgZip;
    }

    @JsonProperty("replyToEmail")
    public String getReplyToEmail() {
        return replyToEmail;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AddOrganizationRequest && equalTo((AddOrganizationRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AddOrganizationRequest other) {
        return idempotencyKey.equals(other.idempotencyKey)
                && services.equals(other.services)
                && billingInfo.equals(other.billingInfo)
                && contacts.equals(other.contacts)
                && hasBilling.equals(other.hasBilling)
                && hasResidual.equals(other.hasResidual)
                && orgAddress.equals(other.orgAddress)
                && orgCity.equals(other.orgCity)
                && orgCountry.equals(other.orgCountry)
                && orgEntryName.equals(other.orgEntryName)
                && orgId.equals(other.orgId)
                && orgLogo.equals(other.orgLogo)
                && orgName.equals(other.orgName)
                && orgParentId.equals(other.orgParentId)
                && orgState.equals(other.orgState)
                && orgTimezone.equals(other.orgTimezone)
                && orgType == other.orgType
                && orgWebsite.equals(other.orgWebsite)
                && orgZip.equals(other.orgZip)
                && replyToEmail.equals(other.replyToEmail);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.idempotencyKey,
                this.services,
                this.billingInfo,
                this.contacts,
                this.hasBilling,
                this.hasResidual,
                this.orgAddress,
                this.orgCity,
                this.orgCountry,
                this.orgEntryName,
                this.orgId,
                this.orgLogo,
                this.orgName,
                this.orgParentId,
                this.orgState,
                this.orgTimezone,
                this.orgType,
                this.orgWebsite,
                this.orgZip,
                this.replyToEmail);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static OrgNameStage builder() {
        return new Builder();
    }

    public interface OrgNameStage {
        OrgTypeStage orgName(@NotNull String orgName);

        Builder from(AddOrganizationRequest other);
    }

    public interface OrgTypeStage {
        ReplyToEmailStage orgType(int orgType);
    }

    public interface ReplyToEmailStage {
        _FinalStage replyToEmail(@NotNull String replyToEmail);
    }

    public interface _FinalStage {
        AddOrganizationRequest build();

        /**
         * <p>A unique ID you can include to prevent duplicating objects or transactions if a request is sent more than once. This key isn't generated in Payabli, you must generate it yourself.</p>
         */
        _FinalStage idempotencyKey(Optional<String> idempotencyKey);

        _FinalStage idempotencyKey(String idempotencyKey);

        _FinalStage services(Optional<List<ServiceCost>> services);

        _FinalStage services(List<ServiceCost> services);

        _FinalStage billingInfo(Optional<Instrument> billingInfo);

        _FinalStage billingInfo(Instrument billingInfo);

        _FinalStage contacts(Optional<List<Contacts>> contacts);

        _FinalStage contacts(List<Contacts> contacts);

        _FinalStage hasBilling(Optional<Boolean> hasBilling);

        _FinalStage hasBilling(Boolean hasBilling);

        _FinalStage hasResidual(Optional<Boolean> hasResidual);

        _FinalStage hasResidual(Boolean hasResidual);

        _FinalStage orgAddress(Optional<String> orgAddress);

        _FinalStage orgAddress(String orgAddress);

        _FinalStage orgCity(Optional<String> orgCity);

        _FinalStage orgCity(String orgCity);

        _FinalStage orgCountry(Optional<String> orgCountry);

        _FinalStage orgCountry(String orgCountry);

        _FinalStage orgEntryName(Optional<String> orgEntryName);

        _FinalStage orgEntryName(String orgEntryName);

        _FinalStage orgId(Optional<String> orgId);

        _FinalStage orgId(String orgId);

        _FinalStage orgLogo(Optional<FileContent> orgLogo);

        _FinalStage orgLogo(FileContent orgLogo);

        _FinalStage orgParentId(Optional<Long> orgParentId);

        _FinalStage orgParentId(Long orgParentId);

        _FinalStage orgState(Optional<String> orgState);

        _FinalStage orgState(String orgState);

        _FinalStage orgTimezone(Optional<Integer> orgTimezone);

        _FinalStage orgTimezone(Integer orgTimezone);

        _FinalStage orgWebsite(Optional<String> orgWebsite);

        _FinalStage orgWebsite(String orgWebsite);

        _FinalStage orgZip(Optional<String> orgZip);

        _FinalStage orgZip(String orgZip);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements OrgNameStage, OrgTypeStage, ReplyToEmailStage, _FinalStage {
        private String orgName;

        private int orgType;

        private String replyToEmail;

        private Optional<String> orgZip = Optional.empty();

        private Optional<String> orgWebsite = Optional.empty();

        private Optional<Integer> orgTimezone = Optional.empty();

        private Optional<String> orgState = Optional.empty();

        private Optional<Long> orgParentId = Optional.empty();

        private Optional<FileContent> orgLogo = Optional.empty();

        private Optional<String> orgId = Optional.empty();

        private Optional<String> orgEntryName = Optional.empty();

        private Optional<String> orgCountry = Optional.empty();

        private Optional<String> orgCity = Optional.empty();

        private Optional<String> orgAddress = Optional.empty();

        private Optional<Boolean> hasResidual = Optional.empty();

        private Optional<Boolean> hasBilling = Optional.empty();

        private Optional<List<Contacts>> contacts = Optional.empty();

        private Optional<Instrument> billingInfo = Optional.empty();

        private Optional<List<ServiceCost>> services = Optional.empty();

        private Optional<String> idempotencyKey = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AddOrganizationRequest other) {
            idempotencyKey(other.getIdempotencyKey());
            services(other.getServices());
            billingInfo(other.getBillingInfo());
            contacts(other.getContacts());
            hasBilling(other.getHasBilling());
            hasResidual(other.getHasResidual());
            orgAddress(other.getOrgAddress());
            orgCity(other.getOrgCity());
            orgCountry(other.getOrgCountry());
            orgEntryName(other.getOrgEntryName());
            orgId(other.getOrgId());
            orgLogo(other.getOrgLogo());
            orgName(other.getOrgName());
            orgParentId(other.getOrgParentId());
            orgState(other.getOrgState());
            orgTimezone(other.getOrgTimezone());
            orgType(other.getOrgType());
            orgWebsite(other.getOrgWebsite());
            orgZip(other.getOrgZip());
            replyToEmail(other.getReplyToEmail());
            return this;
        }

        @java.lang.Override
        @JsonSetter("orgName")
        public OrgTypeStage orgName(@NotNull String orgName) {
            this.orgName = Objects.requireNonNull(orgName, "orgName must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("orgType")
        public ReplyToEmailStage orgType(int orgType) {
            this.orgType = orgType;
            return this;
        }

        @java.lang.Override
        @JsonSetter("replyToEmail")
        public _FinalStage replyToEmail(@NotNull String replyToEmail) {
            this.replyToEmail = Objects.requireNonNull(replyToEmail, "replyToEmail must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage orgZip(String orgZip) {
            this.orgZip = Optional.ofNullable(orgZip);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "orgZip", nulls = Nulls.SKIP)
        public _FinalStage orgZip(Optional<String> orgZip) {
            this.orgZip = orgZip;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgWebsite(String orgWebsite) {
            this.orgWebsite = Optional.ofNullable(orgWebsite);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "orgWebsite", nulls = Nulls.SKIP)
        public _FinalStage orgWebsite(Optional<String> orgWebsite) {
            this.orgWebsite = orgWebsite;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgTimezone(Integer orgTimezone) {
            this.orgTimezone = Optional.ofNullable(orgTimezone);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "orgTimezone", nulls = Nulls.SKIP)
        public _FinalStage orgTimezone(Optional<Integer> orgTimezone) {
            this.orgTimezone = orgTimezone;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgState(String orgState) {
            this.orgState = Optional.ofNullable(orgState);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "orgState", nulls = Nulls.SKIP)
        public _FinalStage orgState(Optional<String> orgState) {
            this.orgState = orgState;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgParentId(Long orgParentId) {
            this.orgParentId = Optional.ofNullable(orgParentId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "orgParentId", nulls = Nulls.SKIP)
        public _FinalStage orgParentId(Optional<Long> orgParentId) {
            this.orgParentId = orgParentId;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgLogo(FileContent orgLogo) {
            this.orgLogo = Optional.ofNullable(orgLogo);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "orgLogo", nulls = Nulls.SKIP)
        public _FinalStage orgLogo(Optional<FileContent> orgLogo) {
            this.orgLogo = orgLogo;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgId(String orgId) {
            this.orgId = Optional.ofNullable(orgId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "orgId", nulls = Nulls.SKIP)
        public _FinalStage orgId(Optional<String> orgId) {
            this.orgId = orgId;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgEntryName(String orgEntryName) {
            this.orgEntryName = Optional.ofNullable(orgEntryName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "orgEntryName", nulls = Nulls.SKIP)
        public _FinalStage orgEntryName(Optional<String> orgEntryName) {
            this.orgEntryName = orgEntryName;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgCountry(String orgCountry) {
            this.orgCountry = Optional.ofNullable(orgCountry);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "orgCountry", nulls = Nulls.SKIP)
        public _FinalStage orgCountry(Optional<String> orgCountry) {
            this.orgCountry = orgCountry;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgCity(String orgCity) {
            this.orgCity = Optional.ofNullable(orgCity);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "orgCity", nulls = Nulls.SKIP)
        public _FinalStage orgCity(Optional<String> orgCity) {
            this.orgCity = orgCity;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgAddress(String orgAddress) {
            this.orgAddress = Optional.ofNullable(orgAddress);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "orgAddress", nulls = Nulls.SKIP)
        public _FinalStage orgAddress(Optional<String> orgAddress) {
            this.orgAddress = orgAddress;
            return this;
        }

        @java.lang.Override
        public _FinalStage hasResidual(Boolean hasResidual) {
            this.hasResidual = Optional.ofNullable(hasResidual);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "hasResidual", nulls = Nulls.SKIP)
        public _FinalStage hasResidual(Optional<Boolean> hasResidual) {
            this.hasResidual = hasResidual;
            return this;
        }

        @java.lang.Override
        public _FinalStage hasBilling(Boolean hasBilling) {
            this.hasBilling = Optional.ofNullable(hasBilling);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "hasBilling", nulls = Nulls.SKIP)
        public _FinalStage hasBilling(Optional<Boolean> hasBilling) {
            this.hasBilling = hasBilling;
            return this;
        }

        @java.lang.Override
        public _FinalStage contacts(List<Contacts> contacts) {
            this.contacts = Optional.ofNullable(contacts);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "contacts", nulls = Nulls.SKIP)
        public _FinalStage contacts(Optional<List<Contacts>> contacts) {
            this.contacts = contacts;
            return this;
        }

        @java.lang.Override
        public _FinalStage billingInfo(Instrument billingInfo) {
            this.billingInfo = Optional.ofNullable(billingInfo);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "billingInfo", nulls = Nulls.SKIP)
        public _FinalStage billingInfo(Optional<Instrument> billingInfo) {
            this.billingInfo = billingInfo;
            return this;
        }

        @java.lang.Override
        public _FinalStage services(List<ServiceCost> services) {
            this.services = Optional.ofNullable(services);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "services", nulls = Nulls.SKIP)
        public _FinalStage services(Optional<List<ServiceCost>> services) {
            this.services = services;
            return this;
        }

        /**
         * <p>A unique ID you can include to prevent duplicating objects or transactions if a request is sent more than once. This key isn't generated in Payabli, you must generate it yourself.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage idempotencyKey(String idempotencyKey) {
            this.idempotencyKey = Optional.ofNullable(idempotencyKey);
            return this;
        }

        /**
         * <p>A unique ID you can include to prevent duplicating objects or transactions if a request is sent more than once. This key isn't generated in Payabli, you must generate it yourself.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "idempotencyKey", nulls = Nulls.SKIP)
        public _FinalStage idempotencyKey(Optional<String> idempotencyKey) {
            this.idempotencyKey = idempotencyKey;
            return this;
        }

        @java.lang.Override
        public AddOrganizationRequest build() {
            return new AddOrganizationRequest(
                    idempotencyKey,
                    services,
                    billingInfo,
                    contacts,
                    hasBilling,
                    hasResidual,
                    orgAddress,
                    orgCity,
                    orgCountry,
                    orgEntryName,
                    orgId,
                    orgLogo,
                    orgName,
                    orgParentId,
                    orgState,
                    orgTimezone,
                    orgType,
                    orgWebsite,
                    orgZip,
                    replyToEmail,
                    additionalProperties);
        }
    }
}
