/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.resources.moneyin.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = InvalidTransStatusErrorType.Builder.class)
public final class InvalidTransStatusErrorType {
    private final String responseText;

    private final Map<String, Object> additionalProperties;

    private InvalidTransStatusErrorType(String responseText, Map<String, Object> additionalProperties) {
        this.responseText = responseText;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Error message describing the reason for the decline
     */
    @JsonProperty("responseText")
    public String getResponseText() {
        return responseText;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof InvalidTransStatusErrorType && equalTo((InvalidTransStatusErrorType) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(InvalidTransStatusErrorType other) {
        return responseText.equals(other.responseText);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.responseText);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ResponseTextStage builder() {
        return new Builder();
    }

    public interface ResponseTextStage {
        /**
         * <p>Error message describing the reason for the decline</p>
         */
        _FinalStage responseText(@NotNull String responseText);

        Builder from(InvalidTransStatusErrorType other);
    }

    public interface _FinalStage {
        InvalidTransStatusErrorType build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ResponseTextStage, _FinalStage {
        private String responseText;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(InvalidTransStatusErrorType other) {
            responseText(other.getResponseText());
            return this;
        }

        /**
         * <p>Error message describing the reason for the decline</p>
         * <p>Error message describing the reason for the decline</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("responseText")
        public _FinalStage responseText(@NotNull String responseText) {
            this.responseText = Objects.requireNonNull(responseText, "responseText must not be null");
            return this;
        }

        @java.lang.Override
        public InvalidTransStatusErrorType build() {
            return new InvalidTransStatusErrorType(responseText, additionalProperties);
        }
    }
}
