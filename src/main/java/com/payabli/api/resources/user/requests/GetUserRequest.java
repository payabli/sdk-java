/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.resources.user.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GetUserRequest.Builder.class)
public final class GetUserRequest {
    private final Optional<String> entry;

    private final Optional<Integer> level;

    private final Map<String, Object> additionalProperties;

    private GetUserRequest(Optional<String> entry, Optional<Integer> level, Map<String, Object> additionalProperties) {
        this.entry = entry;
        this.level = level;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The entrypoint identifier.
     */
    @JsonProperty("entry")
    public Optional<String> getEntry() {
        return entry;
    }

    /**
     * @return Entry level: 0 - partner, 2 - paypoint
     */
    @JsonProperty("level")
    public Optional<Integer> getLevel() {
        return level;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GetUserRequest && equalTo((GetUserRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GetUserRequest other) {
        return entry.equals(other.entry) && level.equals(other.level);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.entry, this.level);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> entry = Optional.empty();

        private Optional<Integer> level = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(GetUserRequest other) {
            entry(other.getEntry());
            level(other.getLevel());
            return this;
        }

        /**
         * <p>The entrypoint identifier.</p>
         */
        @JsonSetter(value = "entry", nulls = Nulls.SKIP)
        public Builder entry(Optional<String> entry) {
            this.entry = entry;
            return this;
        }

        public Builder entry(String entry) {
            this.entry = Optional.ofNullable(entry);
            return this;
        }

        /**
         * <p>Entry level: 0 - partner, 2 - paypoint</p>
         */
        @JsonSetter(value = "level", nulls = Nulls.SKIP)
        public Builder level(Optional<Integer> level) {
            this.level = level;
            return this;
        }

        public Builder level(Integer level) {
            this.level = Optional.ofNullable(level);
            return this;
        }

        public GetUserRequest build() {
            return new GetUserRequest(entry, level, additionalProperties);
        }
    }
}
