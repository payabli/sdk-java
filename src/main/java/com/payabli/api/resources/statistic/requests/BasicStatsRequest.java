/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.resources.statistic.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BasicStatsRequest.Builder.class)
public final class BasicStatsRequest {
    private final Optional<String> endDate;

    private final Optional<Map<String, Optional<String>>> parameters;

    private final Optional<String> startDate;

    private final Map<String, Object> additionalProperties;

    private BasicStatsRequest(
            Optional<String> endDate,
            Optional<Map<String, Optional<String>>> parameters,
            Optional<String> startDate,
            Map<String, Object> additionalProperties) {
        this.endDate = endDate;
        this.parameters = parameters;
        this.startDate = startDate;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Used with <code>custom</code> mode. The end date for the range.
     * Valid formats:
     * <ul>
     * <li>YYYY-mm-dd</li>
     * <li>YYYY/mm/dd</li>
     * <li>mm-dd-YYYY</li>
     * <li>mm/dd/YYYY</li>
     * </ul>
     */
    @JsonProperty("endDate")
    public Optional<String> getEndDate() {
        return endDate;
    }

    /**
     * @return List of parameters.
     */
    @JsonProperty("parameters")
    public Optional<Map<String, Optional<String>>> getParameters() {
        return parameters;
    }

    /**
     * @return Used with <code>custom</code> mode. The start date for the range.
     * Valid formats:
     * <ul>
     * <li>YYYY-mm-dd</li>
     * <li>YYYY/mm/dd</li>
     * <li>mm-dd-YYYY</li>
     * <li>mm/dd/YYYY</li>
     * </ul>
     */
    @JsonProperty("startDate")
    public Optional<String> getStartDate() {
        return startDate;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BasicStatsRequest && equalTo((BasicStatsRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BasicStatsRequest other) {
        return endDate.equals(other.endDate)
                && parameters.equals(other.parameters)
                && startDate.equals(other.startDate);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.endDate, this.parameters, this.startDate);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> endDate = Optional.empty();

        private Optional<Map<String, Optional<String>>> parameters = Optional.empty();

        private Optional<String> startDate = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(BasicStatsRequest other) {
            endDate(other.getEndDate());
            parameters(other.getParameters());
            startDate(other.getStartDate());
            return this;
        }

        /**
         * <p>Used with <code>custom</code> mode. The end date for the range.
         * Valid formats:</p>
         * <ul>
         * <li>YYYY-mm-dd</li>
         * <li>YYYY/mm/dd</li>
         * <li>mm-dd-YYYY</li>
         * <li>mm/dd/YYYY</li>
         * </ul>
         */
        @JsonSetter(value = "endDate", nulls = Nulls.SKIP)
        public Builder endDate(Optional<String> endDate) {
            this.endDate = endDate;
            return this;
        }

        public Builder endDate(String endDate) {
            this.endDate = Optional.ofNullable(endDate);
            return this;
        }

        /**
         * <p>List of parameters.</p>
         */
        @JsonSetter(value = "parameters", nulls = Nulls.SKIP)
        public Builder parameters(Optional<Map<String, Optional<String>>> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder parameters(Map<String, Optional<String>> parameters) {
            this.parameters = Optional.ofNullable(parameters);
            return this;
        }

        /**
         * <p>Used with <code>custom</code> mode. The start date for the range.
         * Valid formats:</p>
         * <ul>
         * <li>YYYY-mm-dd</li>
         * <li>YYYY/mm/dd</li>
         * <li>mm-dd-YYYY</li>
         * <li>mm/dd/YYYY</li>
         * </ul>
         */
        @JsonSetter(value = "startDate", nulls = Nulls.SKIP)
        public Builder startDate(Optional<String> startDate) {
            this.startDate = startDate;
            return this;
        }

        public Builder startDate(String startDate) {
            this.startDate = Optional.ofNullable(startDate);
            return this;
        }

        public BasicStatsRequest build() {
            return new BasicStatsRequest(endDate, parameters, startDate, additionalProperties);
        }
    }
}
