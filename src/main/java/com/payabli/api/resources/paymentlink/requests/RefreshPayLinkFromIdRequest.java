/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.resources.paymentlink.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = RefreshPayLinkFromIdRequest.Builder.class)
public final class RefreshPayLinkFromIdRequest {
    private final Optional<Boolean> amountFixed;

    private final Map<String, Object> additionalProperties;

    private RefreshPayLinkFromIdRequest(Optional<Boolean> amountFixed, Map<String, Object> additionalProperties) {
        this.amountFixed = amountFixed;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Indicates whether customer can modify the payment amount. A value of <code>true</code> means the amount isn't modifiable, a value <code>false</code> means the payor can modify the amount to pay.
     */
    @JsonProperty("amountFixed")
    public Optional<Boolean> getAmountFixed() {
        return amountFixed;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof RefreshPayLinkFromIdRequest && equalTo((RefreshPayLinkFromIdRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(RefreshPayLinkFromIdRequest other) {
        return amountFixed.equals(other.amountFixed);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.amountFixed);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Boolean> amountFixed = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(RefreshPayLinkFromIdRequest other) {
            amountFixed(other.getAmountFixed());
            return this;
        }

        /**
         * <p>Indicates whether customer can modify the payment amount. A value of <code>true</code> means the amount isn't modifiable, a value <code>false</code> means the payor can modify the amount to pay.</p>
         */
        @JsonSetter(value = "amountFixed", nulls = Nulls.SKIP)
        public Builder amountFixed(Optional<Boolean> amountFixed) {
            this.amountFixed = amountFixed;
            return this;
        }

        public Builder amountFixed(Boolean amountFixed) {
            this.amountFixed = Optional.ofNullable(amountFixed);
            return this;
        }

        public RefreshPayLinkFromIdRequest build() {
            return new RefreshPayLinkFromIdRequest(amountFixed, additionalProperties);
        }
    }
}
