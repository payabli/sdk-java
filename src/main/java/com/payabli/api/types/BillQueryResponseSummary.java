/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = BillQueryResponseSummary.Builder.class)
public final class BillQueryResponseSummary {
    private final Optional<String> pageidentifier;

    private final Optional<Integer> pageSize;

    private final Optional<Integer> total2Approval;

    private final Optional<Integer> totalactive;

    private final Optional<Double> totalAmount;

    private final Optional<Double> totalamount2Approval;

    private final Optional<Double> totalamountactive;

    private final Optional<Double> totalamountapproved;

    private final Optional<Double> totalamountcancel;

    private final Optional<Double> totalamountdisapproved;

    private final Optional<Double> totalamountintransit;

    private final Optional<Double> totalamountoverdue;

    private final Optional<Double> totalamountpaid;

    private final Optional<Double> totalamountsent2Approval;

    private final Optional<Integer> totalapproved;

    private final Optional<Integer> totalcancel;

    private final Optional<Integer> totaldisapproved;

    private final Optional<Integer> totalintransit;

    private final Optional<Integer> totaloverdue;

    private final Optional<Integer> totalPages;

    private final Optional<Integer> totalpaid;

    private final Optional<Integer> totalRecords;

    private final Optional<Integer> totalsent2Approval;

    private final Map<String, Object> additionalProperties;

    private BillQueryResponseSummary(
            Optional<String> pageidentifier,
            Optional<Integer> pageSize,
            Optional<Integer> total2Approval,
            Optional<Integer> totalactive,
            Optional<Double> totalAmount,
            Optional<Double> totalamount2Approval,
            Optional<Double> totalamountactive,
            Optional<Double> totalamountapproved,
            Optional<Double> totalamountcancel,
            Optional<Double> totalamountdisapproved,
            Optional<Double> totalamountintransit,
            Optional<Double> totalamountoverdue,
            Optional<Double> totalamountpaid,
            Optional<Double> totalamountsent2Approval,
            Optional<Integer> totalapproved,
            Optional<Integer> totalcancel,
            Optional<Integer> totaldisapproved,
            Optional<Integer> totalintransit,
            Optional<Integer> totaloverdue,
            Optional<Integer> totalPages,
            Optional<Integer> totalpaid,
            Optional<Integer> totalRecords,
            Optional<Integer> totalsent2Approval,
            Map<String, Object> additionalProperties) {
        this.pageidentifier = pageidentifier;
        this.pageSize = pageSize;
        this.total2Approval = total2Approval;
        this.totalactive = totalactive;
        this.totalAmount = totalAmount;
        this.totalamount2Approval = totalamount2Approval;
        this.totalamountactive = totalamountactive;
        this.totalamountapproved = totalamountapproved;
        this.totalamountcancel = totalamountcancel;
        this.totalamountdisapproved = totalamountdisapproved;
        this.totalamountintransit = totalamountintransit;
        this.totalamountoverdue = totalamountoverdue;
        this.totalamountpaid = totalamountpaid;
        this.totalamountsent2Approval = totalamountsent2Approval;
        this.totalapproved = totalapproved;
        this.totalcancel = totalcancel;
        this.totaldisapproved = totaldisapproved;
        this.totalintransit = totalintransit;
        this.totaloverdue = totaloverdue;
        this.totalPages = totalPages;
        this.totalpaid = totalpaid;
        this.totalRecords = totalRecords;
        this.totalsent2Approval = totalsent2Approval;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("pageidentifier")
    public Optional<String> getPageidentifier() {
        return pageidentifier;
    }

    @JsonProperty("pageSize")
    public Optional<Integer> getPageSize() {
        return pageSize;
    }

    @JsonProperty("total2approval")
    public Optional<Integer> getTotal2Approval() {
        return total2Approval;
    }

    @JsonProperty("totalactive")
    public Optional<Integer> getTotalactive() {
        return totalactive;
    }

    /**
     * @return Total amount of bills in response.
     */
    @JsonProperty("totalAmount")
    public Optional<Double> getTotalAmount() {
        return totalAmount;
    }

    @JsonProperty("totalamount2approval")
    public Optional<Double> getTotalamount2Approval() {
        return totalamount2Approval;
    }

    @JsonProperty("totalamountactive")
    public Optional<Double> getTotalamountactive() {
        return totalamountactive;
    }

    /**
     * @return The total amount of approved bills.
     */
    @JsonProperty("totalamountapproved")
    public Optional<Double> getTotalamountapproved() {
        return totalamountapproved;
    }

    @JsonProperty("totalamountcancel")
    public Optional<Double> getTotalamountcancel() {
        return totalamountcancel;
    }

    /**
     * @return The total amount of disapproved bills.
     */
    @JsonProperty("totalamountdisapproved")
    public Optional<Double> getTotalamountdisapproved() {
        return totalamountdisapproved;
    }

    @JsonProperty("totalamountintransit")
    public Optional<Double> getTotalamountintransit() {
        return totalamountintransit;
    }

    /**
     * @return The total amount of bills that are overdue.
     */
    @JsonProperty("totalamountoverdue")
    public Optional<Double> getTotalamountoverdue() {
        return totalamountoverdue;
    }

    /**
     * @return The total amount of paid bills.
     */
    @JsonProperty("totalamountpaid")
    public Optional<Double> getTotalamountpaid() {
        return totalamountpaid;
    }

    @JsonProperty("totalamountsent2approval")
    public Optional<Double> getTotalamountsent2Approval() {
        return totalamountsent2Approval;
    }

    /**
     * @return The total number of bills that were approved.
     */
    @JsonProperty("totalapproved")
    public Optional<Integer> getTotalapproved() {
        return totalapproved;
    }

    @JsonProperty("totalcancel")
    public Optional<Integer> getTotalcancel() {
        return totalcancel;
    }

    /**
     * @return The number of bills that were disapproved.
     */
    @JsonProperty("totaldisapproved")
    public Optional<Integer> getTotaldisapproved() {
        return totaldisapproved;
    }

    @JsonProperty("totalintransit")
    public Optional<Integer> getTotalintransit() {
        return totalintransit;
    }

    /**
     * @return The number of bills that are overdue.
     */
    @JsonProperty("totaloverdue")
    public Optional<Integer> getTotaloverdue() {
        return totaloverdue;
    }

    @JsonProperty("totalPages")
    public Optional<Integer> getTotalPages() {
        return totalPages;
    }

    /**
     * @return The total number of paid bills.
     */
    @JsonProperty("totalpaid")
    public Optional<Integer> getTotalpaid() {
        return totalpaid;
    }

    @JsonProperty("totalRecords")
    public Optional<Integer> getTotalRecords() {
        return totalRecords;
    }

    @JsonProperty("totalsent2approval")
    public Optional<Integer> getTotalsent2Approval() {
        return totalsent2Approval;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof BillQueryResponseSummary && equalTo((BillQueryResponseSummary) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(BillQueryResponseSummary other) {
        return pageidentifier.equals(other.pageidentifier)
                && pageSize.equals(other.pageSize)
                && total2Approval.equals(other.total2Approval)
                && totalactive.equals(other.totalactive)
                && totalAmount.equals(other.totalAmount)
                && totalamount2Approval.equals(other.totalamount2Approval)
                && totalamountactive.equals(other.totalamountactive)
                && totalamountapproved.equals(other.totalamountapproved)
                && totalamountcancel.equals(other.totalamountcancel)
                && totalamountdisapproved.equals(other.totalamountdisapproved)
                && totalamountintransit.equals(other.totalamountintransit)
                && totalamountoverdue.equals(other.totalamountoverdue)
                && totalamountpaid.equals(other.totalamountpaid)
                && totalamountsent2Approval.equals(other.totalamountsent2Approval)
                && totalapproved.equals(other.totalapproved)
                && totalcancel.equals(other.totalcancel)
                && totaldisapproved.equals(other.totaldisapproved)
                && totalintransit.equals(other.totalintransit)
                && totaloverdue.equals(other.totaloverdue)
                && totalPages.equals(other.totalPages)
                && totalpaid.equals(other.totalpaid)
                && totalRecords.equals(other.totalRecords)
                && totalsent2Approval.equals(other.totalsent2Approval);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.pageidentifier,
                this.pageSize,
                this.total2Approval,
                this.totalactive,
                this.totalAmount,
                this.totalamount2Approval,
                this.totalamountactive,
                this.totalamountapproved,
                this.totalamountcancel,
                this.totalamountdisapproved,
                this.totalamountintransit,
                this.totalamountoverdue,
                this.totalamountpaid,
                this.totalamountsent2Approval,
                this.totalapproved,
                this.totalcancel,
                this.totaldisapproved,
                this.totalintransit,
                this.totaloverdue,
                this.totalPages,
                this.totalpaid,
                this.totalRecords,
                this.totalsent2Approval);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> pageidentifier = Optional.empty();

        private Optional<Integer> pageSize = Optional.empty();

        private Optional<Integer> total2Approval = Optional.empty();

        private Optional<Integer> totalactive = Optional.empty();

        private Optional<Double> totalAmount = Optional.empty();

        private Optional<Double> totalamount2Approval = Optional.empty();

        private Optional<Double> totalamountactive = Optional.empty();

        private Optional<Double> totalamountapproved = Optional.empty();

        private Optional<Double> totalamountcancel = Optional.empty();

        private Optional<Double> totalamountdisapproved = Optional.empty();

        private Optional<Double> totalamountintransit = Optional.empty();

        private Optional<Double> totalamountoverdue = Optional.empty();

        private Optional<Double> totalamountpaid = Optional.empty();

        private Optional<Double> totalamountsent2Approval = Optional.empty();

        private Optional<Integer> totalapproved = Optional.empty();

        private Optional<Integer> totalcancel = Optional.empty();

        private Optional<Integer> totaldisapproved = Optional.empty();

        private Optional<Integer> totalintransit = Optional.empty();

        private Optional<Integer> totaloverdue = Optional.empty();

        private Optional<Integer> totalPages = Optional.empty();

        private Optional<Integer> totalpaid = Optional.empty();

        private Optional<Integer> totalRecords = Optional.empty();

        private Optional<Integer> totalsent2Approval = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(BillQueryResponseSummary other) {
            pageidentifier(other.getPageidentifier());
            pageSize(other.getPageSize());
            total2Approval(other.getTotal2Approval());
            totalactive(other.getTotalactive());
            totalAmount(other.getTotalAmount());
            totalamount2Approval(other.getTotalamount2Approval());
            totalamountactive(other.getTotalamountactive());
            totalamountapproved(other.getTotalamountapproved());
            totalamountcancel(other.getTotalamountcancel());
            totalamountdisapproved(other.getTotalamountdisapproved());
            totalamountintransit(other.getTotalamountintransit());
            totalamountoverdue(other.getTotalamountoverdue());
            totalamountpaid(other.getTotalamountpaid());
            totalamountsent2Approval(other.getTotalamountsent2Approval());
            totalapproved(other.getTotalapproved());
            totalcancel(other.getTotalcancel());
            totaldisapproved(other.getTotaldisapproved());
            totalintransit(other.getTotalintransit());
            totaloverdue(other.getTotaloverdue());
            totalPages(other.getTotalPages());
            totalpaid(other.getTotalpaid());
            totalRecords(other.getTotalRecords());
            totalsent2Approval(other.getTotalsent2Approval());
            return this;
        }

        @JsonSetter(value = "pageidentifier", nulls = Nulls.SKIP)
        public Builder pageidentifier(Optional<String> pageidentifier) {
            this.pageidentifier = pageidentifier;
            return this;
        }

        public Builder pageidentifier(String pageidentifier) {
            this.pageidentifier = Optional.ofNullable(pageidentifier);
            return this;
        }

        @JsonSetter(value = "pageSize", nulls = Nulls.SKIP)
        public Builder pageSize(Optional<Integer> pageSize) {
            this.pageSize = pageSize;
            return this;
        }

        public Builder pageSize(Integer pageSize) {
            this.pageSize = Optional.ofNullable(pageSize);
            return this;
        }

        @JsonSetter(value = "total2approval", nulls = Nulls.SKIP)
        public Builder total2Approval(Optional<Integer> total2Approval) {
            this.total2Approval = total2Approval;
            return this;
        }

        public Builder total2Approval(Integer total2Approval) {
            this.total2Approval = Optional.ofNullable(total2Approval);
            return this;
        }

        @JsonSetter(value = "totalactive", nulls = Nulls.SKIP)
        public Builder totalactive(Optional<Integer> totalactive) {
            this.totalactive = totalactive;
            return this;
        }

        public Builder totalactive(Integer totalactive) {
            this.totalactive = Optional.ofNullable(totalactive);
            return this;
        }

        /**
         * <p>Total amount of bills in response.</p>
         */
        @JsonSetter(value = "totalAmount", nulls = Nulls.SKIP)
        public Builder totalAmount(Optional<Double> totalAmount) {
            this.totalAmount = totalAmount;
            return this;
        }

        public Builder totalAmount(Double totalAmount) {
            this.totalAmount = Optional.ofNullable(totalAmount);
            return this;
        }

        @JsonSetter(value = "totalamount2approval", nulls = Nulls.SKIP)
        public Builder totalamount2Approval(Optional<Double> totalamount2Approval) {
            this.totalamount2Approval = totalamount2Approval;
            return this;
        }

        public Builder totalamount2Approval(Double totalamount2Approval) {
            this.totalamount2Approval = Optional.ofNullable(totalamount2Approval);
            return this;
        }

        @JsonSetter(value = "totalamountactive", nulls = Nulls.SKIP)
        public Builder totalamountactive(Optional<Double> totalamountactive) {
            this.totalamountactive = totalamountactive;
            return this;
        }

        public Builder totalamountactive(Double totalamountactive) {
            this.totalamountactive = Optional.ofNullable(totalamountactive);
            return this;
        }

        /**
         * <p>The total amount of approved bills.</p>
         */
        @JsonSetter(value = "totalamountapproved", nulls = Nulls.SKIP)
        public Builder totalamountapproved(Optional<Double> totalamountapproved) {
            this.totalamountapproved = totalamountapproved;
            return this;
        }

        public Builder totalamountapproved(Double totalamountapproved) {
            this.totalamountapproved = Optional.ofNullable(totalamountapproved);
            return this;
        }

        @JsonSetter(value = "totalamountcancel", nulls = Nulls.SKIP)
        public Builder totalamountcancel(Optional<Double> totalamountcancel) {
            this.totalamountcancel = totalamountcancel;
            return this;
        }

        public Builder totalamountcancel(Double totalamountcancel) {
            this.totalamountcancel = Optional.ofNullable(totalamountcancel);
            return this;
        }

        /**
         * <p>The total amount of disapproved bills.</p>
         */
        @JsonSetter(value = "totalamountdisapproved", nulls = Nulls.SKIP)
        public Builder totalamountdisapproved(Optional<Double> totalamountdisapproved) {
            this.totalamountdisapproved = totalamountdisapproved;
            return this;
        }

        public Builder totalamountdisapproved(Double totalamountdisapproved) {
            this.totalamountdisapproved = Optional.ofNullable(totalamountdisapproved);
            return this;
        }

        @JsonSetter(value = "totalamountintransit", nulls = Nulls.SKIP)
        public Builder totalamountintransit(Optional<Double> totalamountintransit) {
            this.totalamountintransit = totalamountintransit;
            return this;
        }

        public Builder totalamountintransit(Double totalamountintransit) {
            this.totalamountintransit = Optional.ofNullable(totalamountintransit);
            return this;
        }

        /**
         * <p>The total amount of bills that are overdue.</p>
         */
        @JsonSetter(value = "totalamountoverdue", nulls = Nulls.SKIP)
        public Builder totalamountoverdue(Optional<Double> totalamountoverdue) {
            this.totalamountoverdue = totalamountoverdue;
            return this;
        }

        public Builder totalamountoverdue(Double totalamountoverdue) {
            this.totalamountoverdue = Optional.ofNullable(totalamountoverdue);
            return this;
        }

        /**
         * <p>The total amount of paid bills.</p>
         */
        @JsonSetter(value = "totalamountpaid", nulls = Nulls.SKIP)
        public Builder totalamountpaid(Optional<Double> totalamountpaid) {
            this.totalamountpaid = totalamountpaid;
            return this;
        }

        public Builder totalamountpaid(Double totalamountpaid) {
            this.totalamountpaid = Optional.ofNullable(totalamountpaid);
            return this;
        }

        @JsonSetter(value = "totalamountsent2approval", nulls = Nulls.SKIP)
        public Builder totalamountsent2Approval(Optional<Double> totalamountsent2Approval) {
            this.totalamountsent2Approval = totalamountsent2Approval;
            return this;
        }

        public Builder totalamountsent2Approval(Double totalamountsent2Approval) {
            this.totalamountsent2Approval = Optional.ofNullable(totalamountsent2Approval);
            return this;
        }

        /**
         * <p>The total number of bills that were approved.</p>
         */
        @JsonSetter(value = "totalapproved", nulls = Nulls.SKIP)
        public Builder totalapproved(Optional<Integer> totalapproved) {
            this.totalapproved = totalapproved;
            return this;
        }

        public Builder totalapproved(Integer totalapproved) {
            this.totalapproved = Optional.ofNullable(totalapproved);
            return this;
        }

        @JsonSetter(value = "totalcancel", nulls = Nulls.SKIP)
        public Builder totalcancel(Optional<Integer> totalcancel) {
            this.totalcancel = totalcancel;
            return this;
        }

        public Builder totalcancel(Integer totalcancel) {
            this.totalcancel = Optional.ofNullable(totalcancel);
            return this;
        }

        /**
         * <p>The number of bills that were disapproved.</p>
         */
        @JsonSetter(value = "totaldisapproved", nulls = Nulls.SKIP)
        public Builder totaldisapproved(Optional<Integer> totaldisapproved) {
            this.totaldisapproved = totaldisapproved;
            return this;
        }

        public Builder totaldisapproved(Integer totaldisapproved) {
            this.totaldisapproved = Optional.ofNullable(totaldisapproved);
            return this;
        }

        @JsonSetter(value = "totalintransit", nulls = Nulls.SKIP)
        public Builder totalintransit(Optional<Integer> totalintransit) {
            this.totalintransit = totalintransit;
            return this;
        }

        public Builder totalintransit(Integer totalintransit) {
            this.totalintransit = Optional.ofNullable(totalintransit);
            return this;
        }

        /**
         * <p>The number of bills that are overdue.</p>
         */
        @JsonSetter(value = "totaloverdue", nulls = Nulls.SKIP)
        public Builder totaloverdue(Optional<Integer> totaloverdue) {
            this.totaloverdue = totaloverdue;
            return this;
        }

        public Builder totaloverdue(Integer totaloverdue) {
            this.totaloverdue = Optional.ofNullable(totaloverdue);
            return this;
        }

        @JsonSetter(value = "totalPages", nulls = Nulls.SKIP)
        public Builder totalPages(Optional<Integer> totalPages) {
            this.totalPages = totalPages;
            return this;
        }

        public Builder totalPages(Integer totalPages) {
            this.totalPages = Optional.ofNullable(totalPages);
            return this;
        }

        /**
         * <p>The total number of paid bills.</p>
         */
        @JsonSetter(value = "totalpaid", nulls = Nulls.SKIP)
        public Builder totalpaid(Optional<Integer> totalpaid) {
            this.totalpaid = totalpaid;
            return this;
        }

        public Builder totalpaid(Integer totalpaid) {
            this.totalpaid = Optional.ofNullable(totalpaid);
            return this;
        }

        @JsonSetter(value = "totalRecords", nulls = Nulls.SKIP)
        public Builder totalRecords(Optional<Integer> totalRecords) {
            this.totalRecords = totalRecords;
            return this;
        }

        public Builder totalRecords(Integer totalRecords) {
            this.totalRecords = Optional.ofNullable(totalRecords);
            return this;
        }

        @JsonSetter(value = "totalsent2approval", nulls = Nulls.SKIP)
        public Builder totalsent2Approval(Optional<Integer> totalsent2Approval) {
            this.totalsent2Approval = totalsent2Approval;
            return this;
        }

        public Builder totalsent2Approval(Integer totalsent2Approval) {
            this.totalsent2Approval = Optional.ofNullable(totalsent2Approval);
            return this;
        }

        public BillQueryResponseSummary build() {
            return new BillQueryResponseSummary(
                    pageidentifier,
                    pageSize,
                    total2Approval,
                    totalactive,
                    totalAmount,
                    totalamount2Approval,
                    totalamountactive,
                    totalamountapproved,
                    totalamountcancel,
                    totalamountdisapproved,
                    totalamountintransit,
                    totalamountoverdue,
                    totalamountpaid,
                    totalamountsent2Approval,
                    totalapproved,
                    totalcancel,
                    totaldisapproved,
                    totalintransit,
                    totaloverdue,
                    totalPages,
                    totalpaid,
                    totalRecords,
                    totalsent2Approval,
                    additionalProperties);
        }
    }
}
