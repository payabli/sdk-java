/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = PayabliApiResponseCancelListPayouts.Builder.class)
public final class PayabliApiResponseCancelListPayouts {
    private final Optional<Boolean> isSuccess;

    private final Optional<String> responseText;

    private final Optional<String> pageIdentifier;

    private final Optional<Integer> responseCode;

    private final Optional<List<Optional<PayabliApiResponse0ResponseData>>> responseData;

    private final Map<String, Object> additionalProperties;

    private PayabliApiResponseCancelListPayouts(
            Optional<Boolean> isSuccess,
            Optional<String> responseText,
            Optional<String> pageIdentifier,
            Optional<Integer> responseCode,
            Optional<List<Optional<PayabliApiResponse0ResponseData>>> responseData,
            Map<String, Object> additionalProperties) {
        this.isSuccess = isSuccess;
        this.responseText = responseText;
        this.pageIdentifier = pageIdentifier;
        this.responseCode = responseCode;
        this.responseData = responseData;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("isSuccess")
    public Optional<Boolean> getIsSuccess() {
        return isSuccess;
    }

    @JsonProperty("responseText")
    public Optional<String> getResponseText() {
        return responseText;
    }

    @JsonProperty("pageIdentifier")
    public Optional<String> getPageIdentifier() {
        return pageIdentifier;
    }

    @JsonProperty("responseCode")
    public Optional<Integer> getResponseCode() {
        return responseCode;
    }

    @JsonProperty("responseData")
    public Optional<List<Optional<PayabliApiResponse0ResponseData>>> getResponseData() {
        return responseData;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PayabliApiResponseCancelListPayouts
                && equalTo((PayabliApiResponseCancelListPayouts) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PayabliApiResponseCancelListPayouts other) {
        return isSuccess.equals(other.isSuccess)
                && responseText.equals(other.responseText)
                && pageIdentifier.equals(other.pageIdentifier)
                && responseCode.equals(other.responseCode)
                && responseData.equals(other.responseData);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.isSuccess, this.responseText, this.pageIdentifier, this.responseCode, this.responseData);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Boolean> isSuccess = Optional.empty();

        private Optional<String> responseText = Optional.empty();

        private Optional<String> pageIdentifier = Optional.empty();

        private Optional<Integer> responseCode = Optional.empty();

        private Optional<List<Optional<PayabliApiResponse0ResponseData>>> responseData = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(PayabliApiResponseCancelListPayouts other) {
            isSuccess(other.getIsSuccess());
            responseText(other.getResponseText());
            pageIdentifier(other.getPageIdentifier());
            responseCode(other.getResponseCode());
            responseData(other.getResponseData());
            return this;
        }

        @JsonSetter(value = "isSuccess", nulls = Nulls.SKIP)
        public Builder isSuccess(Optional<Boolean> isSuccess) {
            this.isSuccess = isSuccess;
            return this;
        }

        public Builder isSuccess(Boolean isSuccess) {
            this.isSuccess = Optional.ofNullable(isSuccess);
            return this;
        }

        @JsonSetter(value = "responseText", nulls = Nulls.SKIP)
        public Builder responseText(Optional<String> responseText) {
            this.responseText = responseText;
            return this;
        }

        public Builder responseText(String responseText) {
            this.responseText = Optional.ofNullable(responseText);
            return this;
        }

        @JsonSetter(value = "pageIdentifier", nulls = Nulls.SKIP)
        public Builder pageIdentifier(Optional<String> pageIdentifier) {
            this.pageIdentifier = pageIdentifier;
            return this;
        }

        public Builder pageIdentifier(String pageIdentifier) {
            this.pageIdentifier = Optional.ofNullable(pageIdentifier);
            return this;
        }

        @JsonSetter(value = "responseCode", nulls = Nulls.SKIP)
        public Builder responseCode(Optional<Integer> responseCode) {
            this.responseCode = responseCode;
            return this;
        }

        public Builder responseCode(Integer responseCode) {
            this.responseCode = Optional.ofNullable(responseCode);
            return this;
        }

        @JsonSetter(value = "responseData", nulls = Nulls.SKIP)
        public Builder responseData(Optional<List<Optional<PayabliApiResponse0ResponseData>>> responseData) {
            this.responseData = responseData;
            return this;
        }

        public Builder responseData(List<Optional<PayabliApiResponse0ResponseData>> responseData) {
            this.responseData = Optional.ofNullable(responseData);
            return this;
        }

        public PayabliApiResponseCancelListPayouts build() {
            return new PayabliApiResponseCancelListPayouts(
                    isSuccess, responseText, pageIdentifier, responseCode, responseData, additionalProperties);
        }
    }
}
