/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CloudQueryApiResponse.Builder.class)
public final class CloudQueryApiResponse {
    private final Optional<Boolean> isSuccess;

    private final Optional<List<PoiDevice>> responseList;

    private final Optional<String> responseText;

    private final Map<String, Object> additionalProperties;

    private CloudQueryApiResponse(
            Optional<Boolean> isSuccess,
            Optional<List<PoiDevice>> responseList,
            Optional<String> responseText,
            Map<String, Object> additionalProperties) {
        this.isSuccess = isSuccess;
        this.responseList = responseList;
        this.responseText = responseText;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("isSuccess")
    public Optional<Boolean> getIsSuccess() {
        return isSuccess;
    }

    /**
     * @return List of devices and history of registration.
     */
    @JsonProperty("responseList")
    public Optional<List<PoiDevice>> getResponseList() {
        return responseList;
    }

    @JsonProperty("responseText")
    public Optional<String> getResponseText() {
        return responseText;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CloudQueryApiResponse && equalTo((CloudQueryApiResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CloudQueryApiResponse other) {
        return isSuccess.equals(other.isSuccess)
                && responseList.equals(other.responseList)
                && responseText.equals(other.responseText);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.isSuccess, this.responseList, this.responseText);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Boolean> isSuccess = Optional.empty();

        private Optional<List<PoiDevice>> responseList = Optional.empty();

        private Optional<String> responseText = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(CloudQueryApiResponse other) {
            isSuccess(other.getIsSuccess());
            responseList(other.getResponseList());
            responseText(other.getResponseText());
            return this;
        }

        @JsonSetter(value = "isSuccess", nulls = Nulls.SKIP)
        public Builder isSuccess(Optional<Boolean> isSuccess) {
            this.isSuccess = isSuccess;
            return this;
        }

        public Builder isSuccess(Boolean isSuccess) {
            this.isSuccess = Optional.ofNullable(isSuccess);
            return this;
        }

        /**
         * <p>List of devices and history of registration.</p>
         */
        @JsonSetter(value = "responseList", nulls = Nulls.SKIP)
        public Builder responseList(Optional<List<PoiDevice>> responseList) {
            this.responseList = responseList;
            return this;
        }

        public Builder responseList(List<PoiDevice> responseList) {
            this.responseList = Optional.ofNullable(responseList);
            return this;
        }

        @JsonSetter(value = "responseText", nulls = Nulls.SKIP)
        public Builder responseText(Optional<String> responseText) {
            this.responseText = responseText;
            return this;
        }

        public Builder responseText(String responseText) {
            this.responseText = Optional.ofNullable(responseText);
            return this;
        }

        public CloudQueryApiResponse build() {
            return new CloudQueryApiResponse(isSuccess, responseList, responseText, additionalProperties);
        }
    }
}
