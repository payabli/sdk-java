/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = QueryBatchesOutResponse.Builder.class)
public final class QueryBatchesOutResponse {
    private final List<QueryBatchesOutResponseRecordsItem> records;

    private final BatchSummary summary;

    private final Map<String, Object> additionalProperties;

    private QueryBatchesOutResponse(
            List<QueryBatchesOutResponseRecordsItem> records,
            BatchSummary summary,
            Map<String, Object> additionalProperties) {
        this.records = records;
        this.summary = summary;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("Records")
    public List<QueryBatchesOutResponseRecordsItem> getRecords() {
        return records;
    }

    @JsonProperty("Summary")
    public BatchSummary getSummary() {
        return summary;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof QueryBatchesOutResponse && equalTo((QueryBatchesOutResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(QueryBatchesOutResponse other) {
        return records.equals(other.records) && summary.equals(other.summary);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.records, this.summary);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SummaryStage builder() {
        return new Builder();
    }

    public interface SummaryStage {
        _FinalStage summary(@NotNull BatchSummary summary);

        Builder from(QueryBatchesOutResponse other);
    }

    public interface _FinalStage {
        QueryBatchesOutResponse build();

        _FinalStage records(List<QueryBatchesOutResponseRecordsItem> records);

        _FinalStage addRecords(QueryBatchesOutResponseRecordsItem records);

        _FinalStage addAllRecords(List<QueryBatchesOutResponseRecordsItem> records);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SummaryStage, _FinalStage {
        private BatchSummary summary;

        private List<QueryBatchesOutResponseRecordsItem> records = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(QueryBatchesOutResponse other) {
            records(other.getRecords());
            summary(other.getSummary());
            return this;
        }

        @java.lang.Override
        @JsonSetter("Summary")
        public _FinalStage summary(@NotNull BatchSummary summary) {
            this.summary = Objects.requireNonNull(summary, "summary must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage addAllRecords(List<QueryBatchesOutResponseRecordsItem> records) {
            this.records.addAll(records);
            return this;
        }

        @java.lang.Override
        public _FinalStage addRecords(QueryBatchesOutResponseRecordsItem records) {
            this.records.add(records);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "Records", nulls = Nulls.SKIP)
        public _FinalStage records(List<QueryBatchesOutResponseRecordsItem> records) {
            this.records.clear();
            this.records.addAll(records);
            return this;
        }

        @java.lang.Override
        public QueryBatchesOutResponse build() {
            return new QueryBatchesOutResponse(records, summary, additionalProperties);
        }
    }
}
