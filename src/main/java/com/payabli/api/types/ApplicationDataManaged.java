/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ApplicationDataManaged.Builder.class)
public final class ApplicationDataManaged {
    private final Optional<Double> annualRevenue;

    private final Optional<List<FileContent>> attachments;

    private final Optional<String> baddress;

    private final Optional<String> baddress1;

    private final Optional<List<Bank>> bankData;

    private final Optional<String> bcity;

    private final Optional<String> bcountry;

    private final Optional<String> boardingLinkId;

    private final Optional<String> bstate;

    private final Optional<String> bsummary;

    private final Optional<OwnType> btype;

    private final Optional<String> bzip;

    private final Optional<List<ApplicationDataManagedContactsItem>> contacts;

    private final Optional<String> dbaname;

    private final Optional<String> ein;

    private final Optional<String> faxnumber;

    private final Optional<String> legalname;

    private final Optional<String> license;

    private final Optional<String> licstate;

    private final Optional<String> maddress;

    private final Optional<String> maddress1;

    private final Optional<String> mcc;

    private final Optional<String> mcity;

    private final Optional<String> mcountry;

    private final Optional<String> mstate;

    private final Optional<String> mzip;

    private final Optional<Long> orgId;

    private final Optional<List<ApplicationDataManagedOwnershipItem>> ownership;

    private final Optional<String> phonenumber;

    private final Optional<String> recipientEmail;

    private final Optional<Boolean> recipientEmailNotification;

    private final Optional<Boolean> resumable;

    private final SignerDataRequest signer;

    private final Optional<String> startdate;

    private final Optional<String> taxfillname;

    private final Optional<Long> templateId;

    private final Optional<String> website;

    private final Optional<String> repCode;

    private final Optional<String> repName;

    private final Optional<String> repOffice;

    private final Map<String, Object> additionalProperties;

    private ApplicationDataManaged(
            Optional<Double> annualRevenue,
            Optional<List<FileContent>> attachments,
            Optional<String> baddress,
            Optional<String> baddress1,
            Optional<List<Bank>> bankData,
            Optional<String> bcity,
            Optional<String> bcountry,
            Optional<String> boardingLinkId,
            Optional<String> bstate,
            Optional<String> bsummary,
            Optional<OwnType> btype,
            Optional<String> bzip,
            Optional<List<ApplicationDataManagedContactsItem>> contacts,
            Optional<String> dbaname,
            Optional<String> ein,
            Optional<String> faxnumber,
            Optional<String> legalname,
            Optional<String> license,
            Optional<String> licstate,
            Optional<String> maddress,
            Optional<String> maddress1,
            Optional<String> mcc,
            Optional<String> mcity,
            Optional<String> mcountry,
            Optional<String> mstate,
            Optional<String> mzip,
            Optional<Long> orgId,
            Optional<List<ApplicationDataManagedOwnershipItem>> ownership,
            Optional<String> phonenumber,
            Optional<String> recipientEmail,
            Optional<Boolean> recipientEmailNotification,
            Optional<Boolean> resumable,
            SignerDataRequest signer,
            Optional<String> startdate,
            Optional<String> taxfillname,
            Optional<Long> templateId,
            Optional<String> website,
            Optional<String> repCode,
            Optional<String> repName,
            Optional<String> repOffice,
            Map<String, Object> additionalProperties) {
        this.annualRevenue = annualRevenue;
        this.attachments = attachments;
        this.baddress = baddress;
        this.baddress1 = baddress1;
        this.bankData = bankData;
        this.bcity = bcity;
        this.bcountry = bcountry;
        this.boardingLinkId = boardingLinkId;
        this.bstate = bstate;
        this.bsummary = bsummary;
        this.btype = btype;
        this.bzip = bzip;
        this.contacts = contacts;
        this.dbaname = dbaname;
        this.ein = ein;
        this.faxnumber = faxnumber;
        this.legalname = legalname;
        this.license = license;
        this.licstate = licstate;
        this.maddress = maddress;
        this.maddress1 = maddress1;
        this.mcc = mcc;
        this.mcity = mcity;
        this.mcountry = mcountry;
        this.mstate = mstate;
        this.mzip = mzip;
        this.orgId = orgId;
        this.ownership = ownership;
        this.phonenumber = phonenumber;
        this.recipientEmail = recipientEmail;
        this.recipientEmailNotification = recipientEmailNotification;
        this.resumable = resumable;
        this.signer = signer;
        this.startdate = startdate;
        this.taxfillname = taxfillname;
        this.templateId = templateId;
        this.website = website;
        this.repCode = repCode;
        this.repName = repName;
        this.repOffice = repOffice;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Annual revenue amount. We recommend including this value.
     */
    @JsonProperty("annualRevenue")
    public Optional<Double> getAnnualRevenue() {
        return annualRevenue;
    }

    @JsonProperty("attachments")
    public Optional<List<FileContent>> getAttachments() {
        return attachments;
    }

    @JsonProperty("baddress")
    public Optional<String> getBaddress() {
        return baddress;
    }

    @JsonProperty("baddress1")
    public Optional<String> getBaddress1() {
        return baddress1;
    }

    @JsonProperty("bankData")
    public Optional<List<Bank>> getBankData() {
        return bankData;
    }

    @JsonProperty("bcity")
    public Optional<String> getBcity() {
        return bcity;
    }

    @JsonProperty("bcountry")
    public Optional<String> getBcountry() {
        return bcountry;
    }

    /**
     * @return Boarding link ID for the application. Either <code>templateId</code> or <code>boardingLinkId</code> are required.
     */
    @JsonProperty("boardingLinkId")
    public Optional<String> getBoardingLinkId() {
        return boardingLinkId;
    }

    @JsonProperty("bstate")
    public Optional<String> getBstate() {
        return bstate;
    }

    @JsonProperty("bsummary")
    public Optional<String> getBsummary() {
        return bsummary;
    }

    @JsonProperty("btype")
    public Optional<OwnType> getBtype() {
        return btype;
    }

    @JsonProperty("bzip")
    public Optional<String> getBzip() {
        return bzip;
    }

    /**
     * @return List of contacts for the business.
     */
    @JsonProperty("contacts")
    public Optional<List<ApplicationDataManagedContactsItem>> getContacts() {
        return contacts;
    }

    @JsonProperty("dbaname")
    public Optional<String> getDbaname() {
        return dbaname;
    }

    @JsonProperty("ein")
    public Optional<String> getEin() {
        return ein;
    }

    @JsonProperty("faxnumber")
    public Optional<String> getFaxnumber() {
        return faxnumber;
    }

    @JsonProperty("legalname")
    public Optional<String> getLegalname() {
        return legalname;
    }

    @JsonProperty("license")
    public Optional<String> getLicense() {
        return license;
    }

    @JsonProperty("licstate")
    public Optional<String> getLicstate() {
        return licstate;
    }

    @JsonProperty("maddress")
    public Optional<String> getMaddress() {
        return maddress;
    }

    @JsonProperty("maddress1")
    public Optional<String> getMaddress1() {
        return maddress1;
    }

    @JsonProperty("mcc")
    public Optional<String> getMcc() {
        return mcc;
    }

    @JsonProperty("mcity")
    public Optional<String> getMcity() {
        return mcity;
    }

    @JsonProperty("mcountry")
    public Optional<String> getMcountry() {
        return mcountry;
    }

    @JsonProperty("mstate")
    public Optional<String> getMstate() {
        return mstate;
    }

    @JsonProperty("mzip")
    public Optional<String> getMzip() {
        return mzip;
    }

    @JsonProperty("orgId")
    public Optional<Long> getOrgId() {
        return orgId;
    }

    /**
     * @return List of Owners with at least a 25% ownership.
     */
    @JsonProperty("ownership")
    public Optional<List<ApplicationDataManagedOwnershipItem>> getOwnership() {
        return ownership;
    }

    @JsonProperty("phonenumber")
    public Optional<String> getPhonenumber() {
        return phonenumber;
    }

    /**
     * @return Email address for the applicant. This is used to send the applicant a boarding link.
     */
    @JsonProperty("recipientEmail")
    public Optional<String> getRecipientEmail() {
        return recipientEmail;
    }

    @JsonProperty("recipientEmailNotification")
    public Optional<Boolean> getRecipientEmailNotification() {
        return recipientEmailNotification;
    }

    @JsonProperty("resumable")
    public Optional<Boolean> getResumable() {
        return resumable;
    }

    @JsonProperty("signer")
    public SignerDataRequest getSigner() {
        return signer;
    }

    @JsonProperty("startdate")
    public Optional<String> getStartdate() {
        return startdate;
    }

    @JsonProperty("taxfillname")
    public Optional<String> getTaxfillname() {
        return taxfillname;
    }

    /**
     * @return The associated boarding template's ID in Payabli. Either <code>templateId</code> or <code>boardingLinkId</code> are required.
     */
    @JsonProperty("templateId")
    public Optional<Long> getTemplateId() {
        return templateId;
    }

    @JsonProperty("website")
    public Optional<String> getWebsite() {
        return website;
    }

    @JsonProperty("RepCode")
    public Optional<String> getRepCode() {
        return repCode;
    }

    @JsonProperty("RepName")
    public Optional<String> getRepName() {
        return repName;
    }

    @JsonProperty("RepOffice")
    public Optional<String> getRepOffice() {
        return repOffice;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ApplicationDataManaged && equalTo((ApplicationDataManaged) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ApplicationDataManaged other) {
        return annualRevenue.equals(other.annualRevenue)
                && attachments.equals(other.attachments)
                && baddress.equals(other.baddress)
                && baddress1.equals(other.baddress1)
                && bankData.equals(other.bankData)
                && bcity.equals(other.bcity)
                && bcountry.equals(other.bcountry)
                && boardingLinkId.equals(other.boardingLinkId)
                && bstate.equals(other.bstate)
                && bsummary.equals(other.bsummary)
                && btype.equals(other.btype)
                && bzip.equals(other.bzip)
                && contacts.equals(other.contacts)
                && dbaname.equals(other.dbaname)
                && ein.equals(other.ein)
                && faxnumber.equals(other.faxnumber)
                && legalname.equals(other.legalname)
                && license.equals(other.license)
                && licstate.equals(other.licstate)
                && maddress.equals(other.maddress)
                && maddress1.equals(other.maddress1)
                && mcc.equals(other.mcc)
                && mcity.equals(other.mcity)
                && mcountry.equals(other.mcountry)
                && mstate.equals(other.mstate)
                && mzip.equals(other.mzip)
                && orgId.equals(other.orgId)
                && ownership.equals(other.ownership)
                && phonenumber.equals(other.phonenumber)
                && recipientEmail.equals(other.recipientEmail)
                && recipientEmailNotification.equals(other.recipientEmailNotification)
                && resumable.equals(other.resumable)
                && signer.equals(other.signer)
                && startdate.equals(other.startdate)
                && taxfillname.equals(other.taxfillname)
                && templateId.equals(other.templateId)
                && website.equals(other.website)
                && repCode.equals(other.repCode)
                && repName.equals(other.repName)
                && repOffice.equals(other.repOffice);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.annualRevenue,
                this.attachments,
                this.baddress,
                this.baddress1,
                this.bankData,
                this.bcity,
                this.bcountry,
                this.boardingLinkId,
                this.bstate,
                this.bsummary,
                this.btype,
                this.bzip,
                this.contacts,
                this.dbaname,
                this.ein,
                this.faxnumber,
                this.legalname,
                this.license,
                this.licstate,
                this.maddress,
                this.maddress1,
                this.mcc,
                this.mcity,
                this.mcountry,
                this.mstate,
                this.mzip,
                this.orgId,
                this.ownership,
                this.phonenumber,
                this.recipientEmail,
                this.recipientEmailNotification,
                this.resumable,
                this.signer,
                this.startdate,
                this.taxfillname,
                this.templateId,
                this.website,
                this.repCode,
                this.repName,
                this.repOffice);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SignerStage builder() {
        return new Builder();
    }

    public interface SignerStage {
        _FinalStage signer(@NotNull SignerDataRequest signer);

        Builder from(ApplicationDataManaged other);
    }

    public interface _FinalStage {
        ApplicationDataManaged build();

        /**
         * <p>Annual revenue amount. We recommend including this value.</p>
         */
        _FinalStage annualRevenue(Optional<Double> annualRevenue);

        _FinalStage annualRevenue(Double annualRevenue);

        _FinalStage attachments(Optional<List<FileContent>> attachments);

        _FinalStage attachments(List<FileContent> attachments);

        _FinalStage baddress(Optional<String> baddress);

        _FinalStage baddress(String baddress);

        _FinalStage baddress1(Optional<String> baddress1);

        _FinalStage baddress1(String baddress1);

        _FinalStage bankData(Optional<List<Bank>> bankData);

        _FinalStage bankData(List<Bank> bankData);

        _FinalStage bcity(Optional<String> bcity);

        _FinalStage bcity(String bcity);

        _FinalStage bcountry(Optional<String> bcountry);

        _FinalStage bcountry(String bcountry);

        /**
         * <p>Boarding link ID for the application. Either <code>templateId</code> or <code>boardingLinkId</code> are required.</p>
         */
        _FinalStage boardingLinkId(Optional<String> boardingLinkId);

        _FinalStage boardingLinkId(String boardingLinkId);

        _FinalStage bstate(Optional<String> bstate);

        _FinalStage bstate(String bstate);

        _FinalStage bsummary(Optional<String> bsummary);

        _FinalStage bsummary(String bsummary);

        _FinalStage btype(Optional<OwnType> btype);

        _FinalStage btype(OwnType btype);

        _FinalStage bzip(Optional<String> bzip);

        _FinalStage bzip(String bzip);

        /**
         * <p>List of contacts for the business.</p>
         */
        _FinalStage contacts(Optional<List<ApplicationDataManagedContactsItem>> contacts);

        _FinalStage contacts(List<ApplicationDataManagedContactsItem> contacts);

        _FinalStage dbaname(Optional<String> dbaname);

        _FinalStage dbaname(String dbaname);

        _FinalStage ein(Optional<String> ein);

        _FinalStage ein(String ein);

        _FinalStage faxnumber(Optional<String> faxnumber);

        _FinalStage faxnumber(String faxnumber);

        _FinalStage legalname(Optional<String> legalname);

        _FinalStage legalname(String legalname);

        _FinalStage license(Optional<String> license);

        _FinalStage license(String license);

        _FinalStage licstate(Optional<String> licstate);

        _FinalStage licstate(String licstate);

        _FinalStage maddress(Optional<String> maddress);

        _FinalStage maddress(String maddress);

        _FinalStage maddress1(Optional<String> maddress1);

        _FinalStage maddress1(String maddress1);

        _FinalStage mcc(Optional<String> mcc);

        _FinalStage mcc(String mcc);

        _FinalStage mcity(Optional<String> mcity);

        _FinalStage mcity(String mcity);

        _FinalStage mcountry(Optional<String> mcountry);

        _FinalStage mcountry(String mcountry);

        _FinalStage mstate(Optional<String> mstate);

        _FinalStage mstate(String mstate);

        _FinalStage mzip(Optional<String> mzip);

        _FinalStage mzip(String mzip);

        _FinalStage orgId(Optional<Long> orgId);

        _FinalStage orgId(Long orgId);

        /**
         * <p>List of Owners with at least a 25% ownership.</p>
         */
        _FinalStage ownership(Optional<List<ApplicationDataManagedOwnershipItem>> ownership);

        _FinalStage ownership(List<ApplicationDataManagedOwnershipItem> ownership);

        _FinalStage phonenumber(Optional<String> phonenumber);

        _FinalStage phonenumber(String phonenumber);

        /**
         * <p>Email address for the applicant. This is used to send the applicant a boarding link.</p>
         */
        _FinalStage recipientEmail(Optional<String> recipientEmail);

        _FinalStage recipientEmail(String recipientEmail);

        _FinalStage recipientEmailNotification(Optional<Boolean> recipientEmailNotification);

        _FinalStage recipientEmailNotification(Boolean recipientEmailNotification);

        _FinalStage resumable(Optional<Boolean> resumable);

        _FinalStage resumable(Boolean resumable);

        _FinalStage startdate(Optional<String> startdate);

        _FinalStage startdate(String startdate);

        _FinalStage taxfillname(Optional<String> taxfillname);

        _FinalStage taxfillname(String taxfillname);

        /**
         * <p>The associated boarding template's ID in Payabli. Either <code>templateId</code> or <code>boardingLinkId</code> are required.</p>
         */
        _FinalStage templateId(Optional<Long> templateId);

        _FinalStage templateId(Long templateId);

        _FinalStage website(Optional<String> website);

        _FinalStage website(String website);

        _FinalStage repCode(Optional<String> repCode);

        _FinalStage repCode(String repCode);

        _FinalStage repName(Optional<String> repName);

        _FinalStage repName(String repName);

        _FinalStage repOffice(Optional<String> repOffice);

        _FinalStage repOffice(String repOffice);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SignerStage, _FinalStage {
        private SignerDataRequest signer;

        private Optional<String> repOffice = Optional.empty();

        private Optional<String> repName = Optional.empty();

        private Optional<String> repCode = Optional.empty();

        private Optional<String> website = Optional.empty();

        private Optional<Long> templateId = Optional.empty();

        private Optional<String> taxfillname = Optional.empty();

        private Optional<String> startdate = Optional.empty();

        private Optional<Boolean> resumable = Optional.empty();

        private Optional<Boolean> recipientEmailNotification = Optional.empty();

        private Optional<String> recipientEmail = Optional.empty();

        private Optional<String> phonenumber = Optional.empty();

        private Optional<List<ApplicationDataManagedOwnershipItem>> ownership = Optional.empty();

        private Optional<Long> orgId = Optional.empty();

        private Optional<String> mzip = Optional.empty();

        private Optional<String> mstate = Optional.empty();

        private Optional<String> mcountry = Optional.empty();

        private Optional<String> mcity = Optional.empty();

        private Optional<String> mcc = Optional.empty();

        private Optional<String> maddress1 = Optional.empty();

        private Optional<String> maddress = Optional.empty();

        private Optional<String> licstate = Optional.empty();

        private Optional<String> license = Optional.empty();

        private Optional<String> legalname = Optional.empty();

        private Optional<String> faxnumber = Optional.empty();

        private Optional<String> ein = Optional.empty();

        private Optional<String> dbaname = Optional.empty();

        private Optional<List<ApplicationDataManagedContactsItem>> contacts = Optional.empty();

        private Optional<String> bzip = Optional.empty();

        private Optional<OwnType> btype = Optional.empty();

        private Optional<String> bsummary = Optional.empty();

        private Optional<String> bstate = Optional.empty();

        private Optional<String> boardingLinkId = Optional.empty();

        private Optional<String> bcountry = Optional.empty();

        private Optional<String> bcity = Optional.empty();

        private Optional<List<Bank>> bankData = Optional.empty();

        private Optional<String> baddress1 = Optional.empty();

        private Optional<String> baddress = Optional.empty();

        private Optional<List<FileContent>> attachments = Optional.empty();

        private Optional<Double> annualRevenue = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ApplicationDataManaged other) {
            annualRevenue(other.getAnnualRevenue());
            attachments(other.getAttachments());
            baddress(other.getBaddress());
            baddress1(other.getBaddress1());
            bankData(other.getBankData());
            bcity(other.getBcity());
            bcountry(other.getBcountry());
            boardingLinkId(other.getBoardingLinkId());
            bstate(other.getBstate());
            bsummary(other.getBsummary());
            btype(other.getBtype());
            bzip(other.getBzip());
            contacts(other.getContacts());
            dbaname(other.getDbaname());
            ein(other.getEin());
            faxnumber(other.getFaxnumber());
            legalname(other.getLegalname());
            license(other.getLicense());
            licstate(other.getLicstate());
            maddress(other.getMaddress());
            maddress1(other.getMaddress1());
            mcc(other.getMcc());
            mcity(other.getMcity());
            mcountry(other.getMcountry());
            mstate(other.getMstate());
            mzip(other.getMzip());
            orgId(other.getOrgId());
            ownership(other.getOwnership());
            phonenumber(other.getPhonenumber());
            recipientEmail(other.getRecipientEmail());
            recipientEmailNotification(other.getRecipientEmailNotification());
            resumable(other.getResumable());
            signer(other.getSigner());
            startdate(other.getStartdate());
            taxfillname(other.getTaxfillname());
            templateId(other.getTemplateId());
            website(other.getWebsite());
            repCode(other.getRepCode());
            repName(other.getRepName());
            repOffice(other.getRepOffice());
            return this;
        }

        @java.lang.Override
        @JsonSetter("signer")
        public _FinalStage signer(@NotNull SignerDataRequest signer) {
            this.signer = Objects.requireNonNull(signer, "signer must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage repOffice(String repOffice) {
            this.repOffice = Optional.ofNullable(repOffice);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "RepOffice", nulls = Nulls.SKIP)
        public _FinalStage repOffice(Optional<String> repOffice) {
            this.repOffice = repOffice;
            return this;
        }

        @java.lang.Override
        public _FinalStage repName(String repName) {
            this.repName = Optional.ofNullable(repName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "RepName", nulls = Nulls.SKIP)
        public _FinalStage repName(Optional<String> repName) {
            this.repName = repName;
            return this;
        }

        @java.lang.Override
        public _FinalStage repCode(String repCode) {
            this.repCode = Optional.ofNullable(repCode);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "RepCode", nulls = Nulls.SKIP)
        public _FinalStage repCode(Optional<String> repCode) {
            this.repCode = repCode;
            return this;
        }

        @java.lang.Override
        public _FinalStage website(String website) {
            this.website = Optional.ofNullable(website);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "website", nulls = Nulls.SKIP)
        public _FinalStage website(Optional<String> website) {
            this.website = website;
            return this;
        }

        /**
         * <p>The associated boarding template's ID in Payabli. Either <code>templateId</code> or <code>boardingLinkId</code> are required.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage templateId(Long templateId) {
            this.templateId = Optional.ofNullable(templateId);
            return this;
        }

        /**
         * <p>The associated boarding template's ID in Payabli. Either <code>templateId</code> or <code>boardingLinkId</code> are required.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "templateId", nulls = Nulls.SKIP)
        public _FinalStage templateId(Optional<Long> templateId) {
            this.templateId = templateId;
            return this;
        }

        @java.lang.Override
        public _FinalStage taxfillname(String taxfillname) {
            this.taxfillname = Optional.ofNullable(taxfillname);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "taxfillname", nulls = Nulls.SKIP)
        public _FinalStage taxfillname(Optional<String> taxfillname) {
            this.taxfillname = taxfillname;
            return this;
        }

        @java.lang.Override
        public _FinalStage startdate(String startdate) {
            this.startdate = Optional.ofNullable(startdate);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "startdate", nulls = Nulls.SKIP)
        public _FinalStage startdate(Optional<String> startdate) {
            this.startdate = startdate;
            return this;
        }

        @java.lang.Override
        public _FinalStage resumable(Boolean resumable) {
            this.resumable = Optional.ofNullable(resumable);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "resumable", nulls = Nulls.SKIP)
        public _FinalStage resumable(Optional<Boolean> resumable) {
            this.resumable = resumable;
            return this;
        }

        @java.lang.Override
        public _FinalStage recipientEmailNotification(Boolean recipientEmailNotification) {
            this.recipientEmailNotification = Optional.ofNullable(recipientEmailNotification);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "recipientEmailNotification", nulls = Nulls.SKIP)
        public _FinalStage recipientEmailNotification(Optional<Boolean> recipientEmailNotification) {
            this.recipientEmailNotification = recipientEmailNotification;
            return this;
        }

        /**
         * <p>Email address for the applicant. This is used to send the applicant a boarding link.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage recipientEmail(String recipientEmail) {
            this.recipientEmail = Optional.ofNullable(recipientEmail);
            return this;
        }

        /**
         * <p>Email address for the applicant. This is used to send the applicant a boarding link.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "recipientEmail", nulls = Nulls.SKIP)
        public _FinalStage recipientEmail(Optional<String> recipientEmail) {
            this.recipientEmail = recipientEmail;
            return this;
        }

        @java.lang.Override
        public _FinalStage phonenumber(String phonenumber) {
            this.phonenumber = Optional.ofNullable(phonenumber);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "phonenumber", nulls = Nulls.SKIP)
        public _FinalStage phonenumber(Optional<String> phonenumber) {
            this.phonenumber = phonenumber;
            return this;
        }

        /**
         * <p>List of Owners with at least a 25% ownership.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage ownership(List<ApplicationDataManagedOwnershipItem> ownership) {
            this.ownership = Optional.ofNullable(ownership);
            return this;
        }

        /**
         * <p>List of Owners with at least a 25% ownership.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "ownership", nulls = Nulls.SKIP)
        public _FinalStage ownership(Optional<List<ApplicationDataManagedOwnershipItem>> ownership) {
            this.ownership = ownership;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgId(Long orgId) {
            this.orgId = Optional.ofNullable(orgId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "orgId", nulls = Nulls.SKIP)
        public _FinalStage orgId(Optional<Long> orgId) {
            this.orgId = orgId;
            return this;
        }

        @java.lang.Override
        public _FinalStage mzip(String mzip) {
            this.mzip = Optional.ofNullable(mzip);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "mzip", nulls = Nulls.SKIP)
        public _FinalStage mzip(Optional<String> mzip) {
            this.mzip = mzip;
            return this;
        }

        @java.lang.Override
        public _FinalStage mstate(String mstate) {
            this.mstate = Optional.ofNullable(mstate);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "mstate", nulls = Nulls.SKIP)
        public _FinalStage mstate(Optional<String> mstate) {
            this.mstate = mstate;
            return this;
        }

        @java.lang.Override
        public _FinalStage mcountry(String mcountry) {
            this.mcountry = Optional.ofNullable(mcountry);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "mcountry", nulls = Nulls.SKIP)
        public _FinalStage mcountry(Optional<String> mcountry) {
            this.mcountry = mcountry;
            return this;
        }

        @java.lang.Override
        public _FinalStage mcity(String mcity) {
            this.mcity = Optional.ofNullable(mcity);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "mcity", nulls = Nulls.SKIP)
        public _FinalStage mcity(Optional<String> mcity) {
            this.mcity = mcity;
            return this;
        }

        @java.lang.Override
        public _FinalStage mcc(String mcc) {
            this.mcc = Optional.ofNullable(mcc);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "mcc", nulls = Nulls.SKIP)
        public _FinalStage mcc(Optional<String> mcc) {
            this.mcc = mcc;
            return this;
        }

        @java.lang.Override
        public _FinalStage maddress1(String maddress1) {
            this.maddress1 = Optional.ofNullable(maddress1);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "maddress1", nulls = Nulls.SKIP)
        public _FinalStage maddress1(Optional<String> maddress1) {
            this.maddress1 = maddress1;
            return this;
        }

        @java.lang.Override
        public _FinalStage maddress(String maddress) {
            this.maddress = Optional.ofNullable(maddress);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "maddress", nulls = Nulls.SKIP)
        public _FinalStage maddress(Optional<String> maddress) {
            this.maddress = maddress;
            return this;
        }

        @java.lang.Override
        public _FinalStage licstate(String licstate) {
            this.licstate = Optional.ofNullable(licstate);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "licstate", nulls = Nulls.SKIP)
        public _FinalStage licstate(Optional<String> licstate) {
            this.licstate = licstate;
            return this;
        }

        @java.lang.Override
        public _FinalStage license(String license) {
            this.license = Optional.ofNullable(license);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "license", nulls = Nulls.SKIP)
        public _FinalStage license(Optional<String> license) {
            this.license = license;
            return this;
        }

        @java.lang.Override
        public _FinalStage legalname(String legalname) {
            this.legalname = Optional.ofNullable(legalname);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "legalname", nulls = Nulls.SKIP)
        public _FinalStage legalname(Optional<String> legalname) {
            this.legalname = legalname;
            return this;
        }

        @java.lang.Override
        public _FinalStage faxnumber(String faxnumber) {
            this.faxnumber = Optional.ofNullable(faxnumber);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "faxnumber", nulls = Nulls.SKIP)
        public _FinalStage faxnumber(Optional<String> faxnumber) {
            this.faxnumber = faxnumber;
            return this;
        }

        @java.lang.Override
        public _FinalStage ein(String ein) {
            this.ein = Optional.ofNullable(ein);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ein", nulls = Nulls.SKIP)
        public _FinalStage ein(Optional<String> ein) {
            this.ein = ein;
            return this;
        }

        @java.lang.Override
        public _FinalStage dbaname(String dbaname) {
            this.dbaname = Optional.ofNullable(dbaname);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "dbaname", nulls = Nulls.SKIP)
        public _FinalStage dbaname(Optional<String> dbaname) {
            this.dbaname = dbaname;
            return this;
        }

        /**
         * <p>List of contacts for the business.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage contacts(List<ApplicationDataManagedContactsItem> contacts) {
            this.contacts = Optional.ofNullable(contacts);
            return this;
        }

        /**
         * <p>List of contacts for the business.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "contacts", nulls = Nulls.SKIP)
        public _FinalStage contacts(Optional<List<ApplicationDataManagedContactsItem>> contacts) {
            this.contacts = contacts;
            return this;
        }

        @java.lang.Override
        public _FinalStage bzip(String bzip) {
            this.bzip = Optional.ofNullable(bzip);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "bzip", nulls = Nulls.SKIP)
        public _FinalStage bzip(Optional<String> bzip) {
            this.bzip = bzip;
            return this;
        }

        @java.lang.Override
        public _FinalStage btype(OwnType btype) {
            this.btype = Optional.ofNullable(btype);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "btype", nulls = Nulls.SKIP)
        public _FinalStage btype(Optional<OwnType> btype) {
            this.btype = btype;
            return this;
        }

        @java.lang.Override
        public _FinalStage bsummary(String bsummary) {
            this.bsummary = Optional.ofNullable(bsummary);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "bsummary", nulls = Nulls.SKIP)
        public _FinalStage bsummary(Optional<String> bsummary) {
            this.bsummary = bsummary;
            return this;
        }

        @java.lang.Override
        public _FinalStage bstate(String bstate) {
            this.bstate = Optional.ofNullable(bstate);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "bstate", nulls = Nulls.SKIP)
        public _FinalStage bstate(Optional<String> bstate) {
            this.bstate = bstate;
            return this;
        }

        /**
         * <p>Boarding link ID for the application. Either <code>templateId</code> or <code>boardingLinkId</code> are required.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage boardingLinkId(String boardingLinkId) {
            this.boardingLinkId = Optional.ofNullable(boardingLinkId);
            return this;
        }

        /**
         * <p>Boarding link ID for the application. Either <code>templateId</code> or <code>boardingLinkId</code> are required.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "boardingLinkId", nulls = Nulls.SKIP)
        public _FinalStage boardingLinkId(Optional<String> boardingLinkId) {
            this.boardingLinkId = boardingLinkId;
            return this;
        }

        @java.lang.Override
        public _FinalStage bcountry(String bcountry) {
            this.bcountry = Optional.ofNullable(bcountry);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "bcountry", nulls = Nulls.SKIP)
        public _FinalStage bcountry(Optional<String> bcountry) {
            this.bcountry = bcountry;
            return this;
        }

        @java.lang.Override
        public _FinalStage bcity(String bcity) {
            this.bcity = Optional.ofNullable(bcity);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "bcity", nulls = Nulls.SKIP)
        public _FinalStage bcity(Optional<String> bcity) {
            this.bcity = bcity;
            return this;
        }

        @java.lang.Override
        public _FinalStage bankData(List<Bank> bankData) {
            this.bankData = Optional.ofNullable(bankData);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "bankData", nulls = Nulls.SKIP)
        public _FinalStage bankData(Optional<List<Bank>> bankData) {
            this.bankData = bankData;
            return this;
        }

        @java.lang.Override
        public _FinalStage baddress1(String baddress1) {
            this.baddress1 = Optional.ofNullable(baddress1);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "baddress1", nulls = Nulls.SKIP)
        public _FinalStage baddress1(Optional<String> baddress1) {
            this.baddress1 = baddress1;
            return this;
        }

        @java.lang.Override
        public _FinalStage baddress(String baddress) {
            this.baddress = Optional.ofNullable(baddress);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "baddress", nulls = Nulls.SKIP)
        public _FinalStage baddress(Optional<String> baddress) {
            this.baddress = baddress;
            return this;
        }

        @java.lang.Override
        public _FinalStage attachments(List<FileContent> attachments) {
            this.attachments = Optional.ofNullable(attachments);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "attachments", nulls = Nulls.SKIP)
        public _FinalStage attachments(Optional<List<FileContent>> attachments) {
            this.attachments = attachments;
            return this;
        }

        /**
         * <p>Annual revenue amount. We recommend including this value.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage annualRevenue(Double annualRevenue) {
            this.annualRevenue = Optional.ofNullable(annualRevenue);
            return this;
        }

        /**
         * <p>Annual revenue amount. We recommend including this value.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "annualRevenue", nulls = Nulls.SKIP)
        public _FinalStage annualRevenue(Optional<Double> annualRevenue) {
            this.annualRevenue = annualRevenue;
            return this;
        }

        @java.lang.Override
        public ApplicationDataManaged build() {
            return new ApplicationDataManaged(
                    annualRevenue,
                    attachments,
                    baddress,
                    baddress1,
                    bankData,
                    bcity,
                    bcountry,
                    boardingLinkId,
                    bstate,
                    bsummary,
                    btype,
                    bzip,
                    contacts,
                    dbaname,
                    ein,
                    faxnumber,
                    legalname,
                    license,
                    licstate,
                    maddress,
                    maddress1,
                    mcc,
                    mcity,
                    mcountry,
                    mstate,
                    mzip,
                    orgId,
                    ownership,
                    phonenumber,
                    recipientEmail,
                    recipientEmailNotification,
                    resumable,
                    signer,
                    startdate,
                    taxfillname,
                    templateId,
                    website,
                    repCode,
                    repName,
                    repOffice,
                    additionalProperties);
        }
    }
}
