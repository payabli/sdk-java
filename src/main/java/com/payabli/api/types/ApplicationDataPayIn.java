/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ApplicationDataPayIn.Builder.class)
public final class ApplicationDataPayIn {
    private final ApplicationDataPayInServices services;

    private final Optional<Double> annualRevenue;

    private final Optional<String> averageBillSize;

    private final Optional<String> averageMonthlyBill;

    private final Optional<Double> avgmonthly;

    private final Optional<String> baddress;

    private final Optional<String> baddress1;

    private final ApplicationDataPayInBankData bankData;

    private final Optional<String> bcity;

    private final Optional<String> bcountry;

    private final Optional<Integer> binperson;

    private final Optional<Integer> binphone;

    private final Optional<Integer> binweb;

    private final Optional<String> boardingLinkId;

    private final Optional<String> bstate;

    private final Optional<String> bsummary;

    private final Optional<OwnType> btype;

    private final Optional<String> bzip;

    private final Optional<List<ApplicationDataPayInContactsItem>> contacts;

    private final Optional<String> creditLimit;

    private final Optional<String> dbaName;

    private final Optional<String> ein;

    private final Optional<String> externalpaypointId;

    private final Optional<String> faxnumber;

    private final Optional<Double> highticketamt;

    private final Optional<String> legalName;

    private final Optional<String> license;

    private final Optional<String> licstate;

    private final Optional<String> maddress;

    private final Optional<String> maddress1;

    private final Optional<String> mcc;

    private final Optional<String> mcity;

    private final Optional<String> mcountry;

    private final Optional<String> mstate;

    private final Optional<String> mzip;

    private final Optional<Long> orgId;

    private final Optional<List<ApplicationDataPayInOwnershipItem>> ownership;

    private final String phonenumber;

    private final String processingRegion;

    private final Optional<String> recipientEmail;

    private final Optional<Boolean> recipientEmailNotification;

    private final Optional<Boolean> resumable;

    private final SignerDataRequest signer;

    private final Optional<String> startdate;

    private final Optional<String> taxFillName;

    private final Optional<Long> templateId;

    private final Optional<Double> ticketamt;

    private final Optional<String> website;

    private final Whencharged whenCharged;

    private final Whendelivered whenDelivered;

    private final Whenprovided whenProvided;

    private final Whenrefunded whenRefunded;

    private final Optional<String> additionalData;

    private final Optional<String> repCode;

    private final Optional<String> repName;

    private final Optional<String> repOffice;

    private final Map<String, Object> additionalProperties;

    private ApplicationDataPayIn(
            ApplicationDataPayInServices services,
            Optional<Double> annualRevenue,
            Optional<String> averageBillSize,
            Optional<String> averageMonthlyBill,
            Optional<Double> avgmonthly,
            Optional<String> baddress,
            Optional<String> baddress1,
            ApplicationDataPayInBankData bankData,
            Optional<String> bcity,
            Optional<String> bcountry,
            Optional<Integer> binperson,
            Optional<Integer> binphone,
            Optional<Integer> binweb,
            Optional<String> boardingLinkId,
            Optional<String> bstate,
            Optional<String> bsummary,
            Optional<OwnType> btype,
            Optional<String> bzip,
            Optional<List<ApplicationDataPayInContactsItem>> contacts,
            Optional<String> creditLimit,
            Optional<String> dbaName,
            Optional<String> ein,
            Optional<String> externalpaypointId,
            Optional<String> faxnumber,
            Optional<Double> highticketamt,
            Optional<String> legalName,
            Optional<String> license,
            Optional<String> licstate,
            Optional<String> maddress,
            Optional<String> maddress1,
            Optional<String> mcc,
            Optional<String> mcity,
            Optional<String> mcountry,
            Optional<String> mstate,
            Optional<String> mzip,
            Optional<Long> orgId,
            Optional<List<ApplicationDataPayInOwnershipItem>> ownership,
            String phonenumber,
            String processingRegion,
            Optional<String> recipientEmail,
            Optional<Boolean> recipientEmailNotification,
            Optional<Boolean> resumable,
            SignerDataRequest signer,
            Optional<String> startdate,
            Optional<String> taxFillName,
            Optional<Long> templateId,
            Optional<Double> ticketamt,
            Optional<String> website,
            Whencharged whenCharged,
            Whendelivered whenDelivered,
            Whenprovided whenProvided,
            Whenrefunded whenRefunded,
            Optional<String> additionalData,
            Optional<String> repCode,
            Optional<String> repName,
            Optional<String> repOffice,
            Map<String, Object> additionalProperties) {
        this.services = services;
        this.annualRevenue = annualRevenue;
        this.averageBillSize = averageBillSize;
        this.averageMonthlyBill = averageMonthlyBill;
        this.avgmonthly = avgmonthly;
        this.baddress = baddress;
        this.baddress1 = baddress1;
        this.bankData = bankData;
        this.bcity = bcity;
        this.bcountry = bcountry;
        this.binperson = binperson;
        this.binphone = binphone;
        this.binweb = binweb;
        this.boardingLinkId = boardingLinkId;
        this.bstate = bstate;
        this.bsummary = bsummary;
        this.btype = btype;
        this.bzip = bzip;
        this.contacts = contacts;
        this.creditLimit = creditLimit;
        this.dbaName = dbaName;
        this.ein = ein;
        this.externalpaypointId = externalpaypointId;
        this.faxnumber = faxnumber;
        this.highticketamt = highticketamt;
        this.legalName = legalName;
        this.license = license;
        this.licstate = licstate;
        this.maddress = maddress;
        this.maddress1 = maddress1;
        this.mcc = mcc;
        this.mcity = mcity;
        this.mcountry = mcountry;
        this.mstate = mstate;
        this.mzip = mzip;
        this.orgId = orgId;
        this.ownership = ownership;
        this.phonenumber = phonenumber;
        this.processingRegion = processingRegion;
        this.recipientEmail = recipientEmail;
        this.recipientEmailNotification = recipientEmailNotification;
        this.resumable = resumable;
        this.signer = signer;
        this.startdate = startdate;
        this.taxFillName = taxFillName;
        this.templateId = templateId;
        this.ticketamt = ticketamt;
        this.website = website;
        this.whenCharged = whenCharged;
        this.whenDelivered = whenDelivered;
        this.whenProvided = whenProvided;
        this.whenRefunded = whenRefunded;
        this.additionalData = additionalData;
        this.repCode = repCode;
        this.repName = repName;
        this.repOffice = repOffice;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("services")
    public ApplicationDataPayInServices getServices() {
        return services;
    }

    @JsonProperty("annualRevenue")
    public Optional<Double> getAnnualRevenue() {
        return annualRevenue;
    }

    @JsonProperty("averageBillSize")
    public Optional<String> getAverageBillSize() {
        return averageBillSize;
    }

    @JsonProperty("averageMonthlyBill")
    public Optional<String> getAverageMonthlyBill() {
        return averageMonthlyBill;
    }

    @JsonProperty("avgmonthly")
    public Optional<Double> getAvgmonthly() {
        return avgmonthly;
    }

    @JsonProperty("baddress")
    public Optional<String> getBaddress() {
        return baddress;
    }

    @JsonProperty("baddress1")
    public Optional<String> getBaddress1() {
        return baddress1;
    }

    @JsonProperty("bankData")
    public ApplicationDataPayInBankData getBankData() {
        return bankData;
    }

    @JsonProperty("bcity")
    public Optional<String> getBcity() {
        return bcity;
    }

    @JsonProperty("bcountry")
    public Optional<String> getBcountry() {
        return bcountry;
    }

    @JsonProperty("binperson")
    public Optional<Integer> getBinperson() {
        return binperson;
    }

    @JsonProperty("binphone")
    public Optional<Integer> getBinphone() {
        return binphone;
    }

    @JsonProperty("binweb")
    public Optional<Integer> getBinweb() {
        return binweb;
    }

    /**
     * @return Boarding link ID for the application. Either <code>templateId</code> or <code>boardingLinkId</code> are required.
     */
    @JsonProperty("boardingLinkId")
    public Optional<String> getBoardingLinkId() {
        return boardingLinkId;
    }

    @JsonProperty("bstate")
    public Optional<String> getBstate() {
        return bstate;
    }

    @JsonProperty("bsummary")
    public Optional<String> getBsummary() {
        return bsummary;
    }

    @JsonProperty("btype")
    public Optional<OwnType> getBtype() {
        return btype;
    }

    @JsonProperty("bzip")
    public Optional<String> getBzip() {
        return bzip;
    }

    /**
     * @return List of contacts for the business.
     */
    @JsonProperty("contacts")
    public Optional<List<ApplicationDataPayInContactsItem>> getContacts() {
        return contacts;
    }

    /**
     * @return The maximum amount of credit that our lending partner, has authorized to your business. It's the upper boundary on how much you can spend or owe on a credit account at any given time.
     */
    @JsonProperty("creditLimit")
    public Optional<String> getCreditLimit() {
        return creditLimit;
    }

    /**
     * @return The alternate or common name that this business is doing business under usually referred to as a DBA name. Payabli strongly recommends including this information.
     */
    @JsonProperty("dbaName")
    public Optional<String> getDbaName() {
        return dbaName;
    }

    @JsonProperty("ein")
    public Optional<String> getEin() {
        return ein;
    }

    @JsonProperty("externalpaypointID")
    public Optional<String> getExternalpaypointId() {
        return externalpaypointId;
    }

    /**
     * @return The business's fax number.
     */
    @JsonProperty("faxnumber")
    public Optional<String> getFaxnumber() {
        return faxnumber;
    }

    @JsonProperty("highticketamt")
    public Optional<Double> getHighticketamt() {
        return highticketamt;
    }

    @JsonProperty("legalName")
    public Optional<String> getLegalName() {
        return legalName;
    }

    @JsonProperty("license")
    public Optional<String> getLicense() {
        return license;
    }

    @JsonProperty("licstate")
    public Optional<String> getLicstate() {
        return licstate;
    }

    @JsonProperty("maddress")
    public Optional<String> getMaddress() {
        return maddress;
    }

    @JsonProperty("maddress1")
    public Optional<String> getMaddress1() {
        return maddress1;
    }

    @JsonProperty("mcc")
    public Optional<String> getMcc() {
        return mcc;
    }

    @JsonProperty("mcity")
    public Optional<String> getMcity() {
        return mcity;
    }

    @JsonProperty("mcountry")
    public Optional<String> getMcountry() {
        return mcountry;
    }

    @JsonProperty("mstate")
    public Optional<String> getMstate() {
        return mstate;
    }

    @JsonProperty("mzip")
    public Optional<String> getMzip() {
        return mzip;
    }

    @JsonProperty("orgId")
    public Optional<Long> getOrgId() {
        return orgId;
    }

    /**
     * @return List of Owners with at least a 25% ownership.
     */
    @JsonProperty("ownership")
    public Optional<List<ApplicationDataPayInOwnershipItem>> getOwnership() {
        return ownership;
    }

    /**
     * @return The business's phone number.
     */
    @JsonProperty("phonenumber")
    public String getPhonenumber() {
        return phonenumber;
    }

    /**
     * @return The business's processing region, either <code>US</code> or <code>CA</code>.
     */
    @JsonProperty("processingRegion")
    public String getProcessingRegion() {
        return processingRegion;
    }

    /**
     * @return Email address for the applicant. This is used to send the applicant a boarding link.
     */
    @JsonProperty("recipientEmail")
    public Optional<String> getRecipientEmail() {
        return recipientEmail;
    }

    @JsonProperty("recipientEmailNotification")
    public Optional<Boolean> getRecipientEmailNotification() {
        return recipientEmailNotification;
    }

    @JsonProperty("resumable")
    public Optional<Boolean> getResumable() {
        return resumable;
    }

    @JsonProperty("signer")
    public SignerDataRequest getSigner() {
        return signer;
    }

    @JsonProperty("startdate")
    public Optional<String> getStartdate() {
        return startdate;
    }

    @JsonProperty("taxFillName")
    public Optional<String> getTaxFillName() {
        return taxFillName;
    }

    /**
     * @return The associated boarding template's ID in Payabli. Either <code>templateId</code> or <code>boardingLinkId</code> are required.
     */
    @JsonProperty("templateId")
    public Optional<Long> getTemplateId() {
        return templateId;
    }

    @JsonProperty("ticketamt")
    public Optional<Double> getTicketamt() {
        return ticketamt;
    }

    @JsonProperty("website")
    public Optional<String> getWebsite() {
        return website;
    }

    @JsonProperty("whenCharged")
    public Whencharged getWhenCharged() {
        return whenCharged;
    }

    @JsonProperty("whenDelivered")
    public Whendelivered getWhenDelivered() {
        return whenDelivered;
    }

    @JsonProperty("whenProvided")
    public Whenprovided getWhenProvided() {
        return whenProvided;
    }

    @JsonProperty("whenRefunded")
    public Whenrefunded getWhenRefunded() {
        return whenRefunded;
    }

    @JsonProperty("additionalData")
    public Optional<String> getAdditionalData() {
        return additionalData;
    }

    @JsonProperty("RepCode")
    public Optional<String> getRepCode() {
        return repCode;
    }

    @JsonProperty("RepName")
    public Optional<String> getRepName() {
        return repName;
    }

    @JsonProperty("RepOffice")
    public Optional<String> getRepOffice() {
        return repOffice;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ApplicationDataPayIn && equalTo((ApplicationDataPayIn) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ApplicationDataPayIn other) {
        return services.equals(other.services)
                && annualRevenue.equals(other.annualRevenue)
                && averageBillSize.equals(other.averageBillSize)
                && averageMonthlyBill.equals(other.averageMonthlyBill)
                && avgmonthly.equals(other.avgmonthly)
                && baddress.equals(other.baddress)
                && baddress1.equals(other.baddress1)
                && bankData.equals(other.bankData)
                && bcity.equals(other.bcity)
                && bcountry.equals(other.bcountry)
                && binperson.equals(other.binperson)
                && binphone.equals(other.binphone)
                && binweb.equals(other.binweb)
                && boardingLinkId.equals(other.boardingLinkId)
                && bstate.equals(other.bstate)
                && bsummary.equals(other.bsummary)
                && btype.equals(other.btype)
                && bzip.equals(other.bzip)
                && contacts.equals(other.contacts)
                && creditLimit.equals(other.creditLimit)
                && dbaName.equals(other.dbaName)
                && ein.equals(other.ein)
                && externalpaypointId.equals(other.externalpaypointId)
                && faxnumber.equals(other.faxnumber)
                && highticketamt.equals(other.highticketamt)
                && legalName.equals(other.legalName)
                && license.equals(other.license)
                && licstate.equals(other.licstate)
                && maddress.equals(other.maddress)
                && maddress1.equals(other.maddress1)
                && mcc.equals(other.mcc)
                && mcity.equals(other.mcity)
                && mcountry.equals(other.mcountry)
                && mstate.equals(other.mstate)
                && mzip.equals(other.mzip)
                && orgId.equals(other.orgId)
                && ownership.equals(other.ownership)
                && phonenumber.equals(other.phonenumber)
                && processingRegion.equals(other.processingRegion)
                && recipientEmail.equals(other.recipientEmail)
                && recipientEmailNotification.equals(other.recipientEmailNotification)
                && resumable.equals(other.resumable)
                && signer.equals(other.signer)
                && startdate.equals(other.startdate)
                && taxFillName.equals(other.taxFillName)
                && templateId.equals(other.templateId)
                && ticketamt.equals(other.ticketamt)
                && website.equals(other.website)
                && whenCharged.equals(other.whenCharged)
                && whenDelivered.equals(other.whenDelivered)
                && whenProvided.equals(other.whenProvided)
                && whenRefunded.equals(other.whenRefunded)
                && additionalData.equals(other.additionalData)
                && repCode.equals(other.repCode)
                && repName.equals(other.repName)
                && repOffice.equals(other.repOffice);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.services,
                this.annualRevenue,
                this.averageBillSize,
                this.averageMonthlyBill,
                this.avgmonthly,
                this.baddress,
                this.baddress1,
                this.bankData,
                this.bcity,
                this.bcountry,
                this.binperson,
                this.binphone,
                this.binweb,
                this.boardingLinkId,
                this.bstate,
                this.bsummary,
                this.btype,
                this.bzip,
                this.contacts,
                this.creditLimit,
                this.dbaName,
                this.ein,
                this.externalpaypointId,
                this.faxnumber,
                this.highticketamt,
                this.legalName,
                this.license,
                this.licstate,
                this.maddress,
                this.maddress1,
                this.mcc,
                this.mcity,
                this.mcountry,
                this.mstate,
                this.mzip,
                this.orgId,
                this.ownership,
                this.phonenumber,
                this.processingRegion,
                this.recipientEmail,
                this.recipientEmailNotification,
                this.resumable,
                this.signer,
                this.startdate,
                this.taxFillName,
                this.templateId,
                this.ticketamt,
                this.website,
                this.whenCharged,
                this.whenDelivered,
                this.whenProvided,
                this.whenRefunded,
                this.additionalData,
                this.repCode,
                this.repName,
                this.repOffice);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ServicesStage builder() {
        return new Builder();
    }

    public interface ServicesStage {
        BankDataStage services(@NotNull ApplicationDataPayInServices services);

        Builder from(ApplicationDataPayIn other);
    }

    public interface BankDataStage {
        PhonenumberStage bankData(@NotNull ApplicationDataPayInBankData bankData);
    }

    public interface PhonenumberStage {
        /**
         * <p>The business's phone number.</p>
         */
        ProcessingRegionStage phonenumber(@NotNull String phonenumber);
    }

    public interface ProcessingRegionStage {
        /**
         * <p>The business's processing region, either <code>US</code> or <code>CA</code>.</p>
         */
        SignerStage processingRegion(@NotNull String processingRegion);
    }

    public interface SignerStage {
        WhenChargedStage signer(@NotNull SignerDataRequest signer);
    }

    public interface WhenChargedStage {
        WhenDeliveredStage whenCharged(@NotNull Whencharged whenCharged);
    }

    public interface WhenDeliveredStage {
        WhenProvidedStage whenDelivered(@NotNull Whendelivered whenDelivered);
    }

    public interface WhenProvidedStage {
        WhenRefundedStage whenProvided(@NotNull Whenprovided whenProvided);
    }

    public interface WhenRefundedStage {
        _FinalStage whenRefunded(@NotNull Whenrefunded whenRefunded);
    }

    public interface _FinalStage {
        ApplicationDataPayIn build();

        _FinalStage annualRevenue(Optional<Double> annualRevenue);

        _FinalStage annualRevenue(Double annualRevenue);

        _FinalStage averageBillSize(Optional<String> averageBillSize);

        _FinalStage averageBillSize(String averageBillSize);

        _FinalStage averageMonthlyBill(Optional<String> averageMonthlyBill);

        _FinalStage averageMonthlyBill(String averageMonthlyBill);

        _FinalStage avgmonthly(Optional<Double> avgmonthly);

        _FinalStage avgmonthly(Double avgmonthly);

        _FinalStage baddress(Optional<String> baddress);

        _FinalStage baddress(String baddress);

        _FinalStage baddress1(Optional<String> baddress1);

        _FinalStage baddress1(String baddress1);

        _FinalStage bcity(Optional<String> bcity);

        _FinalStage bcity(String bcity);

        _FinalStage bcountry(Optional<String> bcountry);

        _FinalStage bcountry(String bcountry);

        _FinalStage binperson(Optional<Integer> binperson);

        _FinalStage binperson(Integer binperson);

        _FinalStage binphone(Optional<Integer> binphone);

        _FinalStage binphone(Integer binphone);

        _FinalStage binweb(Optional<Integer> binweb);

        _FinalStage binweb(Integer binweb);

        /**
         * <p>Boarding link ID for the application. Either <code>templateId</code> or <code>boardingLinkId</code> are required.</p>
         */
        _FinalStage boardingLinkId(Optional<String> boardingLinkId);

        _FinalStage boardingLinkId(String boardingLinkId);

        _FinalStage bstate(Optional<String> bstate);

        _FinalStage bstate(String bstate);

        _FinalStage bsummary(Optional<String> bsummary);

        _FinalStage bsummary(String bsummary);

        _FinalStage btype(Optional<OwnType> btype);

        _FinalStage btype(OwnType btype);

        _FinalStage bzip(Optional<String> bzip);

        _FinalStage bzip(String bzip);

        /**
         * <p>List of contacts for the business.</p>
         */
        _FinalStage contacts(Optional<List<ApplicationDataPayInContactsItem>> contacts);

        _FinalStage contacts(List<ApplicationDataPayInContactsItem> contacts);

        /**
         * <p>The maximum amount of credit that our lending partner, has authorized to your business. It's the upper boundary on how much you can spend or owe on a credit account at any given time.</p>
         */
        _FinalStage creditLimit(Optional<String> creditLimit);

        _FinalStage creditLimit(String creditLimit);

        /**
         * <p>The alternate or common name that this business is doing business under usually referred to as a DBA name. Payabli strongly recommends including this information.</p>
         */
        _FinalStage dbaName(Optional<String> dbaName);

        _FinalStage dbaName(String dbaName);

        _FinalStage ein(Optional<String> ein);

        _FinalStage ein(String ein);

        _FinalStage externalpaypointId(Optional<String> externalpaypointId);

        _FinalStage externalpaypointId(String externalpaypointId);

        /**
         * <p>The business's fax number.</p>
         */
        _FinalStage faxnumber(Optional<String> faxnumber);

        _FinalStage faxnumber(String faxnumber);

        _FinalStage highticketamt(Optional<Double> highticketamt);

        _FinalStage highticketamt(Double highticketamt);

        _FinalStage legalName(Optional<String> legalName);

        _FinalStage legalName(String legalName);

        _FinalStage license(Optional<String> license);

        _FinalStage license(String license);

        _FinalStage licstate(Optional<String> licstate);

        _FinalStage licstate(String licstate);

        _FinalStage maddress(Optional<String> maddress);

        _FinalStage maddress(String maddress);

        _FinalStage maddress1(Optional<String> maddress1);

        _FinalStage maddress1(String maddress1);

        _FinalStage mcc(Optional<String> mcc);

        _FinalStage mcc(String mcc);

        _FinalStage mcity(Optional<String> mcity);

        _FinalStage mcity(String mcity);

        _FinalStage mcountry(Optional<String> mcountry);

        _FinalStage mcountry(String mcountry);

        _FinalStage mstate(Optional<String> mstate);

        _FinalStage mstate(String mstate);

        _FinalStage mzip(Optional<String> mzip);

        _FinalStage mzip(String mzip);

        _FinalStage orgId(Optional<Long> orgId);

        _FinalStage orgId(Long orgId);

        /**
         * <p>List of Owners with at least a 25% ownership.</p>
         */
        _FinalStage ownership(Optional<List<ApplicationDataPayInOwnershipItem>> ownership);

        _FinalStage ownership(List<ApplicationDataPayInOwnershipItem> ownership);

        /**
         * <p>Email address for the applicant. This is used to send the applicant a boarding link.</p>
         */
        _FinalStage recipientEmail(Optional<String> recipientEmail);

        _FinalStage recipientEmail(String recipientEmail);

        _FinalStage recipientEmailNotification(Optional<Boolean> recipientEmailNotification);

        _FinalStage recipientEmailNotification(Boolean recipientEmailNotification);

        _FinalStage resumable(Optional<Boolean> resumable);

        _FinalStage resumable(Boolean resumable);

        _FinalStage startdate(Optional<String> startdate);

        _FinalStage startdate(String startdate);

        _FinalStage taxFillName(Optional<String> taxFillName);

        _FinalStage taxFillName(String taxFillName);

        /**
         * <p>The associated boarding template's ID in Payabli. Either <code>templateId</code> or <code>boardingLinkId</code> are required.</p>
         */
        _FinalStage templateId(Optional<Long> templateId);

        _FinalStage templateId(Long templateId);

        _FinalStage ticketamt(Optional<Double> ticketamt);

        _FinalStage ticketamt(Double ticketamt);

        _FinalStage website(Optional<String> website);

        _FinalStage website(String website);

        _FinalStage additionalData(Optional<String> additionalData);

        _FinalStage additionalData(String additionalData);

        _FinalStage repCode(Optional<String> repCode);

        _FinalStage repCode(String repCode);

        _FinalStage repName(Optional<String> repName);

        _FinalStage repName(String repName);

        _FinalStage repOffice(Optional<String> repOffice);

        _FinalStage repOffice(String repOffice);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements ServicesStage,
                    BankDataStage,
                    PhonenumberStage,
                    ProcessingRegionStage,
                    SignerStage,
                    WhenChargedStage,
                    WhenDeliveredStage,
                    WhenProvidedStage,
                    WhenRefundedStage,
                    _FinalStage {
        private ApplicationDataPayInServices services;

        private ApplicationDataPayInBankData bankData;

        private String phonenumber;

        private String processingRegion;

        private SignerDataRequest signer;

        private Whencharged whenCharged;

        private Whendelivered whenDelivered;

        private Whenprovided whenProvided;

        private Whenrefunded whenRefunded;

        private Optional<String> repOffice = Optional.empty();

        private Optional<String> repName = Optional.empty();

        private Optional<String> repCode = Optional.empty();

        private Optional<String> additionalData = Optional.empty();

        private Optional<String> website = Optional.empty();

        private Optional<Double> ticketamt = Optional.empty();

        private Optional<Long> templateId = Optional.empty();

        private Optional<String> taxFillName = Optional.empty();

        private Optional<String> startdate = Optional.empty();

        private Optional<Boolean> resumable = Optional.empty();

        private Optional<Boolean> recipientEmailNotification = Optional.empty();

        private Optional<String> recipientEmail = Optional.empty();

        private Optional<List<ApplicationDataPayInOwnershipItem>> ownership = Optional.empty();

        private Optional<Long> orgId = Optional.empty();

        private Optional<String> mzip = Optional.empty();

        private Optional<String> mstate = Optional.empty();

        private Optional<String> mcountry = Optional.empty();

        private Optional<String> mcity = Optional.empty();

        private Optional<String> mcc = Optional.empty();

        private Optional<String> maddress1 = Optional.empty();

        private Optional<String> maddress = Optional.empty();

        private Optional<String> licstate = Optional.empty();

        private Optional<String> license = Optional.empty();

        private Optional<String> legalName = Optional.empty();

        private Optional<Double> highticketamt = Optional.empty();

        private Optional<String> faxnumber = Optional.empty();

        private Optional<String> externalpaypointId = Optional.empty();

        private Optional<String> ein = Optional.empty();

        private Optional<String> dbaName = Optional.empty();

        private Optional<String> creditLimit = Optional.empty();

        private Optional<List<ApplicationDataPayInContactsItem>> contacts = Optional.empty();

        private Optional<String> bzip = Optional.empty();

        private Optional<OwnType> btype = Optional.empty();

        private Optional<String> bsummary = Optional.empty();

        private Optional<String> bstate = Optional.empty();

        private Optional<String> boardingLinkId = Optional.empty();

        private Optional<Integer> binweb = Optional.empty();

        private Optional<Integer> binphone = Optional.empty();

        private Optional<Integer> binperson = Optional.empty();

        private Optional<String> bcountry = Optional.empty();

        private Optional<String> bcity = Optional.empty();

        private Optional<String> baddress1 = Optional.empty();

        private Optional<String> baddress = Optional.empty();

        private Optional<Double> avgmonthly = Optional.empty();

        private Optional<String> averageMonthlyBill = Optional.empty();

        private Optional<String> averageBillSize = Optional.empty();

        private Optional<Double> annualRevenue = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ApplicationDataPayIn other) {
            services(other.getServices());
            annualRevenue(other.getAnnualRevenue());
            averageBillSize(other.getAverageBillSize());
            averageMonthlyBill(other.getAverageMonthlyBill());
            avgmonthly(other.getAvgmonthly());
            baddress(other.getBaddress());
            baddress1(other.getBaddress1());
            bankData(other.getBankData());
            bcity(other.getBcity());
            bcountry(other.getBcountry());
            binperson(other.getBinperson());
            binphone(other.getBinphone());
            binweb(other.getBinweb());
            boardingLinkId(other.getBoardingLinkId());
            bstate(other.getBstate());
            bsummary(other.getBsummary());
            btype(other.getBtype());
            bzip(other.getBzip());
            contacts(other.getContacts());
            creditLimit(other.getCreditLimit());
            dbaName(other.getDbaName());
            ein(other.getEin());
            externalpaypointId(other.getExternalpaypointId());
            faxnumber(other.getFaxnumber());
            highticketamt(other.getHighticketamt());
            legalName(other.getLegalName());
            license(other.getLicense());
            licstate(other.getLicstate());
            maddress(other.getMaddress());
            maddress1(other.getMaddress1());
            mcc(other.getMcc());
            mcity(other.getMcity());
            mcountry(other.getMcountry());
            mstate(other.getMstate());
            mzip(other.getMzip());
            orgId(other.getOrgId());
            ownership(other.getOwnership());
            phonenumber(other.getPhonenumber());
            processingRegion(other.getProcessingRegion());
            recipientEmail(other.getRecipientEmail());
            recipientEmailNotification(other.getRecipientEmailNotification());
            resumable(other.getResumable());
            signer(other.getSigner());
            startdate(other.getStartdate());
            taxFillName(other.getTaxFillName());
            templateId(other.getTemplateId());
            ticketamt(other.getTicketamt());
            website(other.getWebsite());
            whenCharged(other.getWhenCharged());
            whenDelivered(other.getWhenDelivered());
            whenProvided(other.getWhenProvided());
            whenRefunded(other.getWhenRefunded());
            additionalData(other.getAdditionalData());
            repCode(other.getRepCode());
            repName(other.getRepName());
            repOffice(other.getRepOffice());
            return this;
        }

        @java.lang.Override
        @JsonSetter("services")
        public BankDataStage services(@NotNull ApplicationDataPayInServices services) {
            this.services = Objects.requireNonNull(services, "services must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("bankData")
        public PhonenumberStage bankData(@NotNull ApplicationDataPayInBankData bankData) {
            this.bankData = Objects.requireNonNull(bankData, "bankData must not be null");
            return this;
        }

        /**
         * <p>The business's phone number.</p>
         * <p>The business's phone number.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("phonenumber")
        public ProcessingRegionStage phonenumber(@NotNull String phonenumber) {
            this.phonenumber = Objects.requireNonNull(phonenumber, "phonenumber must not be null");
            return this;
        }

        /**
         * <p>The business's processing region, either <code>US</code> or <code>CA</code>.</p>
         * <p>The business's processing region, either <code>US</code> or <code>CA</code>.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("processingRegion")
        public SignerStage processingRegion(@NotNull String processingRegion) {
            this.processingRegion = Objects.requireNonNull(processingRegion, "processingRegion must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("signer")
        public WhenChargedStage signer(@NotNull SignerDataRequest signer) {
            this.signer = Objects.requireNonNull(signer, "signer must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("whenCharged")
        public WhenDeliveredStage whenCharged(@NotNull Whencharged whenCharged) {
            this.whenCharged = Objects.requireNonNull(whenCharged, "whenCharged must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("whenDelivered")
        public WhenProvidedStage whenDelivered(@NotNull Whendelivered whenDelivered) {
            this.whenDelivered = Objects.requireNonNull(whenDelivered, "whenDelivered must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("whenProvided")
        public WhenRefundedStage whenProvided(@NotNull Whenprovided whenProvided) {
            this.whenProvided = Objects.requireNonNull(whenProvided, "whenProvided must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("whenRefunded")
        public _FinalStage whenRefunded(@NotNull Whenrefunded whenRefunded) {
            this.whenRefunded = Objects.requireNonNull(whenRefunded, "whenRefunded must not be null");
            return this;
        }

        @java.lang.Override
        public _FinalStage repOffice(String repOffice) {
            this.repOffice = Optional.ofNullable(repOffice);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "RepOffice", nulls = Nulls.SKIP)
        public _FinalStage repOffice(Optional<String> repOffice) {
            this.repOffice = repOffice;
            return this;
        }

        @java.lang.Override
        public _FinalStage repName(String repName) {
            this.repName = Optional.ofNullable(repName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "RepName", nulls = Nulls.SKIP)
        public _FinalStage repName(Optional<String> repName) {
            this.repName = repName;
            return this;
        }

        @java.lang.Override
        public _FinalStage repCode(String repCode) {
            this.repCode = Optional.ofNullable(repCode);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "RepCode", nulls = Nulls.SKIP)
        public _FinalStage repCode(Optional<String> repCode) {
            this.repCode = repCode;
            return this;
        }

        @java.lang.Override
        public _FinalStage additionalData(String additionalData) {
            this.additionalData = Optional.ofNullable(additionalData);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "additionalData", nulls = Nulls.SKIP)
        public _FinalStage additionalData(Optional<String> additionalData) {
            this.additionalData = additionalData;
            return this;
        }

        @java.lang.Override
        public _FinalStage website(String website) {
            this.website = Optional.ofNullable(website);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "website", nulls = Nulls.SKIP)
        public _FinalStage website(Optional<String> website) {
            this.website = website;
            return this;
        }

        @java.lang.Override
        public _FinalStage ticketamt(Double ticketamt) {
            this.ticketamt = Optional.ofNullable(ticketamt);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ticketamt", nulls = Nulls.SKIP)
        public _FinalStage ticketamt(Optional<Double> ticketamt) {
            this.ticketamt = ticketamt;
            return this;
        }

        /**
         * <p>The associated boarding template's ID in Payabli. Either <code>templateId</code> or <code>boardingLinkId</code> are required.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage templateId(Long templateId) {
            this.templateId = Optional.ofNullable(templateId);
            return this;
        }

        /**
         * <p>The associated boarding template's ID in Payabli. Either <code>templateId</code> or <code>boardingLinkId</code> are required.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "templateId", nulls = Nulls.SKIP)
        public _FinalStage templateId(Optional<Long> templateId) {
            this.templateId = templateId;
            return this;
        }

        @java.lang.Override
        public _FinalStage taxFillName(String taxFillName) {
            this.taxFillName = Optional.ofNullable(taxFillName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "taxFillName", nulls = Nulls.SKIP)
        public _FinalStage taxFillName(Optional<String> taxFillName) {
            this.taxFillName = taxFillName;
            return this;
        }

        @java.lang.Override
        public _FinalStage startdate(String startdate) {
            this.startdate = Optional.ofNullable(startdate);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "startdate", nulls = Nulls.SKIP)
        public _FinalStage startdate(Optional<String> startdate) {
            this.startdate = startdate;
            return this;
        }

        @java.lang.Override
        public _FinalStage resumable(Boolean resumable) {
            this.resumable = Optional.ofNullable(resumable);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "resumable", nulls = Nulls.SKIP)
        public _FinalStage resumable(Optional<Boolean> resumable) {
            this.resumable = resumable;
            return this;
        }

        @java.lang.Override
        public _FinalStage recipientEmailNotification(Boolean recipientEmailNotification) {
            this.recipientEmailNotification = Optional.ofNullable(recipientEmailNotification);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "recipientEmailNotification", nulls = Nulls.SKIP)
        public _FinalStage recipientEmailNotification(Optional<Boolean> recipientEmailNotification) {
            this.recipientEmailNotification = recipientEmailNotification;
            return this;
        }

        /**
         * <p>Email address for the applicant. This is used to send the applicant a boarding link.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage recipientEmail(String recipientEmail) {
            this.recipientEmail = Optional.ofNullable(recipientEmail);
            return this;
        }

        /**
         * <p>Email address for the applicant. This is used to send the applicant a boarding link.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "recipientEmail", nulls = Nulls.SKIP)
        public _FinalStage recipientEmail(Optional<String> recipientEmail) {
            this.recipientEmail = recipientEmail;
            return this;
        }

        /**
         * <p>List of Owners with at least a 25% ownership.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage ownership(List<ApplicationDataPayInOwnershipItem> ownership) {
            this.ownership = Optional.ofNullable(ownership);
            return this;
        }

        /**
         * <p>List of Owners with at least a 25% ownership.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "ownership", nulls = Nulls.SKIP)
        public _FinalStage ownership(Optional<List<ApplicationDataPayInOwnershipItem>> ownership) {
            this.ownership = ownership;
            return this;
        }

        @java.lang.Override
        public _FinalStage orgId(Long orgId) {
            this.orgId = Optional.ofNullable(orgId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "orgId", nulls = Nulls.SKIP)
        public _FinalStage orgId(Optional<Long> orgId) {
            this.orgId = orgId;
            return this;
        }

        @java.lang.Override
        public _FinalStage mzip(String mzip) {
            this.mzip = Optional.ofNullable(mzip);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "mzip", nulls = Nulls.SKIP)
        public _FinalStage mzip(Optional<String> mzip) {
            this.mzip = mzip;
            return this;
        }

        @java.lang.Override
        public _FinalStage mstate(String mstate) {
            this.mstate = Optional.ofNullable(mstate);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "mstate", nulls = Nulls.SKIP)
        public _FinalStage mstate(Optional<String> mstate) {
            this.mstate = mstate;
            return this;
        }

        @java.lang.Override
        public _FinalStage mcountry(String mcountry) {
            this.mcountry = Optional.ofNullable(mcountry);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "mcountry", nulls = Nulls.SKIP)
        public _FinalStage mcountry(Optional<String> mcountry) {
            this.mcountry = mcountry;
            return this;
        }

        @java.lang.Override
        public _FinalStage mcity(String mcity) {
            this.mcity = Optional.ofNullable(mcity);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "mcity", nulls = Nulls.SKIP)
        public _FinalStage mcity(Optional<String> mcity) {
            this.mcity = mcity;
            return this;
        }

        @java.lang.Override
        public _FinalStage mcc(String mcc) {
            this.mcc = Optional.ofNullable(mcc);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "mcc", nulls = Nulls.SKIP)
        public _FinalStage mcc(Optional<String> mcc) {
            this.mcc = mcc;
            return this;
        }

        @java.lang.Override
        public _FinalStage maddress1(String maddress1) {
            this.maddress1 = Optional.ofNullable(maddress1);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "maddress1", nulls = Nulls.SKIP)
        public _FinalStage maddress1(Optional<String> maddress1) {
            this.maddress1 = maddress1;
            return this;
        }

        @java.lang.Override
        public _FinalStage maddress(String maddress) {
            this.maddress = Optional.ofNullable(maddress);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "maddress", nulls = Nulls.SKIP)
        public _FinalStage maddress(Optional<String> maddress) {
            this.maddress = maddress;
            return this;
        }

        @java.lang.Override
        public _FinalStage licstate(String licstate) {
            this.licstate = Optional.ofNullable(licstate);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "licstate", nulls = Nulls.SKIP)
        public _FinalStage licstate(Optional<String> licstate) {
            this.licstate = licstate;
            return this;
        }

        @java.lang.Override
        public _FinalStage license(String license) {
            this.license = Optional.ofNullable(license);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "license", nulls = Nulls.SKIP)
        public _FinalStage license(Optional<String> license) {
            this.license = license;
            return this;
        }

        @java.lang.Override
        public _FinalStage legalName(String legalName) {
            this.legalName = Optional.ofNullable(legalName);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "legalName", nulls = Nulls.SKIP)
        public _FinalStage legalName(Optional<String> legalName) {
            this.legalName = legalName;
            return this;
        }

        @java.lang.Override
        public _FinalStage highticketamt(Double highticketamt) {
            this.highticketamt = Optional.ofNullable(highticketamt);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "highticketamt", nulls = Nulls.SKIP)
        public _FinalStage highticketamt(Optional<Double> highticketamt) {
            this.highticketamt = highticketamt;
            return this;
        }

        /**
         * <p>The business's fax number.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage faxnumber(String faxnumber) {
            this.faxnumber = Optional.ofNullable(faxnumber);
            return this;
        }

        /**
         * <p>The business's fax number.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "faxnumber", nulls = Nulls.SKIP)
        public _FinalStage faxnumber(Optional<String> faxnumber) {
            this.faxnumber = faxnumber;
            return this;
        }

        @java.lang.Override
        public _FinalStage externalpaypointId(String externalpaypointId) {
            this.externalpaypointId = Optional.ofNullable(externalpaypointId);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "externalpaypointID", nulls = Nulls.SKIP)
        public _FinalStage externalpaypointId(Optional<String> externalpaypointId) {
            this.externalpaypointId = externalpaypointId;
            return this;
        }

        @java.lang.Override
        public _FinalStage ein(String ein) {
            this.ein = Optional.ofNullable(ein);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "ein", nulls = Nulls.SKIP)
        public _FinalStage ein(Optional<String> ein) {
            this.ein = ein;
            return this;
        }

        /**
         * <p>The alternate or common name that this business is doing business under usually referred to as a DBA name. Payabli strongly recommends including this information.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage dbaName(String dbaName) {
            this.dbaName = Optional.ofNullable(dbaName);
            return this;
        }

        /**
         * <p>The alternate or common name that this business is doing business under usually referred to as a DBA name. Payabli strongly recommends including this information.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "dbaName", nulls = Nulls.SKIP)
        public _FinalStage dbaName(Optional<String> dbaName) {
            this.dbaName = dbaName;
            return this;
        }

        /**
         * <p>The maximum amount of credit that our lending partner, has authorized to your business. It's the upper boundary on how much you can spend or owe on a credit account at any given time.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage creditLimit(String creditLimit) {
            this.creditLimit = Optional.ofNullable(creditLimit);
            return this;
        }

        /**
         * <p>The maximum amount of credit that our lending partner, has authorized to your business. It's the upper boundary on how much you can spend or owe on a credit account at any given time.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "creditLimit", nulls = Nulls.SKIP)
        public _FinalStage creditLimit(Optional<String> creditLimit) {
            this.creditLimit = creditLimit;
            return this;
        }

        /**
         * <p>List of contacts for the business.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage contacts(List<ApplicationDataPayInContactsItem> contacts) {
            this.contacts = Optional.ofNullable(contacts);
            return this;
        }

        /**
         * <p>List of contacts for the business.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "contacts", nulls = Nulls.SKIP)
        public _FinalStage contacts(Optional<List<ApplicationDataPayInContactsItem>> contacts) {
            this.contacts = contacts;
            return this;
        }

        @java.lang.Override
        public _FinalStage bzip(String bzip) {
            this.bzip = Optional.ofNullable(bzip);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "bzip", nulls = Nulls.SKIP)
        public _FinalStage bzip(Optional<String> bzip) {
            this.bzip = bzip;
            return this;
        }

        @java.lang.Override
        public _FinalStage btype(OwnType btype) {
            this.btype = Optional.ofNullable(btype);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "btype", nulls = Nulls.SKIP)
        public _FinalStage btype(Optional<OwnType> btype) {
            this.btype = btype;
            return this;
        }

        @java.lang.Override
        public _FinalStage bsummary(String bsummary) {
            this.bsummary = Optional.ofNullable(bsummary);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "bsummary", nulls = Nulls.SKIP)
        public _FinalStage bsummary(Optional<String> bsummary) {
            this.bsummary = bsummary;
            return this;
        }

        @java.lang.Override
        public _FinalStage bstate(String bstate) {
            this.bstate = Optional.ofNullable(bstate);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "bstate", nulls = Nulls.SKIP)
        public _FinalStage bstate(Optional<String> bstate) {
            this.bstate = bstate;
            return this;
        }

        /**
         * <p>Boarding link ID for the application. Either <code>templateId</code> or <code>boardingLinkId</code> are required.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage boardingLinkId(String boardingLinkId) {
            this.boardingLinkId = Optional.ofNullable(boardingLinkId);
            return this;
        }

        /**
         * <p>Boarding link ID for the application. Either <code>templateId</code> or <code>boardingLinkId</code> are required.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "boardingLinkId", nulls = Nulls.SKIP)
        public _FinalStage boardingLinkId(Optional<String> boardingLinkId) {
            this.boardingLinkId = boardingLinkId;
            return this;
        }

        @java.lang.Override
        public _FinalStage binweb(Integer binweb) {
            this.binweb = Optional.ofNullable(binweb);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "binweb", nulls = Nulls.SKIP)
        public _FinalStage binweb(Optional<Integer> binweb) {
            this.binweb = binweb;
            return this;
        }

        @java.lang.Override
        public _FinalStage binphone(Integer binphone) {
            this.binphone = Optional.ofNullable(binphone);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "binphone", nulls = Nulls.SKIP)
        public _FinalStage binphone(Optional<Integer> binphone) {
            this.binphone = binphone;
            return this;
        }

        @java.lang.Override
        public _FinalStage binperson(Integer binperson) {
            this.binperson = Optional.ofNullable(binperson);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "binperson", nulls = Nulls.SKIP)
        public _FinalStage binperson(Optional<Integer> binperson) {
            this.binperson = binperson;
            return this;
        }

        @java.lang.Override
        public _FinalStage bcountry(String bcountry) {
            this.bcountry = Optional.ofNullable(bcountry);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "bcountry", nulls = Nulls.SKIP)
        public _FinalStage bcountry(Optional<String> bcountry) {
            this.bcountry = bcountry;
            return this;
        }

        @java.lang.Override
        public _FinalStage bcity(String bcity) {
            this.bcity = Optional.ofNullable(bcity);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "bcity", nulls = Nulls.SKIP)
        public _FinalStage bcity(Optional<String> bcity) {
            this.bcity = bcity;
            return this;
        }

        @java.lang.Override
        public _FinalStage baddress1(String baddress1) {
            this.baddress1 = Optional.ofNullable(baddress1);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "baddress1", nulls = Nulls.SKIP)
        public _FinalStage baddress1(Optional<String> baddress1) {
            this.baddress1 = baddress1;
            return this;
        }

        @java.lang.Override
        public _FinalStage baddress(String baddress) {
            this.baddress = Optional.ofNullable(baddress);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "baddress", nulls = Nulls.SKIP)
        public _FinalStage baddress(Optional<String> baddress) {
            this.baddress = baddress;
            return this;
        }

        @java.lang.Override
        public _FinalStage avgmonthly(Double avgmonthly) {
            this.avgmonthly = Optional.ofNullable(avgmonthly);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "avgmonthly", nulls = Nulls.SKIP)
        public _FinalStage avgmonthly(Optional<Double> avgmonthly) {
            this.avgmonthly = avgmonthly;
            return this;
        }

        @java.lang.Override
        public _FinalStage averageMonthlyBill(String averageMonthlyBill) {
            this.averageMonthlyBill = Optional.ofNullable(averageMonthlyBill);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "averageMonthlyBill", nulls = Nulls.SKIP)
        public _FinalStage averageMonthlyBill(Optional<String> averageMonthlyBill) {
            this.averageMonthlyBill = averageMonthlyBill;
            return this;
        }

        @java.lang.Override
        public _FinalStage averageBillSize(String averageBillSize) {
            this.averageBillSize = Optional.ofNullable(averageBillSize);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "averageBillSize", nulls = Nulls.SKIP)
        public _FinalStage averageBillSize(Optional<String> averageBillSize) {
            this.averageBillSize = averageBillSize;
            return this;
        }

        @java.lang.Override
        public _FinalStage annualRevenue(Double annualRevenue) {
            this.annualRevenue = Optional.ofNullable(annualRevenue);
            return this;
        }

        @java.lang.Override
        @JsonSetter(value = "annualRevenue", nulls = Nulls.SKIP)
        public _FinalStage annualRevenue(Optional<Double> annualRevenue) {
            this.annualRevenue = annualRevenue;
            return this;
        }

        @java.lang.Override
        public ApplicationDataPayIn build() {
            return new ApplicationDataPayIn(
                    services,
                    annualRevenue,
                    averageBillSize,
                    averageMonthlyBill,
                    avgmonthly,
                    baddress,
                    baddress1,
                    bankData,
                    bcity,
                    bcountry,
                    binperson,
                    binphone,
                    binweb,
                    boardingLinkId,
                    bstate,
                    bsummary,
                    btype,
                    bzip,
                    contacts,
                    creditLimit,
                    dbaName,
                    ein,
                    externalpaypointId,
                    faxnumber,
                    highticketamt,
                    legalName,
                    license,
                    licstate,
                    maddress,
                    maddress1,
                    mcc,
                    mcity,
                    mcountry,
                    mstate,
                    mzip,
                    orgId,
                    ownership,
                    phonenumber,
                    processingRegion,
                    recipientEmail,
                    recipientEmailNotification,
                    resumable,
                    signer,
                    startdate,
                    taxFillName,
                    templateId,
                    ticketamt,
                    website,
                    whenCharged,
                    whenDelivered,
                    whenProvided,
                    whenRefunded,
                    additionalData,
                    repCode,
                    repName,
                    repOffice,
                    additionalProperties);
        }
    }
}
