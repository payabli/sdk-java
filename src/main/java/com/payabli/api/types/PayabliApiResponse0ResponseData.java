/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = PayabliApiResponse0ResponseData.Builder.class)
public final class PayabliApiResponse0ResponseData {
    private final Optional<String> authCode;

    private final Optional<String> avsResponseText;

    private final Optional<Long> customerId;

    private final Optional<String> cvvResponseText;

    private final Optional<String> methodReferenceId;

    private final Optional<String> referenceId;

    private final Optional<Integer> resultCode;

    private final Optional<String> resultText;

    private final Map<String, Object> additionalProperties;

    private PayabliApiResponse0ResponseData(
            Optional<String> authCode,
            Optional<String> avsResponseText,
            Optional<Long> customerId,
            Optional<String> cvvResponseText,
            Optional<String> methodReferenceId,
            Optional<String> referenceId,
            Optional<Integer> resultCode,
            Optional<String> resultText,
            Map<String, Object> additionalProperties) {
        this.authCode = authCode;
        this.avsResponseText = avsResponseText;
        this.customerId = customerId;
        this.cvvResponseText = cvvResponseText;
        this.methodReferenceId = methodReferenceId;
        this.referenceId = referenceId;
        this.resultCode = resultCode;
        this.resultText = resultText;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("AuthCode")
    public Optional<String> getAuthCode() {
        return authCode;
    }

    @JsonProperty("avsResponseText")
    public Optional<String> getAvsResponseText() {
        return avsResponseText;
    }

    @JsonProperty("CustomerId")
    public Optional<Long> getCustomerId() {
        return customerId;
    }

    @JsonProperty("cvvResponseText")
    public Optional<String> getCvvResponseText() {
        return cvvResponseText;
    }

    @JsonProperty("methodReferenceId")
    public Optional<String> getMethodReferenceId() {
        return methodReferenceId;
    }

    @JsonProperty("ReferenceId")
    public Optional<String> getReferenceId() {
        return referenceId;
    }

    @JsonProperty("ResultCode")
    public Optional<Integer> getResultCode() {
        return resultCode;
    }

    @JsonProperty("ResultText")
    public Optional<String> getResultText() {
        return resultText;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof PayabliApiResponse0ResponseData && equalTo((PayabliApiResponse0ResponseData) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(PayabliApiResponse0ResponseData other) {
        return authCode.equals(other.authCode)
                && avsResponseText.equals(other.avsResponseText)
                && customerId.equals(other.customerId)
                && cvvResponseText.equals(other.cvvResponseText)
                && methodReferenceId.equals(other.methodReferenceId)
                && referenceId.equals(other.referenceId)
                && resultCode.equals(other.resultCode)
                && resultText.equals(other.resultText);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.authCode,
                this.avsResponseText,
                this.customerId,
                this.cvvResponseText,
                this.methodReferenceId,
                this.referenceId,
                this.resultCode,
                this.resultText);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> authCode = Optional.empty();

        private Optional<String> avsResponseText = Optional.empty();

        private Optional<Long> customerId = Optional.empty();

        private Optional<String> cvvResponseText = Optional.empty();

        private Optional<String> methodReferenceId = Optional.empty();

        private Optional<String> referenceId = Optional.empty();

        private Optional<Integer> resultCode = Optional.empty();

        private Optional<String> resultText = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(PayabliApiResponse0ResponseData other) {
            authCode(other.getAuthCode());
            avsResponseText(other.getAvsResponseText());
            customerId(other.getCustomerId());
            cvvResponseText(other.getCvvResponseText());
            methodReferenceId(other.getMethodReferenceId());
            referenceId(other.getReferenceId());
            resultCode(other.getResultCode());
            resultText(other.getResultText());
            return this;
        }

        @JsonSetter(value = "AuthCode", nulls = Nulls.SKIP)
        public Builder authCode(Optional<String> authCode) {
            this.authCode = authCode;
            return this;
        }

        public Builder authCode(String authCode) {
            this.authCode = Optional.ofNullable(authCode);
            return this;
        }

        @JsonSetter(value = "avsResponseText", nulls = Nulls.SKIP)
        public Builder avsResponseText(Optional<String> avsResponseText) {
            this.avsResponseText = avsResponseText;
            return this;
        }

        public Builder avsResponseText(String avsResponseText) {
            this.avsResponseText = Optional.ofNullable(avsResponseText);
            return this;
        }

        @JsonSetter(value = "CustomerId", nulls = Nulls.SKIP)
        public Builder customerId(Optional<Long> customerId) {
            this.customerId = customerId;
            return this;
        }

        public Builder customerId(Long customerId) {
            this.customerId = Optional.ofNullable(customerId);
            return this;
        }

        @JsonSetter(value = "cvvResponseText", nulls = Nulls.SKIP)
        public Builder cvvResponseText(Optional<String> cvvResponseText) {
            this.cvvResponseText = cvvResponseText;
            return this;
        }

        public Builder cvvResponseText(String cvvResponseText) {
            this.cvvResponseText = Optional.ofNullable(cvvResponseText);
            return this;
        }

        @JsonSetter(value = "methodReferenceId", nulls = Nulls.SKIP)
        public Builder methodReferenceId(Optional<String> methodReferenceId) {
            this.methodReferenceId = methodReferenceId;
            return this;
        }

        public Builder methodReferenceId(String methodReferenceId) {
            this.methodReferenceId = Optional.ofNullable(methodReferenceId);
            return this;
        }

        @JsonSetter(value = "ReferenceId", nulls = Nulls.SKIP)
        public Builder referenceId(Optional<String> referenceId) {
            this.referenceId = referenceId;
            return this;
        }

        public Builder referenceId(String referenceId) {
            this.referenceId = Optional.ofNullable(referenceId);
            return this;
        }

        @JsonSetter(value = "ResultCode", nulls = Nulls.SKIP)
        public Builder resultCode(Optional<Integer> resultCode) {
            this.resultCode = resultCode;
            return this;
        }

        public Builder resultCode(Integer resultCode) {
            this.resultCode = Optional.ofNullable(resultCode);
            return this;
        }

        @JsonSetter(value = "ResultText", nulls = Nulls.SKIP)
        public Builder resultText(Optional<String> resultText) {
            this.resultText = resultText;
            return this;
        }

        public Builder resultText(String resultText) {
            this.resultText = Optional.ofNullable(resultText);
            return this;
        }

        public PayabliApiResponse0ResponseData build() {
            return new PayabliApiResponse0ResponseData(
                    authCode,
                    avsResponseText,
                    customerId,
                    cvvResponseText,
                    methodReferenceId,
                    referenceId,
                    resultCode,
                    resultText,
                    additionalProperties);
        }
    }
}
