/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = MethodElementSettingsApplePay.Builder.class)
public final class MethodElementSettingsApplePay {
    private final Optional<MethodElementSettingsApplePayButtonStyle> buttonStyle;

    private final Optional<MethodElementSettingsApplePayButtonType> buttonType;

    private final Optional<MethodElementSettingsApplePayLanguage> language;

    private final Map<String, Object> additionalProperties;

    private MethodElementSettingsApplePay(
            Optional<MethodElementSettingsApplePayButtonStyle> buttonStyle,
            Optional<MethodElementSettingsApplePayButtonType> buttonType,
            Optional<MethodElementSettingsApplePayLanguage> language,
            Map<String, Object> additionalProperties) {
        this.buttonStyle = buttonStyle;
        this.buttonType = buttonType;
        this.language = language;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The Apple Pay button style. See <a href="/developers/developer-guides/hosted-payment-page-apple-pay#param-applepay-button-style">Apple Pay Button Style</a> for more information.
     */
    @JsonProperty("buttonStyle")
    public Optional<MethodElementSettingsApplePayButtonStyle> getButtonStyle() {
        return buttonStyle;
    }

    /**
     * @return The text on Apple Pay button. See <a href="/developers/developer-guides/hosted-payment-page-apple-pay#param-applepay-button-type">Apple Pay Button Type</a> for more information.
     */
    @JsonProperty("buttonType")
    public Optional<MethodElementSettingsApplePayButtonType> getButtonType() {
        return buttonType;
    }

    /**
     * @return The Apple Pay button locale. See <a href="/developers/developer-guides/hosted-payment-page-apple-pay#param-applepay-language">Apple Pay Button Language</a> for more information.
     */
    @JsonProperty("language")
    public Optional<MethodElementSettingsApplePayLanguage> getLanguage() {
        return language;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof MethodElementSettingsApplePay && equalTo((MethodElementSettingsApplePay) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(MethodElementSettingsApplePay other) {
        return buttonStyle.equals(other.buttonStyle)
                && buttonType.equals(other.buttonType)
                && language.equals(other.language);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.buttonStyle, this.buttonType, this.language);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<MethodElementSettingsApplePayButtonStyle> buttonStyle = Optional.empty();

        private Optional<MethodElementSettingsApplePayButtonType> buttonType = Optional.empty();

        private Optional<MethodElementSettingsApplePayLanguage> language = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(MethodElementSettingsApplePay other) {
            buttonStyle(other.getButtonStyle());
            buttonType(other.getButtonType());
            language(other.getLanguage());
            return this;
        }

        /**
         * <p>The Apple Pay button style. See <a href="/developers/developer-guides/hosted-payment-page-apple-pay#param-applepay-button-style">Apple Pay Button Style</a> for more information.</p>
         */
        @JsonSetter(value = "buttonStyle", nulls = Nulls.SKIP)
        public Builder buttonStyle(Optional<MethodElementSettingsApplePayButtonStyle> buttonStyle) {
            this.buttonStyle = buttonStyle;
            return this;
        }

        public Builder buttonStyle(MethodElementSettingsApplePayButtonStyle buttonStyle) {
            this.buttonStyle = Optional.ofNullable(buttonStyle);
            return this;
        }

        /**
         * <p>The text on Apple Pay button. See <a href="/developers/developer-guides/hosted-payment-page-apple-pay#param-applepay-button-type">Apple Pay Button Type</a> for more information.</p>
         */
        @JsonSetter(value = "buttonType", nulls = Nulls.SKIP)
        public Builder buttonType(Optional<MethodElementSettingsApplePayButtonType> buttonType) {
            this.buttonType = buttonType;
            return this;
        }

        public Builder buttonType(MethodElementSettingsApplePayButtonType buttonType) {
            this.buttonType = Optional.ofNullable(buttonType);
            return this;
        }

        /**
         * <p>The Apple Pay button locale. See <a href="/developers/developer-guides/hosted-payment-page-apple-pay#param-applepay-language">Apple Pay Button Language</a> for more information.</p>
         */
        @JsonSetter(value = "language", nulls = Nulls.SKIP)
        public Builder language(Optional<MethodElementSettingsApplePayLanguage> language) {
            this.language = language;
            return this;
        }

        public Builder language(MethodElementSettingsApplePayLanguage language) {
            this.language = Optional.ofNullable(language);
            return this;
        }

        public MethodElementSettingsApplePay build() {
            return new MethodElementSettingsApplePay(buttonStyle, buttonType, language, additionalProperties);
        }
    }
}
