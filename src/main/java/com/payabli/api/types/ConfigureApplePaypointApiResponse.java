/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ConfigureApplePaypointApiResponse.Builder.class)
public final class ConfigureApplePaypointApiResponse {
    private final Optional<Boolean> isSuccess;

    private final Optional<String> pageIdentifier;

    private final Optional<Integer> responseCode;

    private final Optional<ApplePayPaypointRegistrationData> responseData;

    private final Optional<String> responseText;

    private final Optional<Long> roomId;

    private final Map<String, Object> additionalProperties;

    private ConfigureApplePaypointApiResponse(
            Optional<Boolean> isSuccess,
            Optional<String> pageIdentifier,
            Optional<Integer> responseCode,
            Optional<ApplePayPaypointRegistrationData> responseData,
            Optional<String> responseText,
            Optional<Long> roomId,
            Map<String, Object> additionalProperties) {
        this.isSuccess = isSuccess;
        this.pageIdentifier = pageIdentifier;
        this.responseCode = responseCode;
        this.responseData = responseData;
        this.responseText = responseText;
        this.roomId = roomId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("isSuccess")
    public Optional<Boolean> getIsSuccess() {
        return isSuccess;
    }

    @JsonProperty("pageIdentifier")
    public Optional<String> getPageIdentifier() {
        return pageIdentifier;
    }

    @JsonProperty("responseCode")
    public Optional<Integer> getResponseCode() {
        return responseCode;
    }

    @JsonProperty("responseData")
    public Optional<ApplePayPaypointRegistrationData> getResponseData() {
        return responseData;
    }

    @JsonProperty("responseText")
    public Optional<String> getResponseText() {
        return responseText;
    }

    /**
     * @return Field not in use on this endpoint
     */
    @JsonProperty("roomId")
    public Optional<Long> getRoomId() {
        return roomId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ConfigureApplePaypointApiResponse && equalTo((ConfigureApplePaypointApiResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ConfigureApplePaypointApiResponse other) {
        return isSuccess.equals(other.isSuccess)
                && pageIdentifier.equals(other.pageIdentifier)
                && responseCode.equals(other.responseCode)
                && responseData.equals(other.responseData)
                && responseText.equals(other.responseText)
                && roomId.equals(other.roomId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.isSuccess,
                this.pageIdentifier,
                this.responseCode,
                this.responseData,
                this.responseText,
                this.roomId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Boolean> isSuccess = Optional.empty();

        private Optional<String> pageIdentifier = Optional.empty();

        private Optional<Integer> responseCode = Optional.empty();

        private Optional<ApplePayPaypointRegistrationData> responseData = Optional.empty();

        private Optional<String> responseText = Optional.empty();

        private Optional<Long> roomId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(ConfigureApplePaypointApiResponse other) {
            isSuccess(other.getIsSuccess());
            pageIdentifier(other.getPageIdentifier());
            responseCode(other.getResponseCode());
            responseData(other.getResponseData());
            responseText(other.getResponseText());
            roomId(other.getRoomId());
            return this;
        }

        @JsonSetter(value = "isSuccess", nulls = Nulls.SKIP)
        public Builder isSuccess(Optional<Boolean> isSuccess) {
            this.isSuccess = isSuccess;
            return this;
        }

        public Builder isSuccess(Boolean isSuccess) {
            this.isSuccess = Optional.ofNullable(isSuccess);
            return this;
        }

        @JsonSetter(value = "pageIdentifier", nulls = Nulls.SKIP)
        public Builder pageIdentifier(Optional<String> pageIdentifier) {
            this.pageIdentifier = pageIdentifier;
            return this;
        }

        public Builder pageIdentifier(String pageIdentifier) {
            this.pageIdentifier = Optional.ofNullable(pageIdentifier);
            return this;
        }

        @JsonSetter(value = "responseCode", nulls = Nulls.SKIP)
        public Builder responseCode(Optional<Integer> responseCode) {
            this.responseCode = responseCode;
            return this;
        }

        public Builder responseCode(Integer responseCode) {
            this.responseCode = Optional.ofNullable(responseCode);
            return this;
        }

        @JsonSetter(value = "responseData", nulls = Nulls.SKIP)
        public Builder responseData(Optional<ApplePayPaypointRegistrationData> responseData) {
            this.responseData = responseData;
            return this;
        }

        public Builder responseData(ApplePayPaypointRegistrationData responseData) {
            this.responseData = Optional.ofNullable(responseData);
            return this;
        }

        @JsonSetter(value = "responseText", nulls = Nulls.SKIP)
        public Builder responseText(Optional<String> responseText) {
            this.responseText = responseText;
            return this;
        }

        public Builder responseText(String responseText) {
            this.responseText = Optional.ofNullable(responseText);
            return this;
        }

        /**
         * <p>Field not in use on this endpoint</p>
         */
        @JsonSetter(value = "roomId", nulls = Nulls.SKIP)
        public Builder roomId(Optional<Long> roomId) {
            this.roomId = roomId;
            return this;
        }

        public Builder roomId(Long roomId) {
            this.roomId = Optional.ofNullable(roomId);
            return this;
        }

        public ConfigureApplePaypointApiResponse build() {
            return new ConfigureApplePaypointApiResponse(
                    isSuccess, pageIdentifier, responseCode, responseData, responseText, roomId, additionalProperties);
        }
    }
}
