/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.payabli.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.payabli.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UsrAccess.Builder.class)
public final class UsrAccess {
    private final Optional<String> roleLabel;

    private final Optional<Boolean> roleValue;

    private final Map<String, Object> additionalProperties;

    private UsrAccess(
            Optional<String> roleLabel, Optional<Boolean> roleValue, Map<String, Object> additionalProperties) {
        this.roleLabel = roleLabel;
        this.roleValue = roleValue;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("roleLabel")
    public Optional<String> getRoleLabel() {
        return roleLabel;
    }

    @JsonProperty("roleValue")
    public Optional<Boolean> getRoleValue() {
        return roleValue;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UsrAccess && equalTo((UsrAccess) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UsrAccess other) {
        return roleLabel.equals(other.roleLabel) && roleValue.equals(other.roleValue);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.roleLabel, this.roleValue);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> roleLabel = Optional.empty();

        private Optional<Boolean> roleValue = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(UsrAccess other) {
            roleLabel(other.getRoleLabel());
            roleValue(other.getRoleValue());
            return this;
        }

        @JsonSetter(value = "roleLabel", nulls = Nulls.SKIP)
        public Builder roleLabel(Optional<String> roleLabel) {
            this.roleLabel = roleLabel;
            return this;
        }

        public Builder roleLabel(String roleLabel) {
            this.roleLabel = Optional.ofNullable(roleLabel);
            return this;
        }

        @JsonSetter(value = "roleValue", nulls = Nulls.SKIP)
        public Builder roleValue(Optional<Boolean> roleValue) {
            this.roleValue = roleValue;
            return this;
        }

        public Builder roleValue(Boolean roleValue) {
            this.roleValue = Optional.ofNullable(roleValue);
            return this;
        }

        public UsrAccess build() {
            return new UsrAccess(roleLabel, roleValue, additionalProperties);
        }
    }
}
